
# 1 "ssd1306.c"

# 13 "C:\Program Files (x86)\Microchip\xc8\v1.41\include\stdint.h"
typedef signed char int8_t;

# 20
typedef signed int int16_t;

# 28
typedef signed short long int int24_t;

# 36
typedef signed long int int32_t;

# 43
typedef unsigned char uint8_t;

# 49
typedef unsigned int uint16_t;

# 56
typedef unsigned short long int uint24_t;

# 63
typedef unsigned long int uint32_t;

# 71
typedef signed char int_least8_t;

# 78
typedef signed int int_least16_t;

# 90
typedef signed short long int int_least24_t;

# 98
typedef signed long int int_least32_t;

# 105
typedef unsigned char uint_least8_t;

# 111
typedef unsigned int uint_least16_t;

# 121
typedef unsigned short long int uint_least24_t;

# 128
typedef unsigned long int uint_least32_t;

# 137
typedef signed char int_fast8_t;

# 144
typedef signed int int_fast16_t;

# 156
typedef signed short long int int_fast24_t;

# 164
typedef signed long int int_fast32_t;

# 171
typedef unsigned char uint_fast8_t;

# 177
typedef unsigned int uint_fast16_t;

# 187
typedef unsigned short long int uint_fast24_t;

# 194
typedef unsigned long int uint_fast32_t;

# 200
typedef int32_t intmax_t;




typedef uint32_t uintmax_t;




typedef int16_t intptr_t;




typedef uint16_t uintptr_t;

# 63 "ssd1306.c"
uint8_t _i2caddr, _vccstate, x_pos = 1, y_pos = 1;



int wrap = 1;

const char Font[] = {
0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x5F, 0x00, 0x00,
0x00, 0x07, 0x00, 0x07, 0x00,
0x14, 0x7F, 0x14, 0x7F, 0x14,
0x24, 0x2A, 0x7F, 0x2A, 0x12,
0x23, 0x13, 0x08, 0x64, 0x62,
0x36, 0x49, 0x56, 0x20, 0x50,
0x00, 0x08, 0x07, 0x03, 0x00,
0x00, 0x1C, 0x22, 0x41, 0x00,
0x00, 0x41, 0x22, 0x1C, 0x00,
0x2A, 0x1C, 0x7F, 0x1C, 0x2A,
0x08, 0x08, 0x3E, 0x08, 0x08,
0x00, 0x80, 0x70, 0x30, 0x00,
0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x00, 0x60, 0x60, 0x00,
0x20, 0x10, 0x08, 0x04, 0x02,
0x3E, 0x51, 0x49, 0x45, 0x3E,
0x00, 0x42, 0x7F, 0x40, 0x00,
0x72, 0x49, 0x49, 0x49, 0x46,
0x21, 0x41, 0x49, 0x4D, 0x33,
0x18, 0x14, 0x12, 0x7F, 0x10,
0x27, 0x45, 0x45, 0x45, 0x39,
0x3C, 0x4A, 0x49, 0x49, 0x31,
0x41, 0x21, 0x11, 0x09, 0x07,
0x36, 0x49, 0x49, 0x49, 0x36,
0x46, 0x49, 0x49, 0x29, 0x1E,
0x00, 0x00, 0x14, 0x00, 0x00,
0x00, 0x40, 0x34, 0x00, 0x00,
0x00, 0x08, 0x14, 0x22, 0x41,
0x14, 0x14, 0x14, 0x14, 0x14,
0x00, 0x41, 0x22, 0x14, 0x08,
0x02, 0x01, 0x59, 0x09, 0x06,
0x3E, 0x41, 0x5D, 0x59, 0x4E,
0x7C, 0x12, 0x11, 0x12, 0x7C,
0x7F, 0x49, 0x49, 0x49, 0x36,
0x3E, 0x41, 0x41, 0x41, 0x22,
0x7F, 0x41, 0x41, 0x41, 0x3E,
0x7F, 0x49, 0x49, 0x49, 0x41,
0x7F, 0x09, 0x09, 0x09, 0x01,
0x3E, 0x41, 0x41, 0x51, 0x73,
0x7F, 0x08, 0x08, 0x08, 0x7F,
0x00, 0x41, 0x7F, 0x41, 0x00,
0x20, 0x40, 0x41, 0x3F, 0x01,
0x7F, 0x08, 0x14, 0x22, 0x41,
0x7F, 0x40, 0x40, 0x40, 0x40,
0x7F, 0x02, 0x1C, 0x02, 0x7F,
0x7F, 0x04, 0x08, 0x10, 0x7F,
0x3E, 0x41, 0x41, 0x41, 0x3E,
0x7F, 0x09, 0x09, 0x09, 0x06,
0x3E, 0x41, 0x51, 0x21, 0x5E,
0x7F, 0x09, 0x19, 0x29, 0x46
};
const char Font2[] = {
0x26, 0x49, 0x49, 0x49, 0x32,
0x03, 0x01, 0x7F, 0x01, 0x03,
0x3F, 0x40, 0x40, 0x40, 0x3F,
0x1F, 0x20, 0x40, 0x20, 0x1F,
0x3F, 0x40, 0x38, 0x40, 0x3F,
0x63, 0x14, 0x08, 0x14, 0x63,
0x03, 0x04, 0x78, 0x04, 0x03,
0x61, 0x59, 0x49, 0x4D, 0x43,
0x00, 0x7F, 0x41, 0x41, 0x41,
0x02, 0x04, 0x08, 0x10, 0x20,
0x00, 0x41, 0x41, 0x41, 0x7F,
0x04, 0x02, 0x01, 0x02, 0x04,
0x40, 0x40, 0x40, 0x40, 0x40,
0x00, 0x03, 0x07, 0x08, 0x00,
0x20, 0x54, 0x54, 0x78, 0x40,
0x7F, 0x28, 0x44, 0x44, 0x38,
0x38, 0x44, 0x44, 0x44, 0x28,
0x38, 0x44, 0x44, 0x28, 0x7F,
0x38, 0x54, 0x54, 0x54, 0x18,
0x00, 0x08, 0x7E, 0x09, 0x02,
0x18, 0xA4, 0xA4, 0x9C, 0x78,
0x7F, 0x08, 0x04, 0x04, 0x78,
0x00, 0x44, 0x7D, 0x40, 0x00,
0x20, 0x40, 0x40, 0x3D, 0x00,
0x7F, 0x10, 0x28, 0x44, 0x00,
0x00, 0x41, 0x7F, 0x40, 0x00,
0x7C, 0x04, 0x78, 0x04, 0x78,
0x7C, 0x08, 0x04, 0x04, 0x78,
0x38, 0x44, 0x44, 0x44, 0x38,
0xFC, 0x18, 0x24, 0x24, 0x18,
0x18, 0x24, 0x24, 0x18, 0xFC,
0x7C, 0x08, 0x04, 0x04, 0x08,
0x48, 0x54, 0x54, 0x54, 0x24,
0x04, 0x04, 0x3F, 0x44, 0x24,
0x3C, 0x40, 0x40, 0x20, 0x7C,
0x1C, 0x20, 0x40, 0x20, 0x1C,
0x3C, 0x40, 0x30, 0x40, 0x3C,
0x44, 0x28, 0x10, 0x28, 0x44,
0x4C, 0x90, 0x90, 0x90, 0x7C,
0x44, 0x64, 0x54, 0x4C, 0x44,
0x00, 0x08, 0x36, 0x41, 0x00,
0x00, 0x00, 0x77, 0x00, 0x00,
0x00, 0x41, 0x36, 0x08, 0x00,
0x02, 0x01, 0x02, 0x04, 0x02
};


void ssd1306_command(uint8_t c) {
uint8_t control = 0x00;
I2C_Start(SSD1306_STREAM);
I2C_Write(SSD1306_STREAM, _i2caddr);
I2C_Write(SSD1306_STREAM, control);
I2C_Write(SSD1306_STREAM, c);
I2C_Stop(SSD1306_STREAM);
}

void SSD1306_Init(uint8_t vccstate = 0x02, uint8_t i2caddr = 0x7A) {
_vccstate = vccstate;
_i2caddr = i2caddr;

# 189
ssd1306_command(0xAE);
ssd1306_command(0xD5);
ssd1306_command(0x80);

ssd1306_command(0xA8);
ssd1306_command(64 - 1);

ssd1306_command(0xD3);
ssd1306_command(0x0);
ssd1306_command(0x40 | 0x0);
ssd1306_command(0x8D);
if (vccstate == 0x01)
{ ssd1306_command(0x10); }
else
{ ssd1306_command(0x14); }
ssd1306_command(0x20);
ssd1306_command(0x00);
ssd1306_command(0xA0 | 0x1);
ssd1306_command(0xC8);

# 216
ssd1306_command(0xDA);
ssd1306_command(0x12);
ssd1306_command(0x81);
if (vccstate == 0x01)
{ ssd1306_command(0x9F); }
else
{ ssd1306_command(0xCF); }

# 235
ssd1306_command(0xD9);
if (vccstate == 0x01)
{ ssd1306_command(0x22); }
else
{ ssd1306_command(0xF1); }
ssd1306_command(0xDB);
ssd1306_command(0x40);
ssd1306_command(0xA4);
ssd1306_command(0xA6);

ssd1306_command(0x2E);

ssd1306_command(0xAF);
}

void SSD1306_StartScrollRight(uint8_t start, uint8_t stop) {
ssd1306_command(0x26);
ssd1306_command(0X00);
ssd1306_command(start);
ssd1306_command(0X00);
ssd1306_command(stop);
ssd1306_command(0X00);
ssd1306_command(0XFF);
ssd1306_command(0x2F);
}

void SSD1306_StartScrollLeft(uint8_t start, uint8_t stop) {
ssd1306_command(0x27);
ssd1306_command(0X00);
ssd1306_command(start);
ssd1306_command(0X00);
ssd1306_command(stop);
ssd1306_command(0X00);
ssd1306_command(0XFF);
ssd1306_command(0x2F);
}

void SSD1306_StartScrollDiagRight(uint8_t start, uint8_t stop) {
ssd1306_command(0xA3);
ssd1306_command(0X00);
ssd1306_command(64);
ssd1306_command(0x29);
ssd1306_command(0X00);
ssd1306_command(start);
ssd1306_command(0X00);
ssd1306_command(stop);
ssd1306_command(0X01);
ssd1306_command(0x2F);
}

void SSD1306_StartScrollDiagLeft(uint8_t start, uint8_t stop) {
ssd1306_command(0xA3);
ssd1306_command(0X00);
ssd1306_command(64);
ssd1306_command(0x2A);
ssd1306_command(0X00);
ssd1306_command(start);
ssd1306_command(0X00);
ssd1306_command(stop);
ssd1306_command(0X01);
ssd1306_command(0x2F);
}

void SSD1306_StopScroll(void) {
ssd1306_command(0x2E);
}

void SSD1306_Dim(int1 dim) {
uint8_t contrast;
if (dim)
contrast = 0;
else {
if (_vccstate == 0x01)
contrast = 0x9F;
else
contrast = 0xCF;
}


ssd1306_command(0x81);
ssd1306_command(contrast);
}

void SSD1306_SetTextWrap(int1 w) {
wrap = w;
}

void SSD1306_InvertDisplay(int1 i) {
if (i)
ssd1306_command(0xA7);
else
ssd1306_command(0xA6);
}

void SSD1306_GotoXY(uint8_t x, uint8_t y) {
if((x > 21) || y > 8)
return;
x_pos = x;
y_pos = y;
}

void SSD1306_PutC(uint8_t c) {
uint8_t font_c;
if((c < ' ') || (c > '~'))
c = '?';
ssd1306_command(0x21);
ssd1306_command(6 * (x_pos - 1));
ssd1306_command(6 * (x_pos - 1) + 4);

ssd1306_command(0x22);
ssd1306_command(y_pos - 1);
ssd1306_command(y_pos - 1);

I2C_Start(SSD1306_STREAM);
I2C_Write(SSD1306_STREAM, _i2caddr);
I2C_Write(SSD1306_STREAM, 0x40);

for(uint8_t i = 0; i < 5; i++ ) {
if(c < 'S')
font_c = font[(c - 32) * 5 + i];
else
font_c = font2[(c - 'S') * 5 + i];

I2C_Write(SSD1306_STREAM, font_c);
}
I2C_Stop(SSD1306_STREAM);

x_pos = x_pos % 21 + 1;
if (wrap && (x_pos == 1))
y_pos = y_pos % 8 + 1;

}

void SSD1306_PutCustomC(char *c) {
uint8_t line;
ssd1306_command(0x21);
ssd1306_command(6 * (x_pos - 1));
ssd1306_command(6 * (x_pos - 1) + 4);

ssd1306_command(0x22);
ssd1306_command(y_pos - 1);
ssd1306_command(y_pos - 1);

I2C_Start(SSD1306_STREAM);
I2C_Write(SSD1306_STREAM, _i2caddr);
I2C_Write(SSD1306_STREAM, 0x40);

for(uint8_t i = 0; i < 5; i++ ) {
line = c[i];
I2C_Write(SSD1306_STREAM, line);
}
I2C_Stop(SSD1306_STREAM);

x_pos = x_pos % 21 + 1;
if (wrap && (x_pos == 1))
y_pos = y_pos % 8 + 1;

}

void SSD1306_ClearDisplay() {

ssd1306_command(0x21);
ssd1306_command(0);

ssd1306_command(127);

# 404
ssd1306_command(0x22);
ssd1306_command(0);

ssd1306_command(7);

# 414
I2C_Start(SSD1306_STREAM);
I2C_Write(SSD1306_STREAM, _i2caddr);
I2C_Write(SSD1306_STREAM, 0x40);

for(uint16_t i = 0; i < 64 * 128 / 8; i++ )
I2C_Write(SSD1306_STREAM, 0);

I2C_Stop(SSD1306_STREAM);

}

void SSD1306_FillScreen() {

ssd1306_command(0x21);
ssd1306_command(0);

ssd1306_command(127);

# 435
ssd1306_command(0x22);
ssd1306_command(0);

ssd1306_command(7);

# 445
I2C_Start(SSD1306_STREAM);
I2C_Write(SSD1306_STREAM, _i2caddr);
I2C_Write(SSD1306_STREAM, 0x40);

for(uint16_t i = 0; i < 64 * 128 / 8; i++ )
I2C_Write(SSD1306_STREAM, 0xFF);

I2C_Stop(SSD1306_STREAM);

}
