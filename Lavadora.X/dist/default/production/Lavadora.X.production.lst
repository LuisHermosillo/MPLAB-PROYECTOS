

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Dec 09 11:47:06 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 1.41
    48                           ; Generated 25/01/2017 GMT
    49                           ; 
    50                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F877A Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201                           
   202                           	psect	idataBANK0
   203  13EC                     __pidataBANK0:	
   204                           
   205                           ;initializer for _PWM_freq
   206  13EC  3488               	retlw	136
   207  13ED  3413               	retlw	19
   208  13EE  3400               	retlw	0
   209  13EF  3400               	retlw	0
   210                           
   211                           	psect	idataBANK1
   212  0004                     __pidataBANK1:	
   213                           
   214                           ;initializer for _estado
   215  0004  3450               	retlw	80
   216                           
   217                           	psect	stringtext
   218  1000                     __pstringtext:	
   219  1000                     stringtab:	
   220  1000                     __stringtab:	
   221                           
   222                           ;	String table - string pointers are 2 bytes each
   223  1000  1BFF               	btfsc	btemp+1,7
   224  1001  280A               	ljmp	stringcode
   225  1002  1383               	bcf	3,7
   226  1003  187F               	btfsc	btemp+1,0
   227  1004  1783               	bsf	3,7
   228  1005  0800               	movf	0,w
   229  1006  0A84               	incf	4,f
   230  1007  1903               	skipnz
   231  1008  0AFF               	incf	btemp+1,f
   232  1009  0008               	return
   233  100A                     stringcode:	
   234  100A  087F               	movf	btemp+1,w
   235  100B  397F               	andlw	127
   236  100C  008A               	movwf	10
   237  100D  0804               	movf	4,w
   238  100E  0A84               	incf	4,f
   239  100F  1903               	skipnz
   240  1010  0AFF               	incf	btemp+1,f
   241  1011  0082               	movwf	2
   242  1012                     __stringbase:	
   243  1012                     __end_of__stringtab:	
   244  1012                     _dpowers:	
   245  1012  3401               	retlw	1
   246  1013  3400               	retlw	0
   247  1014  340A               	retlw	10
   248  1015  3400               	retlw	0
   249  1016  3464               	retlw	100
   250  1017  3400               	retlw	0
   251  1018  34E8               	retlw	232
   252  1019  3403               	retlw	3
   253  101A  3410               	retlw	16
   254  101B  3427               	retlw	39
   255  101C                     __end_of_dpowers:	
   256  0007                     _PORTCbits	set	7
   257  0015                     _CCPR1L	set	21
   258  0017                     _CCP1CON	set	23
   259  001E                     _ADRESH	set	30
   260  001F                     _ADCON0	set	31
   261  001F                     _ADCON0bits	set	31
   262  0006                     _PORTBbits	set	6
   263  0005                     _PORTAbits	set	5
   264  0008                     _PORTDbits	set	8
   265  00BC                     _CCP1Y	set	188
   266  00BD                     _CCP1X	set	189
   267  0091                     _T2CKPS1	set	145
   268  0090                     _T2CKPS0	set	144
   269  00BA                     _CCP1M2	set	186
   270  00BB                     _CCP1M3	set	187
   271  0092                     _TMR2ON	set	146
   272  00FA                     _GO_nDONE	set	250
   273  0087                     _TRISCbits	set	135
   274  0092                     _PR2	set	146
   275  0087                     _TRISC	set	135
   276  009E                     _ADRESL	set	158
   277  009F                     _ADCON1bits	set	159
   278  0088                     _TRISDbits	set	136
   279  0085                     _TRISAbits	set	133
   280  009F                     _ADCON1	set	159
   281  0086                     _TRISBbits	set	134
   282  043A                     _TRISC2	set	1082
   283  101C                     STR_11:	
   284  101C  3420               	retlw	32	;' '
   285  101D  3420               	retlw	32	;' '
   286  101E  3420               	retlw	32	;' '
   287  101F  3420               	retlw	32	;' '
   288  1020  3420               	retlw	32	;' '
   289  1021  3420               	retlw	32	;' '
   290  1022  344C               	retlw	76	;'L'
   291  1023  3441               	retlw	65	;'A'
   292  1024  3456               	retlw	86	;'V'
   293  1025  3441               	retlw	65	;'A'
   294  1026  3444               	retlw	68	;'D'
   295  1027  344F               	retlw	79	;'O'
   296  1028  3420               	retlw	32	;' '
   297  1029  3420               	retlw	32	;' '
   298  102A  3420               	retlw	32	;' '
   299  102B  3420               	retlw	32	;' '
   300  102C  3420               	retlw	32	;' '
   301  102D  3420               	retlw	32	;' '
   302  102E  3420               	retlw	32	;' '
   303  102F  3420               	retlw	32	;' '
   304  1030  3400               	retlw	0
   305  1031                     STR_2:	
   306  1031  3420               	retlw	32	;' '
   307  1032  3420               	retlw	32	;' '
   308  1033  3420               	retlw	32	;' '
   309  1034  3420               	retlw	32	;' '
   310  1035  3420               	retlw	32	;' '
   311  1036  3420               	retlw	32	;' '
   312  1037  344C               	retlw	76	;'L'
   313  1038  3441               	retlw	65	;'A'
   314  1039  3456               	retlw	86	;'V'
   315  103A  3441               	retlw	65	;'A'
   316  103B  3444               	retlw	68	;'D'
   317  103C  344F               	retlw	79	;'O'
   318  103D  3452               	retlw	82	;'R'
   319  103E  3441               	retlw	65	;'A'
   320  103F  3420               	retlw	32	;' '
   321  1040  3420               	retlw	32	;' '
   322  1041  3420               	retlw	32	;' '
   323  1042  3420               	retlw	32	;' '
   324  1043  3420               	retlw	32	;' '
   325  1044  3420               	retlw	32	;' '
   326  1045  3400               	retlw	0
   327  1046                     STR_13:	
   328  1046  3420               	retlw	32	;' '
   329  1047  3420               	retlw	32	;' '
   330  1048  3420               	retlw	32	;' '
   331  1049  3420               	retlw	32	;' '
   332  104A  3420               	retlw	32	;' '
   333  104B  3420               	retlw	32	;' '
   334  104C  3441               	retlw	65	;'A'
   335  104D  3443               	retlw	67	;'C'
   336  104E  344C               	retlw	76	;'L'
   337  104F  3441               	retlw	65	;'A'
   338  1050  3452               	retlw	82	;'R'
   339  1051  3441               	retlw	65	;'A'
   340  1052  3444               	retlw	68	;'D'
   341  1053  344F               	retlw	79	;'O'
   342  1054  3420               	retlw	32	;' '
   343  1055  3420               	retlw	32	;' '
   344  1056  3420               	retlw	32	;' '
   345  1057  3420               	retlw	32	;' '
   346  1058  3420               	retlw	32	;' '
   347  1059  3420               	retlw	32	;' '
   348  105A  3400               	retlw	0
   349  105B                     STR_1:	
   350  105B  3420               	retlw	32	;' '
   351  105C  3420               	retlw	32	;' '
   352  105D  3420               	retlw	32	;' '
   353  105E  3420               	retlw	32	;' '
   354  105F  3420               	retlw	32	;' '
   355  1060  3420               	retlw	32	;' '
   356  1061  3420               	retlw	32	;' '
   357  1062  3441               	retlw	65	;'A'
   358  1063  3452               	retlw	82	;'R'
   359  1064  3444               	retlw	68	;'D'
   360  1065  3455               	retlw	85	;'U'
   361  1066  3449               	retlw	73	;'I'
   362  1067  344E               	retlw	78	;'N'
   363  1068  344F               	retlw	79	;'O'
   364  1069  3420               	retlw	32	;' '
   365  106A  3420               	retlw	32	;' '
   366  106B  3420               	retlw	32	;' '
   367  106C  3420               	retlw	32	;' '
   368  106D  3420               	retlw	32	;' '
   369  106E  3420               	retlw	32	;' '
   370  106F  3400               	retlw	0
   371  1070                     STR_9:	
   372  1070  3420               	retlw	32	;' '
   373  1071  3420               	retlw	32	;' '
   374  1072  3420               	retlw	32	;' '
   375  1073  3420               	retlw	32	;' '
   376  1074  3420               	retlw	32	;' '
   377  1075  3420               	retlw	32	;' '
   378  1076  3450               	retlw	80	;'P'
   379  1077  3452               	retlw	82	;'R'
   380  1078  3445               	retlw	69	;'E'
   381  1079  344C               	retlw	76	;'L'
   382  107A  3441               	retlw	65	;'A'
   383  107B  3456               	retlw	86	;'V'
   384  107C  3441               	retlw	65	;'A'
   385  107D  3444               	retlw	68	;'D'
   386  107E  344F               	retlw	79	;'O'
   387  107F  3420               	retlw	32	;' '
   388  1080  3420               	retlw	32	;' '
   389  1081  3420               	retlw	32	;' '
   390  1082  3420               	retlw	32	;' '
   391  1083  3420               	retlw	32	;' '
   392  1084  3400               	retlw	0
   393  1085                     STR_17:	
   394  1085  3420               	retlw	32	;' '
   395  1086  3420               	retlw	32	;' '
   396  1087  3420               	retlw	32	;' '
   397  1088  3420               	retlw	32	;' '
   398  1089  3420               	retlw	32	;' '
   399  108A  3420               	retlw	32	;' '
   400  108B  3446               	retlw	70	;'F'
   401  108C  3469               	retlw	105	;'i'
   402  108D  346E               	retlw	110	;'n'
   403  108E  3461               	retlw	97	;'a'
   404  108F  346C               	retlw	108	;'l'
   405  1090  3469               	retlw	105	;'i'
   406  1091  347A               	retlw	122	;'z'
   407  1092  3461               	retlw	97	;'a'
   408  1093  3464               	retlw	100	;'d'
   409  1094  346F               	retlw	111	;'o'
   410  1095  3420               	retlw	32	;' '
   411  1096  3420               	retlw	32	;' '
   412  1097  3420               	retlw	32	;' '
   413  1098  3420               	retlw	32	;' '
   414  1099  3400               	retlw	0
   415  109A                     STR_7:	
   416  109A  3420               	retlw	32	;' '
   417  109B  3420               	retlw	32	;' '
   418  109C  3420               	retlw	32	;' '
   419  109D  3420               	retlw	32	;' '
   420  109E  3450               	retlw	80	;'P'
   421  109F  3475               	retlw	117	;'u'
   422  10A0  346C               	retlw	108	;'l'
   423  10A1  3473               	retlw	115	;'s'
   424  10A2  3465               	retlw	101	;'e'
   425  10A3  3420               	retlw	32	;' '
   426  10A4  3465               	retlw	101	;'e'
   427  10A5  346D               	retlw	109	;'m'
   428  10A6  3470               	retlw	112	;'p'
   429  10A7  3465               	retlw	101	;'e'
   430  10A8  347A               	retlw	122	;'z'
   431  10A9  3461               	retlw	97	;'a'
   432  10AA  3472               	retlw	114	;'r'
   433  10AB  3420               	retlw	32	;' '
   434  10AC  3420               	retlw	32	;' '
   435  10AD  3420               	retlw	32	;' '
   436  10AE  3400               	retlw	0
   437  10AF                     STR_3:	
   438  10AF  3420               	retlw	32	;' '
   439  10B0  3420               	retlw	32	;' '
   440  10B1  3420               	retlw	32	;' '
   441  10B2  3420               	retlw	32	;' '
   442  10B3  3450               	retlw	80	;'P'
   443  10B4  3475               	retlw	117	;'u'
   444  10B5  346C               	retlw	108	;'l'
   445  10B6  3473               	retlw	115	;'s'
   446  10B7  3465               	retlw	101	;'e'
   447  10B8  3420               	retlw	32	;' '
   448  10B9  3465               	retlw	101	;'e'
   449  10BA  346D               	retlw	109	;'m'
   450  10BB  3465               	retlw	101	;'e'
   451  10BC  3470               	retlw	112	;'p'
   452  10BD  347A               	retlw	122	;'z'
   453  10BE  3461               	retlw	97	;'a'
   454  10BF  3472               	retlw	114	;'r'
   455  10C0  3420               	retlw	32	;' '
   456  10C1  3420               	retlw	32	;' '
   457  10C2  3420               	retlw	32	;' '
   458  10C3  3400               	retlw	0
   459  10C4                     STR_15:	
   460  10C4  3420               	retlw	32	;' '
   461  10C5  3420               	retlw	32	;' '
   462  10C6  3420               	retlw	32	;' '
   463  10C7  3420               	retlw	32	;' '
   464  10C8  3420               	retlw	32	;' '
   465  10C9  3420               	retlw	32	;' '
   466  10CA  3443               	retlw	67	;'C'
   467  10CB  3445               	retlw	69	;'E'
   468  10CC  344E               	retlw	78	;'N'
   469  10CD  3454               	retlw	84	;'T'
   470  10CE  3452               	retlw	82	;'R'
   471  10CF  3449               	retlw	73	;'I'
   472  10D0  3446               	retlw	70	;'F'
   473  10D1  3455               	retlw	85	;'U'
   474  10D2  3447               	retlw	71	;'G'
   475  10D3  3441               	retlw	65	;'A'
   476  10D4  3444               	retlw	68	;'D'
   477  10D5  344F               	retlw	79	;'O'
   478  10D6  3420               	retlw	32	;' '
   479  10D7  3420               	retlw	32	;' '
   480  10D8  3400               	retlw	0
   481  10D9                     STR_8:	
   482  10D9  3420               	retlw	32	;' '
   483  10DA  3420               	retlw	32	;' '
   484  10DB  3420               	retlw	32	;' '
   485  10DC  3420               	retlw	32	;' '
   486  10DD  3420               	retlw	32	;' '
   487  10DE  3420               	retlw	32	;' '
   488  10DF  3425               	retlw	37	;'%'
   489  10E0  3469               	retlw	105	;'i'
   490  10E1  343A               	retlw	58	;':'
   491  10E2  3425               	retlw	37	;'%'
   492  10E3  3469               	retlw	105	;'i'
   493  10E4  343A               	retlw	58	;':'
   494  10E5  3425               	retlw	37	;'%'
   495  10E6  3469               	retlw	105	;'i'
   496  10E7  3420               	retlw	32	;' '
   497  10E8  3420               	retlw	32	;' '
   498  10E9  3400               	retlw	0
   499  10EA                     STR_71:	
   500  10EA  342D               	retlw	45	;'-'
   501  10EB  344C               	retlw	76	;'L'
   502  10EC  3461               	retlw	97	;'a'
   503  10ED  3476               	retlw	118	;'v'
   504  10EE  3461               	retlw	97	;'a'
   505  10EF  3464               	retlw	100	;'d'
   506  10F0  346F               	retlw	111	;'o'
   507  10F1  3420               	retlw	32	;' '
   508  10F2  3444               	retlw	68	;'D'
   509  10F3  3465               	retlw	101	;'e'
   510  10F4  346C               	retlw	108	;'l'
   511  10F5  3469               	retlw	105	;'i'
   512  10F6  3463               	retlw	99	;'c'
   513  10F7  3461               	retlw	97	;'a'
   514  10F8  3464               	retlw	100	;'d'
   515  10F9  346F               	retlw	111	;'o'
   516  10FA  3400               	retlw	0
   517  10FB                     STR_47:	
   518  10FB  3445               	retlw	69	;'E'
   519  10FC  346C               	retlw	108	;'l'
   520  10FD  3420               	retlw	32	;' '
   521  10FE  346C               	retlw	108	;'l'
   522  10FF  3461               	retlw	97	;'a'
   523  1100  3476               	retlw	118	;'v'
   524  1101  3461               	retlw	97	;'a'
   525  1102  3464               	retlw	100	;'d'
   526  1103  346F               	retlw	111	;'o'
   527  1104  3420               	retlw	32	;' '
   528  1105  3464               	retlw	100	;'d'
   529  1106  3475               	retlw	117	;'u'
   530  1107  3472               	retlw	114	;'r'
   531  1108  3461               	retlw	97	;'a'
   532  1109  3400               	retlw	0
   533  110A                     STR_53:	
   534  110A  342D               	retlw	45	;'-'
   535  110B  344C               	retlw	76	;'L'
   536  110C  3461               	retlw	97	;'a'
   537  110D  3476               	retlw	118	;'v'
   538  110E  3461               	retlw	97	;'a'
   539  110F  3464               	retlw	100	;'d'
   540  1110  346F               	retlw	111	;'o'
   541  1111  3420               	retlw	32	;' '
   542  1112  344E               	retlw	78	;'N'
   543  1113  346F               	retlw	111	;'o'
   544  1114  3472               	retlw	114	;'r'
   545  1115  346D               	retlw	109	;'m'
   546  1116  3461               	retlw	97	;'a'
   547  1117  346C               	retlw	108	;'l'
   548  1118  3400               	retlw	0
   549  1119                     STR_59:	
   550  1119  342D               	retlw	45	;'-'
   551  111A  344C               	retlw	76	;'L'
   552  111B  3461               	retlw	97	;'a'
   553  111C  3476               	retlw	118	;'v'
   554  111D  3461               	retlw	97	;'a'
   555  111E  3464               	retlw	100	;'d'
   556  111F  346F               	retlw	111	;'o'
   557  1120  3420               	retlw	32	;' '
   558  1121  3452               	retlw	82	;'R'
   559  1122  3461               	retlw	97	;'a'
   560  1123  3470               	retlw	112	;'p'
   561  1124  3469               	retlw	105	;'i'
   562  1125  3464               	retlw	100	;'d'
   563  1126  346F               	retlw	111	;'o'
   564  1127  3400               	retlw	0
   565  1128                     STR_65:	
   566  1128  342D               	retlw	45	;'-'
   567  1129  344C               	retlw	76	;'L'
   568  112A  3461               	retlw	97	;'a'
   569  112B  3476               	retlw	118	;'v'
   570  112C  3461               	retlw	97	;'a'
   571  112D  3464               	retlw	100	;'d'
   572  112E  346F               	retlw	111	;'o'
   573  112F  3420               	retlw	32	;' '
   574  1130  344C               	retlw	76	;'L'
   575  1131  3465               	retlw	101	;'e'
   576  1132  346E               	retlw	110	;'n'
   577  1133  3474               	retlw	116	;'t'
   578  1134  346F               	retlw	111	;'o'
   579  1135  3400               	retlw	0
   580  1136                     STR_77:	
   581  1136  342D               	retlw	45	;'-'
   582  1137  3441               	retlw	65	;'A'
   583  1138  3463               	retlw	99	;'c'
   584  1139  3465               	retlw	101	;'e'
   585  113A  3472               	retlw	114	;'r'
   586  113B  3463               	retlw	99	;'c'
   587  113C  3461               	retlw	97	;'a'
   588  113D  3420               	retlw	32	;' '
   589  113E  3464               	retlw	100	;'d'
   590  113F  3465               	retlw	101	;'e'
   591  1140  3400               	retlw	0
   592  1141                     STR_4:	
   593  1141  3425               	retlw	37	;'%'
   594  1142  3464               	retlw	100	;'d'
   595  1143  3420               	retlw	32	;' '
   596  1144  346D               	retlw	109	;'m'
   597  1145  3469               	retlw	105	;'i'
   598  1146  346E               	retlw	110	;'n'
   599  1147  3475               	retlw	117	;'u'
   600  1148  3474               	retlw	116	;'t'
   601  1149  346F               	retlw	111	;'o'
   602  114A  3473               	retlw	115	;'s'
   603  114B  3400               	retlw	0
   604  114C                     STR_48:	
   605  114C  342D               	retlw	45	;'-'
   606  114D  3449               	retlw	73	;'I'
   607  114E  346E               	retlw	110	;'n'
   608  114F  3469               	retlw	105	;'i'
   609  1150  3463               	retlw	99	;'c'
   610  1151  3469               	retlw	105	;'i'
   611  1152  3461               	retlw	97	;'a'
   612  1153  3472               	retlw	114	;'r'
   613  1154  3400               	retlw	0
   614  1155                     STR_52:	
   615  1155  342D               	retlw	45	;'-'
   616  1156  3453               	retlw	83	;'S'
   617  1157  3461               	retlw	97	;'a'
   618  1158  346C               	retlw	108	;'l'
   619  1159  3469               	retlw	105	;'i'
   620  115A  3472               	retlw	114	;'r'
   621  115B  3400               	retlw	0
   622  115C                     STR_18:	
   623  115C  3431               	retlw	49	;'1'
   624  115D  3400               	retlw	0
   625  115E                     STR_19:	
   626  115E  3432               	retlw	50	;'2'
   627  115F  3400               	retlw	0
   628  101C                     
   629                           ; #config settings
   630  0000                     
   631                           	psect	cinit
   632  07CF                     start_initialization:	
   633  07CF                     __initialization:	
   634                           
   635                           ; Initialize objects allocated to BANK1
   636  07CF  1683               	bsf	3,5	;RP0=1, select bank1
   637  07D0  1303               	bcf	3,6	;RP1=0, select bank1
   638  07D1  120A  118A  2004  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   639  07D6  00CE               	movwf	__pdataBANK1& (0+127)
   640                           
   641                           ; Initialize objects allocated to BANK0
   642  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   643  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   644  07D9  160A  118A  23EC  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   645  07DE  00E4               	movwf	__pdataBANK0& (0+127)
   646  07DF  160A  118A  23ED  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   647  07E4  00E5               	movwf	(__pdataBANK0+1)& (0+127)
   648  07E5  160A  118A  23EE  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   649  07EA  00E6               	movwf	(__pdataBANK0+2)& (0+127)
   650  07EB  160A  118A  23EF  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   651  07F0  00E7               	movwf	(__pdataBANK0+3)& (0+127)
   652                           
   653                           ; Clear objects allocated to BANK1
   654  07F1  1383               	bcf	3,7	;select IRP bank0
   655  07F2  30BA               	movlw	low __pbssBANK1
   656  07F3  0084               	movwf	4
   657  07F4  30CE               	movlw	low (__pbssBANK1+20)
   658  07F5  160A  118A  23F0   	fcall	clear_ram0
   659                           
   660                           ; Clear objects allocated to BANK0
   661  07F8  01E0               	clrf	__pbssBANK0& (0+127)
   662  07F9  01E1               	clrf	(__pbssBANK0+1)& (0+127)
   663  07FA  01E2               	clrf	(__pbssBANK0+2)& (0+127)
   664  07FB  01E3               	clrf	(__pbssBANK0+3)& (0+127)
   665  07FC                     end_of_initialization:	
   666                           ;End of C runtime variable initialization code
   667                           
   668  07FC                     __end_of__initialization:	
   669  07FC  0183               	clrf	3
   670  07FD  120A  118A  2D69   	ljmp	_main	;jump to C main() function
   671                           
   672                           	psect	bssBANK0
   673  0060                     __pbssBANK0:	
   674  0060                     _minutAux:	
   675  0060                     	ds	2
   676  0062                     _tiempo:	
   677  0062                     	ds	2
   678                           
   679                           	psect	dataBANK0
   680  0064                     __pdataBANK0:	
   681  0064                     _PWM_freq:	
   682  0064                     	ds	4
   683                           
   684                           	psect	bssBANK1
   685  00BA                     __pbssBANK1:	
   686  00BA                     _aux:	
   687  00BA                     	ds	20
   688                           
   689                           	psect	dataBANK1
   690  00CE                     __pdataBANK1:	
   691  00CE                     _estado:	
   692  00CE                     	ds	1
   693                           
   694                           	psect	clrtext
   695  13F0                     clear_ram0:	
   696                           ;	Called with FSR containing the base address, and
   697                           ;	W with the last address+1
   698                           
   699  13F0  0064               	clrwdt	;clear the watchdog before getting into this loop
   700  13F1                     clrloop0:	
   701  13F1  0180               	clrf	0	;clear RAM location pointed to by FSR
   702  13F2  0A84               	incf	4,f	;increment pointer
   703  13F3  0604               	xorwf	4,w	;XOR with final address
   704  13F4  1903               	btfsc	3,2	;have we reached the end yet?
   705  13F5  3400               	retlw	0	;all done for this memory range, return
   706  13F6  0604               	xorwf	4,w	;XOR again to restore value
   707  13F7  2BF1               	goto	clrloop0	;do the next byte
   708                           
   709                           	psect	cstackBANK1
   710  00A0                     __pcstackBANK1:	
   711  00A0                     main@aux:	
   712                           
   713                           ; 20 bytes @ 0x0
   714  00A0                     	ds	20
   715  00B4                     main@adc:	
   716                           
   717                           ; 2 bytes @ 0x14
   718  00B4                     	ds	2
   719  00B6                     main@op:	
   720                           
   721                           ; 2 bytes @ 0x16
   722  00B6                     	ds	2
   723  00B8                     main@opcionPrincipal:	
   724                           
   725                           ; 2 bytes @ 0x18
   726  00B8                     	ds	2
   727                           
   728                           	psect	cstackCOMMON
   729  0070                     __pcstackCOMMON:	
   730  0070                     ?_Lcd_Init:	
   731  0070                     ?_Lcd_Command:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ??_Lcd_Command:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_PWM_Initialize:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_Digital_Initialize:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ??_Digital_Initialize:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ?_ADC_Initialize:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ??_ADC_Initialize:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ?_lavadoRapido:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_lavadoLento:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_lavadoDelicado:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?_Lcd_CharCP:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ??_Lcd_CharCP:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ?_ADC_Read:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ?_main:	
   771                           ; 2 bytes @ 0x0
   772                           
   773  0070                     ?___wmul:	
   774                           ; 2 bytes @ 0x0
   775                           
   776  0070                     ?___awdiv:	
   777                           ; 2 bytes @ 0x0
   778                           
   779  0070                     ?___lwdiv:	
   780                           ; 2 bytes @ 0x0
   781                           
   782  0070                     ?___ftpack:	
   783                           ; 2 bytes @ 0x0
   784                           
   785  0070                     ?___aldiv:	
   786                           ; 3 bytes @ 0x0
   787                           
   788  0070                     ___wmul@multiplier:	
   789                           ; 4 bytes @ 0x0
   790                           
   791  0070                     ___awdiv@divisor:	
   792                           ; 2 bytes @ 0x0
   793                           
   794  0070                     ___lwdiv@divisor:	
   795                           ; 2 bytes @ 0x0
   796                           
   797  0070                     ___ftpack@arg:	
   798                           ; 2 bytes @ 0x0
   799                           
   800  0070                     ___aldiv@divisor:	
   801                           ; 3 bytes @ 0x0
   802                           
   803                           
   804                           ; 4 bytes @ 0x0
   805  0070                     	ds	2
   806  0072                     ??_ADC_Read:	
   807  0072                     Lcd_CharCP@c:	
   808                           ; 1 bytes @ 0x2
   809                           
   810  0072                     Lcd_Command@command:	
   811                           ; 1 bytes @ 0x2
   812                           
   813  0072                     ___wmul@multiplicand:	
   814                           ; 1 bytes @ 0x2
   815                           
   816  0072                     ___awdiv@dividend:	
   817                           ; 2 bytes @ 0x2
   818                           
   819  0072                     ___lwdiv@dividend:	
   820                           ; 2 bytes @ 0x2
   821                           
   822                           
   823                           ; 2 bytes @ 0x2
   824  0072                     	ds	1
   825  0073                     ??_Lcd_Init:	
   826  0073                     ?_Lcd_Text:	
   827                           ; 1 bytes @ 0x3
   828                           
   829  0073                     Lcd_Text@x:	
   830                           ; 1 bytes @ 0x3
   831                           
   832  0073                     ___ftpack@exp:	
   833                           ; 1 bytes @ 0x3
   834                           
   835                           
   836                           ; 1 bytes @ 0x3
   837  0073                     	ds	1
   838  0074                     ??___wmul:	
   839  0074                     ??___awdiv:	
   840                           ; 1 bytes @ 0x4
   841                           
   842  0074                     ??___lwdiv:	
   843                           ; 1 bytes @ 0x4
   844                           
   845  0074                     ADC_Read@channel:	
   846                           ; 1 bytes @ 0x4
   847                           
   848  0074                     ___ftpack@sign:	
   849                           ; 1 bytes @ 0x4
   850                           
   851  0074                     Lcd_Text@buffer:	
   852                           ; 1 bytes @ 0x4
   853                           
   854  0074                     ___wmul@product:	
   855                           ; 2 bytes @ 0x4
   856                           
   857  0074                     ___aldiv@dividend:	
   858                           ; 2 bytes @ 0x4
   859                           
   860                           
   861                           ; 4 bytes @ 0x4
   862  0074                     	ds	1
   863  0075                     ??___ftpack:	
   864  0075                     Lcd_Init@data:	
   865                           ; 1 bytes @ 0x5
   866                           
   867  0075                     ___awdiv@counter:	
   868                           ; 1 bytes @ 0x5
   869                           
   870  0075                     ___lwdiv@quotient:	
   871                           ; 1 bytes @ 0x5
   872                           
   873                           
   874                           ; 2 bytes @ 0x5
   875  0075                     	ds	1
   876  0076                     ??_Lcd_Text:	
   877  0076                     ___awdiv@sign:	
   878                           ; 1 bytes @ 0x6
   879                           
   880                           
   881                           ; 1 bytes @ 0x6
   882  0076                     	ds	1
   883  0077                     Lcd_Text@y:	
   884  0077                     ___lwdiv@counter:	
   885                           ; 1 bytes @ 0x7
   886                           
   887  0077                     ___awdiv@quotient:	
   888                           ; 1 bytes @ 0x7
   889                           
   890                           
   891                           ; 2 bytes @ 0x7
   892  0077                     	ds	1
   893  0078                     ??___aldiv:	
   894  0078                     ?___lwmod:	
   895                           ; 1 bytes @ 0x8
   896                           
   897  0078                     ?___lwtoft:	
   898                           ; 2 bytes @ 0x8
   899                           
   900  0078                     Lcd_Text@data:	
   901                           ; 3 bytes @ 0x8
   902                           
   903  0078                     ___lwmod@divisor:	
   904                           ; 1 bytes @ 0x8
   905                           
   906  0078                     ___lwtoft@c:	
   907                           ; 2 bytes @ 0x8
   908                           
   909                           
   910                           ; 2 bytes @ 0x8
   911  0078                     	ds	1
   912  0079                     ??_PWM_Initialize:	
   913  0079                     ?_ImprimirMenuPrincipal:	
   914                           ; 1 bytes @ 0x9
   915                           
   916  0079                     ??___altoft:	
   917                           ; 1 bytes @ 0x9
   918                           
   919  0079                     ImprimirMenuPrincipal@casilla:	
   920                           ; 1 bytes @ 0x9
   921                           
   922                           
   923                           ; 2 bytes @ 0x9
   924  0079                     	ds	1
   925  007A                     ___lwmod@dividend:	
   926                           
   927                           ; 2 bytes @ 0xA
   928  007A                     	ds	1
   929  007B                     ??_ImprimirMenuPrincipal:	
   930  007B                     ??___lwtoft:	
   931                           ; 1 bytes @ 0xB
   932                           
   933  007B                     ___altoft@exp:	
   934                           ; 1 bytes @ 0xB
   935                           
   936                           
   937                           ; 1 bytes @ 0xB
   938  007B                     	ds	1
   939  007C                     ??___lwmod:	
   940  007C                     ___altoft@sign:	
   941                           ; 1 bytes @ 0xC
   942                           
   943                           
   944                           ; 1 bytes @ 0xC
   945  007C                     	ds	1
   946  007D                     ??_normal:	
   947  007D                     ??_reversa:	
   948                           ; 1 bytes @ 0xD
   949                           
   950  007D                     ___lwmod@counter:	
   951                           ; 1 bytes @ 0xD
   952                           
   953                           
   954                           ; 1 bytes @ 0xD
   955  007D                     	ds	1
   956  007E                     ??_ImprimirMenuLavado:	
   957                           
   958                           	psect	cstackBANK0
   959  0020                     __pcstackBANK0:	
   960                           ; 1 bytes @ 0xE
   961                           
   962  0020                     ?_sprintf:	
   963  0020                     ?___ftdiv:	
   964                           ; 2 bytes @ 0x0
   965                           
   966  0020                     ___aldiv@counter:	
   967                           ; 3 bytes @ 0x0
   968                           
   969  0020                     sprintf@f:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0020                     ___ftdiv@f2:	
   973                           ; 2 bytes @ 0x0
   974                           
   975                           
   976                           ; 3 bytes @ 0x0
   977  0020                     	ds	1
   978  0021                     ___aldiv@sign:	
   979                           
   980                           ; 1 bytes @ 0x1
   981  0021                     	ds	1
   982  0022                     ___aldiv@quotient:	
   983                           
   984                           ; 4 bytes @ 0x2
   985  0022                     	ds	1
   986  0023                     ___ftdiv@f1:	
   987                           
   988                           ; 3 bytes @ 0x3
   989  0023                     	ds	3
   990  0026                     ??___ftdiv:	
   991  0026                     ?___altoft:	
   992                           ; 1 bytes @ 0x6
   993                           
   994  0026                     ___altoft@c:	
   995                           ; 3 bytes @ 0x6
   996                           
   997                           
   998                           ; 4 bytes @ 0x6
   999  0026                     	ds	2
  1000  0028                     ??_sprintf:	
  1001                           
  1002                           ; 1 bytes @ 0x8
  1003  0028                     	ds	2
  1004  002A                     ___ftdiv@cntr:	
  1005                           
  1006                           ; 1 bytes @ 0xA
  1007  002A                     	ds	1
  1008  002B                     sprintf@ap:	
  1009  002B                     ___ftdiv@f3:	
  1010                           ; 1 bytes @ 0xB
  1011                           
  1012                           
  1013                           ; 3 bytes @ 0xB
  1014  002B                     	ds	1
  1015  002C                     sprintf@flag:	
  1016                           
  1017                           ; 1 bytes @ 0xC
  1018  002C                     	ds	1
  1019  002D                     sprintf@prec:	
  1020                           
  1021                           ; 1 bytes @ 0xD
  1022  002D                     	ds	1
  1023  002E                     ___ftdiv@exp:	
  1024  002E                     sprintf@val:	
  1025                           ; 1 bytes @ 0xE
  1026                           
  1027                           
  1028                           ; 2 bytes @ 0xE
  1029  002E                     	ds	1
  1030  002F                     ___ftdiv@sign:	
  1031                           
  1032                           ; 1 bytes @ 0xF
  1033  002F                     	ds	1
  1034  0030                     ?___ftmul:	
  1035  0030                     sprintf@sp:	
  1036                           ; 3 bytes @ 0x10
  1037                           
  1038  0030                     ___ftmul@f1:	
  1039                           ; 1 bytes @ 0x10
  1040                           
  1041                           
  1042                           ; 3 bytes @ 0x10
  1043  0030                     	ds	1
  1044  0031                     sprintf@c:	
  1045                           
  1046                           ; 1 bytes @ 0x11
  1047  0031                     	ds	1
  1048  0032                     ?_ImprimirMenuLavado:	
  1049  0032                     ImprimirMenuLavado@casilla:	
  1050                           ; 1 bytes @ 0x12
  1051                           
  1052                           
  1053                           ; 2 bytes @ 0x12
  1054  0032                     	ds	1
  1055  0033                     ___ftmul@f2:	
  1056                           
  1057                           ; 3 bytes @ 0x13
  1058  0033                     	ds	1
  1059  0034                     ImprimirMenuLavado@aux:	
  1060                           
  1061                           ; 5 bytes @ 0x14
  1062  0034                     	ds	2
  1063  0036                     ??___ftmul:	
  1064                           
  1065                           ; 1 bytes @ 0x16
  1066  0036                     	ds	4
  1067  003A                     ___ftmul@exp:	
  1068                           
  1069                           ; 1 bytes @ 0x1A
  1070  003A                     	ds	1
  1071  003B                     ___ftmul@f3_as_product:	
  1072                           
  1073                           ; 3 bytes @ 0x1B
  1074  003B                     	ds	3
  1075  003E                     ___ftmul@cntr:	
  1076                           
  1077                           ; 1 bytes @ 0x1E
  1078  003E                     	ds	1
  1079  003F                     ___ftmul@sign:	
  1080                           
  1081                           ; 1 bytes @ 0x1F
  1082  003F                     	ds	1
  1083  0040                     ?___fttol:	
  1084  0040                     ___fttol@f1:	
  1085                           ; 4 bytes @ 0x20
  1086                           
  1087                           
  1088                           ; 3 bytes @ 0x20
  1089  0040                     	ds	4
  1090  0044                     ??___fttol:	
  1091                           
  1092                           ; 1 bytes @ 0x24
  1093  0044                     	ds	4
  1094  0048                     ___fttol@sign1:	
  1095                           
  1096                           ; 1 bytes @ 0x28
  1097  0048                     	ds	1
  1098  0049                     ___fttol@lval:	
  1099                           
  1100                           ; 4 bytes @ 0x29
  1101  0049                     	ds	4
  1102  004D                     ___fttol@exp1:	
  1103                           
  1104                           ; 1 bytes @ 0x2D
  1105  004D                     	ds	1
  1106  004E                     ?_PWM_Duty:	
  1107  004E                     PWM_Duty@duty:	
  1108                           ; 1 bytes @ 0x2E
  1109                           
  1110                           
  1111                           ; 2 bytes @ 0x2E
  1112  004E                     	ds	2
  1113  0050                     ??_PWM_Duty:	
  1114                           
  1115                           ; 1 bytes @ 0x30
  1116  0050                     	ds	4
  1117  0054                     ?_normal:	
  1118  0054                     ?_reversa:	
  1119                           ; 1 bytes @ 0x34
  1120                           
  1121  0054                     reversa@pwm:	
  1122                           ; 1 bytes @ 0x34
  1123                           
  1124  0054                     normal@pwm:	
  1125                           ; 2 bytes @ 0x34
  1126                           
  1127                           
  1128                           ; 2 bytes @ 0x34
  1129  0054                     	ds	2
  1130  0056                     ??_lavadoRapido:	
  1131  0056                     ??_lavadoLento:	
  1132                           ; 1 bytes @ 0x36
  1133                           
  1134  0056                     ??_lavadoDelicado:	
  1135                           ; 1 bytes @ 0x36
  1136                           
  1137                           
  1138                           ; 1 bytes @ 0x36
  1139  0056                     	ds	3
  1140  0059                     lavadoRapido@i_357:	
  1141  0059                     lavadoLento@i_373:	
  1142                           ; 2 bytes @ 0x39
  1143                           
  1144  0059                     lavadoDelicado@i_389:	
  1145                           ; 2 bytes @ 0x39
  1146                           
  1147                           
  1148                           ; 2 bytes @ 0x39
  1149  0059                     	ds	2
  1150  005B                     lavadoRapido@i:	
  1151  005B                     lavadoLento@i:	
  1152                           ; 2 bytes @ 0x3B
  1153                           
  1154  005B                     lavadoDelicado@i:	
  1155                           ; 2 bytes @ 0x3B
  1156                           
  1157                           
  1158                           ; 2 bytes @ 0x3B
  1159  005B                     	ds	2
  1160  005D                     ??_main:	
  1161                           
  1162                           ; 1 bytes @ 0x3D
  1163  005D                     	ds	3
  1164                           
  1165                           	psect	maintext
  1166  0569                     __pmaintext:	
  1167 ;;
  1168 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1169 ;;
  1170 ;; *************** function _main *****************
  1171 ;; Defined at:
  1172 ;;		line 47 in file "main.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;		None
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  adc             2   20[BANK1 ] int 
  1177 ;;  aux            20    0[BANK1 ] unsigned char [20]
  1178 ;;  opcionPrinci    2   24[BANK1 ] int 
  1179 ;;  op              2   22[BANK1 ] int 
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  2   96[None  ] int 
  1182 ;; Registers used:
  1183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1184 ;; Tracked objects:
  1185 ;;		On entry : B00/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1189 ;;      Params:         0       0       0       0       0
  1190 ;;      Locals:         0       0      26       0       0
  1191 ;;      Temps:          0       3       0       0       0
  1192 ;;      Totals:         0       3      26       0       0
  1193 ;;Total ram usage:       29 bytes
  1194 ;; Hardware stack levels required when called:    5
  1195 ;; This function calls:
  1196 ;;		_ADC_Initialize
  1197 ;;		_ADC_Read
  1198 ;;		_Digital_Initialize
  1199 ;;		_ImprimirMenuLavado
  1200 ;;		_ImprimirMenuPrincipal
  1201 ;;		_Lcd_Command
  1202 ;;		_Lcd_Init
  1203 ;;		_Lcd_Text
  1204 ;;		_PWM_Duty
  1205 ;;		_PWM_Initialize
  1206 ;;		_lavadoDelicado
  1207 ;;		_lavadoLento
  1208 ;;		_lavadoRapido
  1209 ;;		_sprintf
  1210 ;; This function is called by:
  1211 ;;		Startup code after reset
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           
  1216                           ;psect for function _main
  1217  0569                     _main:	
  1218                           
  1219                           ;main.c: 48: Lcd_Init();
  1220                           
  1221                           ;incstack = 0
  1222                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1223  0569  120A  158A  216C  120A  118A  	fcall	_Lcd_Init
  1224                           
  1225                           ;main.c: 49: Lcd_Command(1);
  1226  056E  3001               	movlw	1
  1227  056F  120A  158A  20CD  120A  118A  	fcall	_Lcd_Command
  1228                           
  1229                           ;main.c: 50: Lcd_Command(12);
  1230  0574  300C               	movlw	12
  1231  0575  120A  158A  20CD  120A  118A  	fcall	_Lcd_Command
  1232                           
  1233                           ;main.c: 51: _delay((unsigned long)((100)*(4000000/4000.0)));
  1234  057A  3082               	movlw	130
  1235  057B  1283               	bcf	3,5	;RP0=0, select bank0
  1236  057C  1303               	bcf	3,6	;RP1=0, select bank0
  1237  057D  00DE               	movwf	??_main+1
  1238  057E  30DD               	movlw	221
  1239  057F  00DD               	movwf	??_main
  1240  0580                     u3877:	
  1241  0580  0BDD               	decfsz	??_main,f
  1242  0581  2D80               	goto	u3877
  1243  0582  0BDE               	decfsz	??_main+1,f
  1244  0583  2D80               	goto	u3877
  1245                           
  1246                           ;main.c: 53: PWM_Initialize();
  1247  0584  160A  118A  2551  120A  118A  	fcall	_PWM_Initialize
  1248                           
  1249                           ;main.c: 54: Digital_Initialize();
  1250  0589  160A  118A  241D  120A  118A  	fcall	_Digital_Initialize
  1251                           
  1252                           ;main.c: 55: ADC_Initialize();
  1253  058E  160A  118A  23F8  120A  118A  	fcall	_ADC_Initialize
  1254                           
  1255                           ;main.c: 57: PWM_Duty(0);
  1256  0593  3000               	movlw	0
  1257  0594  1283               	bcf	3,5	;RP0=0, select bank0
  1258  0595  1303               	bcf	3,6	;RP1=0, select bank0
  1259  0596  00CE               	movwf	PWM_Duty@duty
  1260  0597  00CF               	movwf	PWM_Duty@duty+1
  1261  0598  120A  158A  2034  120A  118A  	fcall	_PWM_Duty
  1262                           
  1263                           ;main.c: 58: PORTDbits.RD0 = 0;
  1264  059D  1283               	bcf	3,5	;RP0=0, select bank0
  1265  059E  1303               	bcf	3,6	;RP1=0, select bank0
  1266  059F  1008               	bcf	8,0	;volatile
  1267                           
  1268                           ;main.c: 59: PORTDbits.RD1 = 0;
  1269  05A0  1088               	bcf	8,1	;volatile
  1270                           
  1271                           ;main.c: 60: PORTAbits.RA5 = 0;
  1272  05A1  1285               	bcf	5,5	;volatile
  1273                           
  1274                           ;main.c: 61: PORTAbits.RA0 = 1;
  1275  05A2  1405               	bsf	5,0	;volatile
  1276                           
  1277                           ;main.c: 62: PORTAbits.RA3 = 1;
  1278  05A3  1585               	bsf	5,3	;volatile
  1279                           
  1280                           ;main.c: 64: Lcd_Text(1, 1, "       ARDUINO      ");
  1281  05A4  01F3               	clrf	Lcd_Text@x
  1282  05A5  0AF3               	incf	Lcd_Text@x,f
  1283  05A6  305B               	movlw	low (STR_1| (0+32768))
  1284  05A7  00F4               	movwf	Lcd_Text@buffer
  1285  05A8  3090               	movlw	high (STR_1| (0+32768))
  1286  05A9  00F5               	movwf	Lcd_Text@buffer+1
  1287  05AA  3001               	movlw	1
  1288  05AB  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  1289                           
  1290                           ;main.c: 65: Lcd_Text(2, 1, "      LAVADORA      ");
  1291  05B0  01F3               	clrf	Lcd_Text@x
  1292  05B1  0AF3               	incf	Lcd_Text@x,f
  1293  05B2  3031               	movlw	low (STR_2| (0+32768))
  1294  05B3  00F4               	movwf	Lcd_Text@buffer
  1295  05B4  3090               	movlw	high (STR_2| (0+32768))
  1296  05B5  00F5               	movwf	Lcd_Text@buffer+1
  1297  05B6  3002               	movlw	2
  1298  05B7  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  1299                           
  1300                           ;main.c: 66: Lcd_Text(4, 1, "    Pulse emepzar   ");
  1301  05BC  01F3               	clrf	Lcd_Text@x
  1302  05BD  0AF3               	incf	Lcd_Text@x,f
  1303  05BE  30AF               	movlw	low (STR_3| (0+32768))
  1304  05BF  00F4               	movwf	Lcd_Text@buffer
  1305  05C0  3090               	movlw	high (STR_3| (0+32768))
  1306  05C1  00F5               	movwf	Lcd_Text@buffer+1
  1307  05C2  3004               	movlw	4
  1308  05C3  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  1309  05C8                     l97:	
  1310                           ;main.c: 67: while(!PORTBbits.RB2);
  1311                           
  1312  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1313  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  1314  05CA  1D06               	btfss	6,2	;volatile
  1315  05CB  2DC8               	goto	l97
  1316                           
  1317                           ;main.c: 68: _delay((unsigned long)((300)*(4000000/4000.0)));
  1318  05CC  3002               	movlw	2
  1319  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  1320  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  1321  05CF  00DF               	movwf	??_main+2
  1322  05D0  3086               	movlw	134
  1323  05D1  00DE               	movwf	??_main+1
  1324  05D2  3098               	movlw	152
  1325  05D3  00DD               	movwf	??_main
  1326  05D4                     u3887:	
  1327  05D4  0BDD               	decfsz	??_main,f
  1328  05D5  2DD4               	goto	u3887
  1329  05D6  0BDE               	decfsz	??_main+1,f
  1330  05D7  2DD4               	goto	u3887
  1331  05D8  0BDF               	decfsz	??_main+2,f
  1332  05D9  2DD4               	goto	u3887
  1333  05DA  0000               	nop
  1334                           
  1335                           ;main.c: 70: int opcionPrincipal = 0;
  1336  05DB  1683               	bsf	3,5	;RP0=1, select bank1
  1337  05DC  1303               	bcf	3,6	;RP1=0, select bank1
  1338  05DD  01B8               	clrf	main@opcionPrincipal^(0+128)
  1339  05DE  01B9               	clrf	(main@opcionPrincipal+1)^(0+128)
  1340                           
  1341                           ;main.c: 71: int op = 0;
  1342  05DF  01B6               	clrf	main@op^(0+128)
  1343  05E0  01B7               	clrf	(main@op+1)^(0+128)
  1344                           
  1345                           ;main.c: 72: ImprimirMenuPrincipal(opcionPrincipal);
  1346  05E1  0839               	movf	(main@opcionPrincipal+1)^(0+128),w
  1347  05E2  00FA               	movwf	ImprimirMenuPrincipal@casilla+1
  1348  05E3  0838               	movf	main@opcionPrincipal^(0+128),w
  1349  05E4  00F9               	movwf	ImprimirMenuPrincipal@casilla
  1350  05E5  120A  158A  2494  120A  118A  	fcall	_ImprimirMenuPrincipal
  1351  05EA                     l2787:	
  1352                           ;main.c: 73: char aux[20];
  1353                           ;main.c: 74: while(1){
  1354                           
  1355                           
  1356                           ;main.c: 75: int adc = ADC_Read(5);
  1357  05EA  3005               	movlw	5
  1358  05EB  160A  118A  2462  120A  118A  	fcall	_ADC_Read
  1359  05F0  0871               	movf	?_ADC_Read+1,w
  1360  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  1361  05F2  1303               	bcf	3,6	;RP1=0, select bank1
  1362  05F3  00B5               	movwf	(main@adc+1)^(0+128)
  1363  05F4  0870               	movf	?_ADC_Read,w
  1364  05F5  00B4               	movwf	main@adc^(0+128)
  1365                           
  1366                           ;main.c: 76: sprintf(aux,"%d minutos", adc);
  1367  05F6  3041               	movlw	low (STR_4| (0+32768))
  1368  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1369  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1370  05F9  00A0               	movwf	sprintf@f
  1371  05FA  3091               	movlw	high (STR_4| (0+32768))
  1372  05FB  00A1               	movwf	sprintf@f+1
  1373  05FC  1683               	bsf	3,5	;RP0=1, select bank1
  1374  05FD  1303               	bcf	3,6	;RP1=0, select bank1
  1375  05FE  0835               	movf	(main@adc+1)^(0+128),w
  1376  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0600  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0601  00A3               	movwf	?_sprintf+3
  1379  0602  1683               	bsf	3,5	;RP0=1, select bank1
  1380  0603  1303               	bcf	3,6	;RP1=0, select bank1
  1381  0604  0834               	movf	main@adc^(0+128),w
  1382  0605  1283               	bcf	3,5	;RP0=0, select bank0
  1383  0606  1303               	bcf	3,6	;RP1=0, select bank0
  1384  0607  00A2               	movwf	?_sprintf+2
  1385  0608  30A0               	movlw	(low (main@aux| 0))& (0+255)
  1386  0609  120A  158A  23AC  120A  118A  	fcall	_sprintf
  1387                           
  1388                           ;main.c: 77: Lcd_Command(1);
  1389  060E  3001               	movlw	1
  1390  060F  120A  158A  20CD  120A  118A  	fcall	_Lcd_Command
  1391                           
  1392                           ;main.c: 78: Lcd_Text(1, 1, aux);
  1393  0614  01F3               	clrf	Lcd_Text@x
  1394  0615  0AF3               	incf	Lcd_Text@x,f
  1395  0616  30A0               	movlw	(low (main@aux| 0))& (0+255)
  1396  0617  00F4               	movwf	Lcd_Text@buffer
  1397  0618  3000               	movlw	0
  1398  0619  00F5               	movwf	Lcd_Text@buffer+1
  1399  061A  3001               	movlw	1
  1400  061B  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  1401                           
  1402                           ;main.c: 80: if(PORTBbits.RB0){
  1403  0620  1283               	bcf	3,5	;RP0=0, select bank0
  1404  0621  1303               	bcf	3,6	;RP1=0, select bank0
  1405  0622  1C06               	btfss	6,0	;volatile
  1406  0623  2E8C               	goto	l2819
  1407                           
  1408                           ;main.c: 81: opcionPrincipal ++;
  1409  0624  3001               	movlw	1
  1410  0625  1683               	bsf	3,5	;RP0=1, select bank1
  1411  0626  1303               	bcf	3,6	;RP1=0, select bank1
  1412  0627  07B8               	addwf	main@opcionPrincipal^(0+128),f
  1413  0628  1803               	skipnc
  1414  0629  0AB9               	incf	(main@opcionPrincipal+1)^(0+128),f
  1415  062A  3000               	movlw	0
  1416  062B  07B9               	addwf	(main@opcionPrincipal+1)^(0+128),f
  1417                           
  1418                           ;main.c: 82: if(opcionPrincipal > 3 && estado == 'P'){
  1419  062C  0839               	movf	(main@opcionPrincipal+1)^(0+128),w
  1420  062D  3A80               	xorlw	128
  1421  062E  00FF               	movwf	127
  1422  062F  3080               	movlw	128
  1423  0630  027F               	subwf	127,w
  1424  0631  1D03               	skipz
  1425  0632  2E35               	goto	u3565
  1426  0633  3004               	movlw	4
  1427  0634  0238               	subwf	main@opcionPrincipal^(0+128),w
  1428  0635                     u3565:	
  1429  0635  1C03               	skipc
  1430  0636  2E3D               	goto	l2805
  1431  0637  3050               	movlw	80
  1432  0638  1683               	bsf	3,5	;RP0=1, select bank1
  1433  0639  1303               	bcf	3,6	;RP1=0, select bank1
  1434  063A  064E               	xorwf	_estado^(0+128),w
  1435  063B  1903               	btfsc	3,2
  1436  063C  2E50               	goto	l2809
  1437  063D                     l2805:	
  1438                           ;main.c: 84: }else if(opcionPrincipal > 1 && estado == 'L'){
  1439                           
  1440                           ;main.c: 83: opcionPrincipal = opcionPrincipal - 1;
  1441                           
  1442  063D  1683               	bsf	3,5	;RP0=1, select bank1
  1443  063E  1303               	bcf	3,6	;RP1=0, select bank1
  1444  063F  0839               	movf	(main@opcionPrincipal+1)^(0+128),w
  1445  0640  3A80               	xorlw	128
  1446  0641  00FF               	movwf	127
  1447  0642  3080               	movlw	128
  1448  0643  027F               	subwf	127,w
  1449  0644  1D03               	skipz
  1450  0645  2E48               	goto	u3585
  1451  0646  3002               	movlw	2
  1452  0647  0238               	subwf	main@opcionPrincipal^(0+128),w
  1453  0648                     u3585:	
  1454  0648  1C03               	skipc
  1455  0649  2E58               	goto	l103
  1456  064A  304C               	movlw	76
  1457  064B  1683               	bsf	3,5	;RP0=1, select bank1
  1458  064C  1303               	bcf	3,6	;RP1=0, select bank1
  1459  064D  064E               	xorwf	_estado^(0+128),w
  1460  064E  1D03               	btfss	3,2
  1461  064F  2E58               	goto	l103
  1462  0650                     l2809:	
  1463                           
  1464                           ;main.c: 85: opcionPrincipal = opcionPrincipal - 1;
  1465  0650  0838               	movf	main@opcionPrincipal^(0+128),w
  1466  0651  3EFF               	addlw	255
  1467  0652  00B8               	movwf	main@opcionPrincipal^(0+128)
  1468  0653  0839               	movf	(main@opcionPrincipal+1)^(0+128),w
  1469  0654  1803               	skipnc
  1470  0655  3E01               	addlw	1
  1471  0656  3EFF               	addlw	255
  1472  0657  00B9               	movwf	(main@opcionPrincipal+1)^(0+128)
  1473  0658                     l103:	
  1474                           
  1475                           ;main.c: 86: }
  1476                           ;main.c: 88: if(estado == 'P'){
  1477  0658  3050               	movlw	80
  1478  0659  1683               	bsf	3,5	;RP0=1, select bank1
  1479  065A  1303               	bcf	3,6	;RP1=0, select bank1
  1480  065B  064E               	xorwf	_estado^(0+128),w
  1481  065C  1D03               	btfss	3,2
  1482  065D  2E68               	goto	l2813
  1483                           
  1484                           ;main.c: 89: ImprimirMenuPrincipal(opcionPrincipal );
  1485  065E  0839               	movf	(main@opcionPrincipal+1)^(0+128),w
  1486  065F  00FA               	movwf	ImprimirMenuPrincipal@casilla+1
  1487  0660  0838               	movf	main@opcionPrincipal^(0+128),w
  1488  0661  00F9               	movwf	ImprimirMenuPrincipal@casilla
  1489  0662  120A  158A  2494  120A  118A  	fcall	_ImprimirMenuPrincipal
  1490                           
  1491                           ;main.c: 90: }else if(estado == 'L'){
  1492  0667  2E7D               	goto	l2817
  1493  0668                     l2813:	
  1494  0668  304C               	movlw	76
  1495  0669  1683               	bsf	3,5	;RP0=1, select bank1
  1496  066A  1303               	bcf	3,6	;RP1=0, select bank1
  1497  066B  064E               	xorwf	_estado^(0+128),w
  1498  066C  1D03               	btfss	3,2
  1499  066D  2E7D               	goto	l2817
  1500                           
  1501                           ;main.c: 91: ImprimirMenuLavado(opcionPrincipal);
  1502  066E  0839               	movf	(main@opcionPrincipal+1)^(0+128),w
  1503  066F  1283               	bcf	3,5	;RP0=0, select bank0
  1504  0670  1303               	bcf	3,6	;RP1=0, select bank0
  1505  0671  00B3               	movwf	ImprimirMenuLavado@casilla+1
  1506  0672  1683               	bsf	3,5	;RP0=1, select bank1
  1507  0673  1303               	bcf	3,6	;RP1=0, select bank1
  1508  0674  0838               	movf	main@opcionPrincipal^(0+128),w
  1509  0675  1283               	bcf	3,5	;RP0=0, select bank0
  1510  0676  1303               	bcf	3,6	;RP1=0, select bank0
  1511  0677  00B2               	movwf	ImprimirMenuLavado@casilla
  1512  0678  160A  118A  2663  120A  118A  	fcall	_ImprimirMenuLavado
  1513  067D                     l2817:	
  1514                           
  1515                           ;main.c: 92: }
  1516                           ;main.c: 93: _delay((unsigned long)((300)*(4000000/4000.0)));
  1517  067D  3002               	movlw	2
  1518  067E  1283               	bcf	3,5	;RP0=0, select bank0
  1519  067F  1303               	bcf	3,6	;RP1=0, select bank0
  1520  0680  00DF               	movwf	??_main+2
  1521  0681  3086               	movlw	134
  1522  0682  00DE               	movwf	??_main+1
  1523  0683  3098               	movlw	152
  1524  0684  00DD               	movwf	??_main
  1525  0685                     u3897:	
  1526  0685  0BDD               	decfsz	??_main,f
  1527  0686  2E85               	goto	u3897
  1528  0687  0BDE               	decfsz	??_main+1,f
  1529  0688  2E85               	goto	u3897
  1530  0689  0BDF               	decfsz	??_main+2,f
  1531  068A  2E85               	goto	u3897
  1532  068B  0000               	nop
  1533  068C                     l2819:	
  1534                           
  1535                           ;main.c: 94: }
  1536                           ;main.c: 96: if(PORTBbits.RB1){
  1537  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1538  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1539  068E  1C86               	btfss	6,1	;volatile
  1540  068F  2EDE               	goto	l2841
  1541                           
  1542                           ;main.c: 97: opcionPrincipal --;
  1543  0690  30FF               	movlw	255
  1544  0691  1683               	bsf	3,5	;RP0=1, select bank1
  1545  0692  1303               	bcf	3,6	;RP1=0, select bank1
  1546  0693  07B8               	addwf	main@opcionPrincipal^(0+128),f
  1547  0694  1803               	skipnc
  1548  0695  0AB9               	incf	(main@opcionPrincipal+1)^(0+128),f
  1549  0696  30FF               	movlw	255
  1550  0697  07B9               	addwf	(main@opcionPrincipal+1)^(0+128),f
  1551                           
  1552                           ;main.c: 98: if(opcionPrincipal < 0 && estado == 'P'){
  1553  0698  1FB9               	btfss	(main@opcionPrincipal+1)^(0+128),7
  1554  0699  2E9E               	goto	l109
  1555  069A  3050               	movlw	80
  1556  069B  064E               	xorwf	_estado^(0+128),w
  1557  069C  1903               	btfsc	3,2
  1558  069D  2EA4               	goto	l2831
  1559  069E                     l109:	
  1560                           ;main.c: 100: }else if(opcionPrincipal < 0 && estado == 'L'){
  1561                           
  1562                           ;main.c: 99: opcionPrincipal = opcionPrincipal + 1;
  1563                           
  1564  069E  1FB9               	btfss	(main@opcionPrincipal+1)^(0+128),7
  1565  069F  2EAC               	goto	l110
  1566  06A0  304C               	movlw	76
  1567  06A1  064E               	xorwf	_estado^(0+128),w
  1568  06A2  1D03               	btfss	3,2
  1569  06A3  2EAC               	goto	l110
  1570  06A4                     l2831:	
  1571                           
  1572                           ;main.c: 101: opcionPrincipal = opcionPrincipal + 1;
  1573  06A4  0838               	movf	main@opcionPrincipal^(0+128),w
  1574  06A5  3E01               	addlw	1
  1575  06A6  00B8               	movwf	main@opcionPrincipal^(0+128)
  1576  06A7  0839               	movf	(main@opcionPrincipal+1)^(0+128),w
  1577  06A8  1803               	skipnc
  1578  06A9  3E01               	addlw	1
  1579  06AA  3E00               	addlw	0
  1580  06AB  00B9               	movwf	(main@opcionPrincipal+1)^(0+128)
  1581  06AC                     l110:	
  1582                           
  1583                           ;main.c: 102: }
  1584                           ;main.c: 104: if(estado == 'P'){
  1585  06AC  3050               	movlw	80
  1586  06AD  064E               	xorwf	_estado^(0+128),w
  1587  06AE  1D03               	btfss	3,2
  1588  06AF  2EBA               	goto	l2835
  1589                           
  1590                           ;main.c: 105: ImprimirMenuPrincipal(opcionPrincipal );
  1591  06B0  0839               	movf	(main@opcionPrincipal+1)^(0+128),w
  1592  06B1  00FA               	movwf	ImprimirMenuPrincipal@casilla+1
  1593  06B2  0838               	movf	main@opcionPrincipal^(0+128),w
  1594  06B3  00F9               	movwf	ImprimirMenuPrincipal@casilla
  1595  06B4  120A  158A  2494  120A  118A  	fcall	_ImprimirMenuPrincipal
  1596                           
  1597                           ;main.c: 106: }else if(estado == 'L'){
  1598  06B9  2ECF               	goto	l2839
  1599  06BA                     l2835:	
  1600  06BA  304C               	movlw	76
  1601  06BB  1683               	bsf	3,5	;RP0=1, select bank1
  1602  06BC  1303               	bcf	3,6	;RP1=0, select bank1
  1603  06BD  064E               	xorwf	_estado^(0+128),w
  1604  06BE  1D03               	btfss	3,2
  1605  06BF  2ECF               	goto	l2839
  1606                           
  1607                           ;main.c: 107: ImprimirMenuLavado(opcionPrincipal);
  1608  06C0  0839               	movf	(main@opcionPrincipal+1)^(0+128),w
  1609  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  1610  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  1611  06C3  00B3               	movwf	ImprimirMenuLavado@casilla+1
  1612  06C4  1683               	bsf	3,5	;RP0=1, select bank1
  1613  06C5  1303               	bcf	3,6	;RP1=0, select bank1
  1614  06C6  0838               	movf	main@opcionPrincipal^(0+128),w
  1615  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1616  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1617  06C9  00B2               	movwf	ImprimirMenuLavado@casilla
  1618  06CA  160A  118A  2663  120A  118A  	fcall	_ImprimirMenuLavado
  1619  06CF                     l2839:	
  1620                           
  1621                           ;main.c: 108: }
  1622                           ;main.c: 110: _delay((unsigned long)((300)*(4000000/4000.0)));
  1623  06CF  3002               	movlw	2
  1624  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  1625  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  1626  06D2  00DF               	movwf	??_main+2
  1627  06D3  3086               	movlw	134
  1628  06D4  00DE               	movwf	??_main+1
  1629  06D5  3098               	movlw	152
  1630  06D6  00DD               	movwf	??_main
  1631  06D7                     u3907:	
  1632  06D7  0BDD               	decfsz	??_main,f
  1633  06D8  2ED7               	goto	u3907
  1634  06D9  0BDE               	decfsz	??_main+1,f
  1635  06DA  2ED7               	goto	u3907
  1636  06DB  0BDF               	decfsz	??_main+2,f
  1637  06DC  2ED7               	goto	u3907
  1638  06DD  0000               	nop
  1639  06DE                     l2841:	
  1640                           
  1641                           ;main.c: 111: }
  1642                           ;main.c: 112: if(estado == 'S'){
  1643  06DE  3053               	movlw	83
  1644  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  1645  06E0  1303               	bcf	3,6	;RP1=0, select bank1
  1646  06E1  064E               	xorwf	_estado^(0+128),w
  1647  06E2  1D03               	btfss	3,2
  1648  06E3  2F34               	goto	l2857
  1649                           
  1650                           ;main.c: 113: Lcd_Command(1);
  1651  06E4  3001               	movlw	1
  1652  06E5  120A  158A  20CD  120A  118A  	fcall	_Lcd_Command
  1653                           
  1654                           ;main.c: 114: Lcd_Text(1, 1, "       ARDUINO      ");
  1655  06EA  01F3               	clrf	Lcd_Text@x
  1656  06EB  0AF3               	incf	Lcd_Text@x,f
  1657  06EC  305B               	movlw	low (STR_1| (0+32768))
  1658  06ED  00F4               	movwf	Lcd_Text@buffer
  1659  06EE  3090               	movlw	high (STR_1| (0+32768))
  1660  06EF  00F5               	movwf	Lcd_Text@buffer+1
  1661  06F0  3001               	movlw	1
  1662  06F1  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  1663                           
  1664                           ;main.c: 115: Lcd_Text(2, 1, "      LAVADORA      ");
  1665  06F6  01F3               	clrf	Lcd_Text@x
  1666  06F7  0AF3               	incf	Lcd_Text@x,f
  1667  06F8  3031               	movlw	low (STR_2| (0+32768))
  1668  06F9  00F4               	movwf	Lcd_Text@buffer
  1669  06FA  3090               	movlw	high (STR_2| (0+32768))
  1670  06FB  00F5               	movwf	Lcd_Text@buffer+1
  1671  06FC  3002               	movlw	2
  1672  06FD  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  1673                           
  1674                           ;main.c: 116: Lcd_Text(4, 1, "    Pulse empezar   ");
  1675  0702  01F3               	clrf	Lcd_Text@x
  1676  0703  0AF3               	incf	Lcd_Text@x,f
  1677  0704  309A               	movlw	low (STR_7| (0+32768))
  1678  0705  00F4               	movwf	Lcd_Text@buffer
  1679  0706  3090               	movlw	high (STR_7| (0+32768))
  1680  0707  00F5               	movwf	Lcd_Text@buffer+1
  1681  0708  3004               	movlw	4
  1682  0709  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  1683  070E                     l116:	
  1684                           ;main.c: 117: while(!PORTBbits.RB2);
  1685                           
  1686  070E  1283               	bcf	3,5	;RP0=0, select bank0
  1687  070F  1303               	bcf	3,6	;RP1=0, select bank0
  1688  0710  1D06               	btfss	6,2	;volatile
  1689  0711  2F0E               	goto	l116
  1690                           
  1691                           ;main.c: 118: _delay((unsigned long)((300)*(4000000/4000.0)));
  1692  0712  3002               	movlw	2
  1693  0713  1283               	bcf	3,5	;RP0=0, select bank0
  1694  0714  1303               	bcf	3,6	;RP1=0, select bank0
  1695  0715  00DF               	movwf	??_main+2
  1696  0716  3086               	movlw	134
  1697  0717  00DE               	movwf	??_main+1
  1698  0718  3098               	movlw	152
  1699  0719  00DD               	movwf	??_main
  1700  071A                     u3917:	
  1701  071A  0BDD               	decfsz	??_main,f
  1702  071B  2F1A               	goto	u3917
  1703  071C  0BDE               	decfsz	??_main+1,f
  1704  071D  2F1A               	goto	u3917
  1705  071E  0BDF               	decfsz	??_main+2,f
  1706  071F  2F1A               	goto	u3917
  1707  0720  0000               	nop
  1708                           
  1709                           ;main.c: 119: estado = 'P';
  1710  0721  3050               	movlw	80
  1711  0722  1283               	bcf	3,5	;RP0=0, select bank0
  1712  0723  1303               	bcf	3,6	;RP1=0, select bank0
  1713  0724  00DD               	movwf	??_main
  1714  0725  085D               	movf	??_main,w
  1715  0726  1683               	bsf	3,5	;RP0=1, select bank1
  1716  0727  1303               	bcf	3,6	;RP1=0, select bank1
  1717  0728  00CE               	movwf	_estado^(0+128)
  1718                           
  1719                           ;main.c: 120: opcionPrincipal = 0;
  1720  0729  01B8               	clrf	main@opcionPrincipal^(0+128)
  1721  072A  01B9               	clrf	(main@opcionPrincipal+1)^(0+128)
  1722                           
  1723                           ;main.c: 121: ImprimirMenuPrincipal(opcionPrincipal);
  1724  072B  0839               	movf	(main@opcionPrincipal+1)^(0+128),w
  1725  072C  00FA               	movwf	ImprimirMenuPrincipal@casilla+1
  1726  072D  0838               	movf	main@opcionPrincipal^(0+128),w
  1727  072E  00F9               	movwf	ImprimirMenuPrincipal@casilla
  1728  072F  120A  158A  2494  120A  118A  	fcall	_ImprimirMenuPrincipal
  1729  0734                     l2857:	
  1730                           
  1731                           ;main.c: 122: }
  1732                           ;main.c: 123: if(estado == 'P'){
  1733  0734  3050               	movlw	80
  1734  0735  1683               	bsf	3,5	;RP0=1, select bank1
  1735  0736  1303               	bcf	3,6	;RP1=0, select bank1
  1736  0737  064E               	xorwf	_estado^(0+128),w
  1737  0738  1D03               	btfss	3,2
  1738  0739  2F83               	goto	l2881
  1739                           
  1740                           ;main.c: 124: if(PORTBbits.RB2 && opcionPrincipal != 3 && opcionPrincipal != -1){
  1741  073A  1283               	bcf	3,5	;RP0=0, select bank0
  1742  073B  1303               	bcf	3,6	;RP1=0, select bank0
  1743  073C  1D06               	btfss	6,2	;volatile
  1744  073D  2F67               	goto	l2871
  1745  073E  3003               	movlw	3
  1746  073F  1683               	bsf	3,5	;RP0=1, select bank1
  1747  0740  1303               	bcf	3,6	;RP1=0, select bank1
  1748  0741  0638               	xorwf	main@opcionPrincipal^(0+128),w
  1749  0742  0439               	iorwf	(main@opcionPrincipal+1)^(0+128),w
  1750  0743  1903               	btfsc	3,2
  1751  0744  2F67               	goto	l2871
  1752  0745  0A38               	incf	main@opcionPrincipal^(0+128),w
  1753  0746  1903               	btfsc	3,2
  1754  0747  0A39               	incf	(main@opcionPrincipal+1)^(0+128),w
  1755  0748  1903               	btfsc	3,2
  1756  0749  2F67               	goto	l2871
  1757                           
  1758                           ;main.c: 125: estado = 'L';
  1759  074A  304C               	movlw	76
  1760  074B  1283               	bcf	3,5	;RP0=0, select bank0
  1761  074C  1303               	bcf	3,6	;RP1=0, select bank0
  1762  074D  00DD               	movwf	??_main
  1763  074E  085D               	movf	??_main,w
  1764  074F  1683               	bsf	3,5	;RP0=1, select bank1
  1765  0750  1303               	bcf	3,6	;RP1=0, select bank1
  1766  0751  00CE               	movwf	_estado^(0+128)
  1767                           
  1768                           ;main.c: 126: op = opcionPrincipal;
  1769  0752  0839               	movf	(main@opcionPrincipal+1)^(0+128),w
  1770  0753  00B7               	movwf	(main@op+1)^(0+128)
  1771  0754  0838               	movf	main@opcionPrincipal^(0+128),w
  1772  0755  00B6               	movwf	main@op^(0+128)
  1773                           
  1774                           ;main.c: 127: opcionPrincipal = 0;
  1775  0756  01B8               	clrf	main@opcionPrincipal^(0+128)
  1776  0757  01B9               	clrf	(main@opcionPrincipal+1)^(0+128)
  1777                           
  1778                           ;main.c: 128: ImprimirMenuLavado(opcionPrincipal);
  1779  0758  0839               	movf	(main@opcionPrincipal+1)^(0+128),w
  1780  0759  1283               	bcf	3,5	;RP0=0, select bank0
  1781  075A  1303               	bcf	3,6	;RP1=0, select bank0
  1782  075B  00B3               	movwf	ImprimirMenuLavado@casilla+1
  1783  075C  1683               	bsf	3,5	;RP0=1, select bank1
  1784  075D  1303               	bcf	3,6	;RP1=0, select bank1
  1785  075E  0838               	movf	main@opcionPrincipal^(0+128),w
  1786  075F  1283               	bcf	3,5	;RP0=0, select bank0
  1787  0760  1303               	bcf	3,6	;RP1=0, select bank0
  1788  0761  00B2               	movwf	ImprimirMenuLavado@casilla
  1789  0762  160A  118A  2663  120A  118A  	fcall	_ImprimirMenuLavado
  1790  0767                     l2871:	
  1791                           
  1792                           ;main.c: 129: }
  1793                           ;main.c: 130: if(PORTBbits.RB2 && opcionPrincipal == 3){
  1794  0767  1283               	bcf	3,5	;RP0=0, select bank0
  1795  0768  1303               	bcf	3,6	;RP1=0, select bank0
  1796  0769  1D06               	btfss	6,2	;volatile
  1797  076A  2F7A               	goto	l2877
  1798  076B  3003               	movlw	3
  1799  076C  1683               	bsf	3,5	;RP0=1, select bank1
  1800  076D  1303               	bcf	3,6	;RP1=0, select bank1
  1801  076E  0638               	xorwf	main@opcionPrincipal^(0+128),w
  1802  076F  0439               	iorwf	(main@opcionPrincipal+1)^(0+128),w
  1803  0770  1D03               	btfss	3,2
  1804  0771  2F7A               	goto	l2877
  1805                           
  1806                           ;main.c: 131: estado = 'S';
  1807  0772  3053               	movlw	83
  1808  0773  1283               	bcf	3,5	;RP0=0, select bank0
  1809  0774  1303               	bcf	3,6	;RP1=0, select bank0
  1810  0775  00DD               	movwf	??_main
  1811  0776  085D               	movf	??_main,w
  1812  0777  1683               	bsf	3,5	;RP0=1, select bank1
  1813  0778  1303               	bcf	3,6	;RP1=0, select bank1
  1814  0779  00CE               	movwf	_estado^(0+128)
  1815  077A                     l2877:	
  1816                           
  1817                           ;main.c: 132: }
  1818                           ;main.c: 133: if(PORTBbits.RB3){
  1819  077A  1283               	bcf	3,5	;RP0=0, select bank0
  1820  077B  1D86               	btfss	6,3	;volatile
  1821  077C  2F83               	goto	l2881
  1822                           
  1823                           ;main.c: 134: estado = 'S';
  1824  077D  3053               	movlw	83
  1825  077E  00DD               	movwf	??_main
  1826  077F  085D               	movf	??_main,w
  1827  0780  1683               	bsf	3,5	;RP0=1, select bank1
  1828  0781  1303               	bcf	3,6	;RP1=0, select bank1
  1829  0782  00CE               	movwf	_estado^(0+128)
  1830  0783                     l2881:	
  1831                           
  1832                           ;main.c: 135: }
  1833                           ;main.c: 136: }
  1834                           ;main.c: 138: if(estado == 'L'){
  1835  0783  304C               	movlw	76
  1836  0784  1683               	bsf	3,5	;RP0=1, select bank1
  1837  0785  1303               	bcf	3,6	;RP1=0, select bank1
  1838  0786  064E               	xorwf	_estado^(0+128),w
  1839  0787  1D03               	btfss	3,2
  1840  0788  2DEA               	goto	l2787
  1841                           
  1842                           ;main.c: 139: if((PORTBbits.RB2 && opcionPrincipal == 1) || PORTBbits.RB3){
  1843  0789  1283               	bcf	3,5	;RP0=0, select bank0
  1844  078A  1303               	bcf	3,6	;RP1=0, select bank0
  1845  078B  1D06               	btfss	6,2	;volatile
  1846  078C  2F93               	goto	l128
  1847  078D  1683               	bsf	3,5	;RP0=1, select bank1
  1848  078E  1303               	bcf	3,6	;RP1=0, select bank1
  1849  078F  0338               	decf	main@opcionPrincipal^(0+128),w
  1850  0790  0439               	iorwf	(main@opcionPrincipal+1)^(0+128),w
  1851  0791  1903               	btfsc	3,2
  1852  0792  2F96               	goto	l2887
  1853  0793                     l128:	
  1854  0793  1283               	bcf	3,5	;RP0=0, select bank0
  1855  0794  1D86               	btfss	6,3	;volatile
  1856  0795  2FA8               	goto	l2893
  1857  0796                     l2887:	
  1858                           
  1859                           ;main.c: 140: estado = 'P';
  1860  0796  3050               	movlw	80
  1861  0797  1283               	bcf	3,5	;RP0=0, select bank0
  1862  0798  00DD               	movwf	??_main
  1863  0799  085D               	movf	??_main,w
  1864  079A  1683               	bsf	3,5	;RP0=1, select bank1
  1865  079B  1303               	bcf	3,6	;RP1=0, select bank1
  1866  079C  00CE               	movwf	_estado^(0+128)
  1867                           
  1868                           ;main.c: 141: opcionPrincipal = 0;
  1869  079D  01B8               	clrf	main@opcionPrincipal^(0+128)
  1870  079E  01B9               	clrf	(main@opcionPrincipal+1)^(0+128)
  1871                           
  1872                           ;main.c: 142: ImprimirMenuPrincipal(opcionPrincipal);
  1873  079F  0839               	movf	(main@opcionPrincipal+1)^(0+128),w
  1874  07A0  00FA               	movwf	ImprimirMenuPrincipal@casilla+1
  1875  07A1  0838               	movf	main@opcionPrincipal^(0+128),w
  1876  07A2  00F9               	movwf	ImprimirMenuPrincipal@casilla
  1877  07A3  120A  158A  2494  120A  118A  	fcall	_ImprimirMenuPrincipal
  1878  07A8                     l2893:	
  1879                           
  1880                           ;main.c: 143: }
  1881                           ;main.c: 144: if(PORTBbits.RB2){
  1882  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  1883  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  1884  07AA  1D06               	btfss	6,2	;volatile
  1885  07AB  2DEA               	goto	l2787
  1886                           
  1887                           ;main.c: 145: if(op == 0){
  1888  07AC  1683               	bsf	3,5	;RP0=1, select bank1
  1889  07AD  1303               	bcf	3,6	;RP1=0, select bank1
  1890  07AE  0836               	movf	main@op^(0+128),w
  1891  07AF  0437               	iorwf	(main@op+1)^(0+128),w
  1892  07B0  1D03               	btfss	3,2
  1893  07B1  2FB7               	goto	l2899
  1894                           
  1895                           ;main.c: 146: lavadoRapido();
  1896  07B2  120A  158A  25EA  120A  118A  	fcall	_lavadoRapido
  1897  07B7                     l2899:	
  1898                           
  1899                           ;main.c: 147: }
  1900                           ;main.c: 148: if(op == 1){
  1901  07B7  1683               	bsf	3,5	;RP0=1, select bank1
  1902  07B8  1303               	bcf	3,6	;RP1=0, select bank1
  1903  07B9  0336               	decf	main@op^(0+128),w
  1904  07BA  0437               	iorwf	(main@op+1)^(0+128),w
  1905  07BB  1D03               	btfss	3,2
  1906  07BC  2FC2               	goto	l2903
  1907                           
  1908                           ;main.c: 149: lavadoLento();
  1909  07BD  120A  118A  2308  120A  118A  	fcall	_lavadoLento
  1910  07C2                     l2903:	
  1911                           
  1912                           ;main.c: 150: }
  1913                           ;main.c: 151: if(op == 2){
  1914  07C2  3002               	movlw	2
  1915  07C3  1683               	bsf	3,5	;RP0=1, select bank1
  1916  07C4  1303               	bcf	3,6	;RP1=0, select bank1
  1917  07C5  0636               	xorwf	main@op^(0+128),w
  1918  07C6  0437               	iorwf	(main@op+1)^(0+128),w
  1919  07C7  1D03               	btfss	3,2
  1920  07C8  2DEA               	goto	l2787
  1921                           
  1922                           ;main.c: 152: lavadoDelicado();
  1923  07C9  120A  118A  20A7  120A  118A  	fcall	_lavadoDelicado
  1924  07CE  2DEA               	goto	l2787
  1925  07CF                     __end_of_main:	
  1926                           ;main.c: 153: }
  1927                           ;main.c: 154: }
  1928                           ;main.c: 155: }
  1929                           ;main.c: 156: }
  1930                           ;main.c: 158: return 0;
  1931                           ;	Return value of _main is never used
  1932                           
  1933                           
  1934                           	psect	text1
  1935  0DEA                     __ptext1:	
  1936 ;; *************** function _lavadoRapido *****************
  1937 ;; Defined at:
  1938 ;;		line 161 in file "main.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  i               2   57[BANK0 ] int 
  1943 ;;  i               2   59[BANK0 ] int 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1953 ;;      Params:         0       0       0       0       0
  1954 ;;      Locals:         0       4       0       0       0
  1955 ;;      Temps:          0       3       0       0       0
  1956 ;;      Totals:         0       7       0       0       0
  1957 ;;Total ram usage:        7 bytes
  1958 ;; Hardware stack levels used:    1
  1959 ;; Hardware stack levels required when called:    4
  1960 ;; This function calls:
  1961 ;;		_Lcd_Command
  1962 ;;		_Lcd_Text
  1963 ;;		___awdiv
  1964 ;;		___wmul
  1965 ;;		_normal
  1966 ;;		_reversa
  1967 ;;		_sprintf
  1968 ;; This function is called by:
  1969 ;;		_main
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           
  1974                           ;psect for function _lavadoRapido
  1975  0DEA                     _lavadoRapido:	
  1976                           
  1977                           ;main.c: 162: Lcd_Command(1);
  1978                           
  1979                           ;incstack = 0
  1980                           ; Regs used in _lavadoRapido: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1981  0DEA  3001               	movlw	1
  1982  0DEB  120A  158A  20CD  120A  158A  	fcall	_Lcd_Command
  1983                           
  1984                           ;main.c: 164: PORTAbits.RA0 = 0;
  1985  0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  1986  0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  1987  0DF2  1005               	bcf	5,0	;volatile
  1988                           
  1989                           ;main.c: 165: PORTAbits.RA1 = 1;
  1990  0DF3  1485               	bsf	5,1	;volatile
  1991                           
  1992                           ;main.c: 166: PORTAbits.RA2 = 1;
  1993  0DF4  1505               	bsf	5,2	;volatile
  1994                           
  1995                           ;main.c: 167: PORTAbits.RA3 = 0;
  1996  0DF5  1185               	bcf	5,3	;volatile
  1997                           
  1998                           ;main.c: 178: for (int i = 60*tiempo; i > 0; i--) {
  1999  0DF6  0863               	movf	_tiempo+1,w
  2000  0DF7  00F1               	movwf	___wmul@multiplier+1
  2001  0DF8  0862               	movf	_tiempo,w
  2002  0DF9  00F0               	movwf	___wmul@multiplier
  2003  0DFA  303C               	movlw	60
  2004  0DFB  00F2               	movwf	___wmul@multiplicand
  2005  0DFC  3000               	movlw	0
  2006  0DFD  00F3               	movwf	___wmul@multiplicand+1
  2007  0DFE  160A  118A  2441  120A  158A  	fcall	___wmul
  2008  0E03  0871               	movf	?___wmul+1,w
  2009  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  2010  0E05  1303               	bcf	3,6	;RP1=0, select bank0
  2011  0E06  00DC               	movwf	lavadoRapido@i+1
  2012  0E07  0870               	movf	?___wmul,w
  2013  0E08  00DB               	movwf	lavadoRapido@i
  2014  0E09  085C               	movf	lavadoRapido@i+1,w
  2015  0E0A  3A80               	xorlw	128
  2016  0E0B  00FF               	movwf	127
  2017  0E0C  3080               	movlw	128
  2018  0E0D  027F               	subwf	127,w
  2019  0E0E  1D03               	skipz
  2020  0E0F  2E12               	goto	u3165
  2021  0E10  3001               	movlw	1
  2022  0E11  025B               	subwf	lavadoRapido@i,w
  2023  0E12                     u3165:	
  2024  0E12  1C03               	btfss	3,0
  2025  0E13  2F95               	goto	l139
  2026  0E14                     l2477:	
  2027                           
  2028                           ;main.c: 179: minutAux = i/60;
  2029  0E14  303C               	movlw	60
  2030  0E15  00F0               	movwf	___awdiv@divisor
  2031  0E16  3000               	movlw	0
  2032  0E17  00F1               	movwf	___awdiv@divisor+1
  2033  0E18  1283               	bcf	3,5	;RP0=0, select bank0
  2034  0E19  1303               	bcf	3,6	;RP1=0, select bank0
  2035  0E1A  085C               	movf	lavadoRapido@i+1,w
  2036  0E1B  00F3               	movwf	___awdiv@dividend+1
  2037  0E1C  085B               	movf	lavadoRapido@i,w
  2038  0E1D  00F2               	movwf	___awdiv@dividend
  2039  0E1E  160A  118A  259E  120A  158A  	fcall	___awdiv
  2040  0E23  0871               	movf	?___awdiv+1,w
  2041  0E24  1283               	bcf	3,5	;RP0=0, select bank0
  2042  0E25  1303               	bcf	3,6	;RP1=0, select bank0
  2043  0E26  00E1               	movwf	_minutAux+1
  2044  0E27  0870               	movf	?___awdiv,w
  2045  0E28  00E0               	movwf	_minutAux
  2046                           
  2047                           ;main.c: 180: sprintf(aux,"      %i:%i:%i  ", (minutAux/60), (i/60), (i-minutAux*60));
  2048  0E29  30D9               	movlw	low (STR_8| (0+32768))
  2049  0E2A  00A0               	movwf	sprintf@f
  2050  0E2B  3090               	movlw	high (STR_8| (0+32768))
  2051  0E2C  00A1               	movwf	sprintf@f+1
  2052  0E2D  303C               	movlw	60
  2053  0E2E  00F0               	movwf	___awdiv@divisor
  2054  0E2F  3000               	movlw	0
  2055  0E30  00F1               	movwf	___awdiv@divisor+1
  2056  0E31  0861               	movf	_minutAux+1,w
  2057  0E32  00F3               	movwf	___awdiv@dividend+1
  2058  0E33  0860               	movf	_minutAux,w
  2059  0E34  00F2               	movwf	___awdiv@dividend
  2060  0E35  160A  118A  259E  120A  158A  	fcall	___awdiv
  2061  0E3A  0871               	movf	?___awdiv+1,w
  2062  0E3B  1283               	bcf	3,5	;RP0=0, select bank0
  2063  0E3C  1303               	bcf	3,6	;RP1=0, select bank0
  2064  0E3D  00A3               	movwf	?_sprintf+3
  2065  0E3E  0870               	movf	?___awdiv,w
  2066  0E3F  00A2               	movwf	?_sprintf+2
  2067  0E40  303C               	movlw	60
  2068  0E41  00F0               	movwf	___awdiv@divisor
  2069  0E42  3000               	movlw	0
  2070  0E43  00F1               	movwf	___awdiv@divisor+1
  2071  0E44  085C               	movf	lavadoRapido@i+1,w
  2072  0E45  00F3               	movwf	___awdiv@dividend+1
  2073  0E46  085B               	movf	lavadoRapido@i,w
  2074  0E47  00F2               	movwf	___awdiv@dividend
  2075  0E48  160A  118A  259E  120A  158A  	fcall	___awdiv
  2076  0E4D  0871               	movf	?___awdiv+1,w
  2077  0E4E  1283               	bcf	3,5	;RP0=0, select bank0
  2078  0E4F  1303               	bcf	3,6	;RP1=0, select bank0
  2079  0E50  00A5               	movwf	?_sprintf+5
  2080  0E51  0870               	movf	?___awdiv,w
  2081  0E52  00A4               	movwf	?_sprintf+4
  2082  0E53  0861               	movf	_minutAux+1,w
  2083  0E54  00F1               	movwf	___wmul@multiplier+1
  2084  0E55  0860               	movf	_minutAux,w
  2085  0E56  00F0               	movwf	___wmul@multiplier
  2086  0E57  303C               	movlw	60
  2087  0E58  00F2               	movwf	___wmul@multiplicand
  2088  0E59  3000               	movlw	0
  2089  0E5A  00F3               	movwf	___wmul@multiplicand+1
  2090  0E5B  160A  118A  2441  120A  158A  	fcall	___wmul
  2091  0E60  0970               	comf	?___wmul,w
  2092  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  2093  0E62  1303               	bcf	3,6	;RP1=0, select bank0
  2094  0E63  00D6               	movwf	??_lavadoRapido
  2095  0E64  0971               	comf	?___wmul+1,w
  2096  0E65  00D7               	movwf	??_lavadoRapido+1
  2097  0E66  0AD6               	incf	??_lavadoRapido,f
  2098  0E67  1903               	skipnz
  2099  0E68  0AD7               	incf	??_lavadoRapido+1,f
  2100  0E69  085B               	movf	lavadoRapido@i,w
  2101  0E6A  0756               	addwf	??_lavadoRapido,w
  2102  0E6B  00A6               	movwf	?_sprintf+6
  2103  0E6C  085C               	movf	lavadoRapido@i+1,w
  2104  0E6D  1803               	skipnc
  2105  0E6E  0A5C               	incf	lavadoRapido@i+1,w
  2106  0E6F  0757               	addwf	??_lavadoRapido+1,w
  2107  0E70  00A7               	movwf	?_sprintf+7
  2108  0E71  30BA               	movlw	(low (_aux| 0))& (0+255)
  2109  0E72  120A  158A  23AC  120A  158A  	fcall	_sprintf
  2110                           
  2111                           ;main.c: 181: if(i == 3540){
  2112  0E77  30D4               	movlw	212
  2113  0E78  1283               	bcf	3,5	;RP0=0, select bank0
  2114  0E79  1303               	bcf	3,6	;RP1=0, select bank0
  2115  0E7A  065B               	xorwf	lavadoRapido@i,w
  2116  0E7B  300D               	movlw	13
  2117  0E7C  1903               	skipnz
  2118  0E7D  065C               	xorwf	lavadoRapido@i+1,w
  2119  0E7E  1D03               	btfss	3,2
  2120  0E7F  2E98               	goto	l2487
  2121                           
  2122                           ;main.c: 182: Lcd_Text(2, 1, "      PRELAVADO     ");
  2123  0E80  01F3               	clrf	Lcd_Text@x
  2124  0E81  0AF3               	incf	Lcd_Text@x,f
  2125  0E82  3070               	movlw	low (STR_9| (0+32768))
  2126  0E83  00F4               	movwf	Lcd_Text@buffer
  2127  0E84  3090               	movlw	high (STR_9| (0+32768))
  2128  0E85  00F5               	movwf	Lcd_Text@buffer+1
  2129  0E86  3002               	movlw	2
  2130  0E87  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  2131                           
  2132                           ;main.c: 183: normal(581);
  2133  0E8C  3045               	movlw	69
  2134  0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  2135  0E8E  1303               	bcf	3,6	;RP1=0, select bank0
  2136  0E8F  00D4               	movwf	normal@pwm
  2137  0E90  3002               	movlw	2
  2138  0E91  00D5               	movwf	normal@pwm+1
  2139  0E92  160A  118A  2401  120A  158A  	fcall	_normal
  2140                           
  2141                           ;main.c: 184: }else if(i == 3240){
  2142  0E97  2F68               	goto	l2529
  2143  0E98                     l2487:	
  2144  0E98  30A8               	movlw	168
  2145  0E99  1283               	bcf	3,5	;RP0=0, select bank0
  2146  0E9A  1303               	bcf	3,6	;RP1=0, select bank0
  2147  0E9B  065B               	xorwf	lavadoRapido@i,w
  2148  0E9C  300C               	movlw	12
  2149  0E9D  1903               	skipnz
  2150  0E9E  065C               	xorwf	lavadoRapido@i+1,w
  2151  0E9F  1D03               	btfss	3,2
  2152  0EA0  2EAF               	goto	l2493
  2153                           
  2154                           ;main.c: 185: Lcd_Text(2, 1, "      PRELAVADO     ");
  2155  0EA1  01F3               	clrf	Lcd_Text@x
  2156  0EA2  0AF3               	incf	Lcd_Text@x,f
  2157  0EA3  3070               	movlw	low (STR_9| (0+32768))
  2158  0EA4  00F4               	movwf	Lcd_Text@buffer
  2159  0EA5  3090               	movlw	high (STR_9| (0+32768))
  2160  0EA6  00F5               	movwf	Lcd_Text@buffer+1
  2161  0EA7  3002               	movlw	2
  2162  0EA8  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  2163                           
  2164                           ;main.c: 186: reversa(581);
  2165  0EAD  3045               	movlw	69
  2166  0EAE  2F22               	goto	L2
  2167  0EAF                     l2493:	
  2168                           ;main.c: 187: }else if(i == 2940){
  2169                           
  2170  0EAF  307C               	movlw	124
  2171  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  2172  0EB1  1303               	bcf	3,6	;RP1=0, select bank0
  2173  0EB2  065B               	xorwf	lavadoRapido@i,w
  2174  0EB3  300B               	movlw	11
  2175  0EB4  1903               	skipnz
  2176  0EB5  065C               	xorwf	lavadoRapido@i+1,w
  2177  0EB6  1D03               	btfss	3,2
  2178  0EB7  2ED0               	goto	l2499
  2179                           
  2180                           ;main.c: 188: Lcd_Text(2, 1, "      LAVADO        ");
  2181  0EB8  01F3               	clrf	Lcd_Text@x
  2182  0EB9  0AF3               	incf	Lcd_Text@x,f
  2183  0EBA  301C               	movlw	low (STR_11| (0+32768))
  2184  0EBB  00F4               	movwf	Lcd_Text@buffer
  2185  0EBC  3090               	movlw	high (STR_11| (0+32768))
  2186  0EBD  00F5               	movwf	Lcd_Text@buffer+1
  2187  0EBE  3002               	movlw	2
  2188  0EBF  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  2189                           
  2190                           ;main.c: 189: normal(440);
  2191  0EC4  30B8               	movlw	184
  2192  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  2193  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  2194  0EC7  00D4               	movwf	normal@pwm
  2195  0EC8  3001               	movlw	1
  2196  0EC9  00D5               	movwf	normal@pwm+1
  2197  0ECA  160A  118A  2401  120A  158A  	fcall	_normal
  2198                           
  2199                           ;main.c: 190: }else if(i == 2340){
  2200  0ECF  2F68               	goto	l2529
  2201  0ED0                     l2499:	
  2202  0ED0  3024               	movlw	36
  2203  0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  2204  0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  2205  0ED3  065B               	xorwf	lavadoRapido@i,w
  2206  0ED4  3009               	movlw	9
  2207  0ED5  1903               	skipnz
  2208  0ED6  065C               	xorwf	lavadoRapido@i+1,w
  2209  0ED7  1D03               	btfss	3,2
  2210  0ED8  2EEB               	goto	l2505
  2211                           
  2212                           ;main.c: 191: Lcd_Text(2, 1, "      LAVADO        ");
  2213  0ED9  01F3               	clrf	Lcd_Text@x
  2214  0EDA  0AF3               	incf	Lcd_Text@x,f
  2215  0EDB  301C               	movlw	low (STR_11| (0+32768))
  2216  0EDC  00F4               	movwf	Lcd_Text@buffer
  2217  0EDD  3090               	movlw	high (STR_11| (0+32768))
  2218  0EDE  00F5               	movwf	Lcd_Text@buffer+1
  2219  0EDF  3002               	movlw	2
  2220  0EE0  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  2221                           
  2222                           ;main.c: 192: reversa(440);
  2223  0EE5  30B8               	movlw	184
  2224  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  2225  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  2226  0EE8  00D4               	movwf	reversa@pwm
  2227  0EE9  3001               	movlw	1
  2228  0EEA  2F62               	goto	L1
  2229  0EEB                     l2505:	
  2230                           ;main.c: 193: }else if(i == 1740){
  2231                           
  2232  0EEB  30CC               	movlw	204
  2233  0EEC  1283               	bcf	3,5	;RP0=0, select bank0
  2234  0EED  1303               	bcf	3,6	;RP1=0, select bank0
  2235  0EEE  065B               	xorwf	lavadoRapido@i,w
  2236  0EEF  3006               	movlw	6
  2237  0EF0  1903               	skipnz
  2238  0EF1  065C               	xorwf	lavadoRapido@i+1,w
  2239  0EF2  1D03               	btfss	3,2
  2240  0EF3  2F0C               	goto	l2511
  2241                           
  2242                           ;main.c: 194: Lcd_Text(2, 1, "      ACLARADO      ");
  2243  0EF4  01F3               	clrf	Lcd_Text@x
  2244  0EF5  0AF3               	incf	Lcd_Text@x,f
  2245  0EF6  3046               	movlw	low (STR_13| (0+32768))
  2246  0EF7  00F4               	movwf	Lcd_Text@buffer
  2247  0EF8  3090               	movlw	high (STR_13| (0+32768))
  2248  0EF9  00F5               	movwf	Lcd_Text@buffer+1
  2249  0EFA  3002               	movlw	2
  2250  0EFB  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  2251                           
  2252                           ;main.c: 195: normal(661);
  2253  0F00  3095               	movlw	149
  2254  0F01  1283               	bcf	3,5	;RP0=0, select bank0
  2255  0F02  1303               	bcf	3,6	;RP1=0, select bank0
  2256  0F03  00D4               	movwf	normal@pwm
  2257  0F04  3002               	movlw	2
  2258  0F05  00D5               	movwf	normal@pwm+1
  2259  0F06  160A  118A  2401  120A  158A  	fcall	_normal
  2260                           
  2261                           ;main.c: 196: }else if(i == 1440){
  2262  0F0B  2F68               	goto	l2529
  2263  0F0C                     l2511:	
  2264  0F0C  30A0               	movlw	160
  2265  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  2266  0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  2267  0F0F  065B               	xorwf	lavadoRapido@i,w
  2268  0F10  3005               	movlw	5
  2269  0F11  1903               	skipnz
  2270  0F12  065C               	xorwf	lavadoRapido@i+1,w
  2271  0F13  1D03               	btfss	3,2
  2272  0F14  2F27               	goto	l2517
  2273                           
  2274                           ;main.c: 197: Lcd_Text(2, 1, "      ACLARADO      ");
  2275  0F15  01F3               	clrf	Lcd_Text@x
  2276  0F16  0AF3               	incf	Lcd_Text@x,f
  2277  0F17  3046               	movlw	low (STR_13| (0+32768))
  2278  0F18  00F4               	movwf	Lcd_Text@buffer
  2279  0F19  3090               	movlw	high (STR_13| (0+32768))
  2280  0F1A  00F5               	movwf	Lcd_Text@buffer+1
  2281  0F1B  3002               	movlw	2
  2282  0F1C  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  2283                           
  2284                           ;main.c: 198: reversa(661);
  2285  0F21  3095               	movlw	149
  2286  0F22                     L2:	
  2287  0F22  1283               	bcf	3,5	;RP0=0, select bank0
  2288  0F23  1303               	bcf	3,6	;RP1=0, select bank0
  2289  0F24  00D4               	movwf	reversa@pwm
  2290  0F25  3002               	movlw	2
  2291  0F26  2F62               	goto	L1
  2292  0F27                     l2517:	
  2293                           ;main.c: 199: }else if(i == 1140){
  2294                           
  2295  0F27  3074               	movlw	116
  2296  0F28  1283               	bcf	3,5	;RP0=0, select bank0
  2297  0F29  1303               	bcf	3,6	;RP1=0, select bank0
  2298  0F2A  065B               	xorwf	lavadoRapido@i,w
  2299  0F2B  3004               	movlw	4
  2300  0F2C  1903               	skipnz
  2301  0F2D  065C               	xorwf	lavadoRapido@i+1,w
  2302  0F2E  1D03               	btfss	3,2
  2303  0F2F  2F48               	goto	l2523
  2304                           
  2305                           ;main.c: 200: Lcd_Text(2, 1, "      CENTRIFUGADO  ");
  2306  0F30  01F3               	clrf	Lcd_Text@x
  2307  0F31  0AF3               	incf	Lcd_Text@x,f
  2308  0F32  30C4               	movlw	low (STR_15| (0+32768))
  2309  0F33  00F4               	movwf	Lcd_Text@buffer
  2310  0F34  3090               	movlw	high (STR_15| (0+32768))
  2311  0F35  00F5               	movwf	Lcd_Text@buffer+1
  2312  0F36  3002               	movlw	2
  2313  0F37  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  2314                           
  2315                           ;main.c: 201: normal(821);
  2316  0F3C  3035               	movlw	53
  2317  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  2318  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  2319  0F3F  00D4               	movwf	normal@pwm
  2320  0F40  3003               	movlw	3
  2321  0F41  00D5               	movwf	normal@pwm+1
  2322  0F42  160A  118A  2401  120A  158A  	fcall	_normal
  2323                           
  2324                           ;main.c: 202: }else if(i == 540){
  2325  0F47  2F68               	goto	l2529
  2326  0F48                     l2523:	
  2327  0F48  301C               	movlw	28
  2328  0F49  1283               	bcf	3,5	;RP0=0, select bank0
  2329  0F4A  1303               	bcf	3,6	;RP1=0, select bank0
  2330  0F4B  065B               	xorwf	lavadoRapido@i,w
  2331  0F4C  3002               	movlw	2
  2332  0F4D  1903               	skipnz
  2333  0F4E  065C               	xorwf	lavadoRapido@i+1,w
  2334  0F4F  1D03               	btfss	3,2
  2335  0F50  2F68               	goto	l2529
  2336                           
  2337                           ;main.c: 203: Lcd_Text(2, 1, "      CENTRIFUGADO  ");
  2338  0F51  01F3               	clrf	Lcd_Text@x
  2339  0F52  0AF3               	incf	Lcd_Text@x,f
  2340  0F53  30C4               	movlw	low (STR_15| (0+32768))
  2341  0F54  00F4               	movwf	Lcd_Text@buffer
  2342  0F55  3090               	movlw	high (STR_15| (0+32768))
  2343  0F56  00F5               	movwf	Lcd_Text@buffer+1
  2344  0F57  3002               	movlw	2
  2345  0F58  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  2346                           
  2347                           ;main.c: 204: reversa(821);
  2348  0F5D  3035               	movlw	53
  2349  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  2350  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  2351  0F60  00D4               	movwf	reversa@pwm
  2352  0F61  3003               	movlw	3
  2353  0F62                     L1:	
  2354  0F62  00D5               	movwf	reversa@pwm+1
  2355  0F63  160A  118A  240F  120A  158A  	fcall	_reversa
  2356  0F68                     l2529:	
  2357                           
  2358                           ;main.c: 205: }
  2359                           ;main.c: 206: _delay((unsigned long)((1000)*(4000000/4000.0)));
  2360  0F68  3006               	movlw	6
  2361  0F69  1283               	bcf	3,5	;RP0=0, select bank0
  2362  0F6A  1303               	bcf	3,6	;RP1=0, select bank0
  2363  0F6B  00D8               	movwf	??_lavadoRapido+2
  2364  0F6C  3013               	movlw	19
  2365  0F6D  00D7               	movwf	??_lavadoRapido+1
  2366  0F6E  30AD               	movlw	173
  2367  0F6F  00D6               	movwf	??_lavadoRapido
  2368  0F70                     u3927:	
  2369  0F70  0BD6               	decfsz	??_lavadoRapido,f
  2370  0F71  2F70               	goto	u3927
  2371  0F72  0BD7               	decfsz	??_lavadoRapido+1,f
  2372  0F73  2F70               	goto	u3927
  2373  0F74  0BD8               	decfsz	??_lavadoRapido+2,f
  2374  0F75  2F70               	goto	u3927
  2375                           
  2376                           ;main.c: 207: Lcd_Text(4, 1, aux);
  2377  0F76  01F3               	clrf	Lcd_Text@x
  2378  0F77  0AF3               	incf	Lcd_Text@x,f
  2379  0F78  30BA               	movlw	(low (_aux| 0))& (0+255)
  2380  0F79  00F4               	movwf	Lcd_Text@buffer
  2381  0F7A  3000               	movlw	0
  2382  0F7B  00F5               	movwf	Lcd_Text@buffer+1
  2383  0F7C  3004               	movlw	4
  2384  0F7D  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  2385  0F82  30FF               	movlw	255
  2386  0F83  1283               	bcf	3,5	;RP0=0, select bank0
  2387  0F84  1303               	bcf	3,6	;RP1=0, select bank0
  2388  0F85  07DB               	addwf	lavadoRapido@i,f
  2389  0F86  1803               	skipnc
  2390  0F87  0ADC               	incf	lavadoRapido@i+1,f
  2391  0F88  30FF               	movlw	255
  2392  0F89  07DC               	addwf	lavadoRapido@i+1,f
  2393  0F8A  085C               	movf	lavadoRapido@i+1,w
  2394  0F8B  3A80               	xorlw	128
  2395  0F8C  00FF               	movwf	127
  2396  0F8D  3080               	movlw	128
  2397  0F8E  027F               	subwf	127,w
  2398  0F8F  1D03               	skipz
  2399  0F90  2F93               	goto	u3255
  2400  0F91  3001               	movlw	1
  2401  0F92  025B               	subwf	lavadoRapido@i,w
  2402  0F93                     u3255:	
  2403  0F93  1803               	skipnc
  2404  0F94  2E14               	goto	l2477
  2405  0F95                     l139:	
  2406                           
  2407                           ;main.c: 208: }
  2408                           ;main.c: 210: PORTAbits.RA0 = 1;
  2409  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  2410  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  2411  0F97  1405               	bsf	5,0	;volatile
  2412                           
  2413                           ;main.c: 211: PORTAbits.RA1 = 0;
  2414  0F98  1085               	bcf	5,1	;volatile
  2415                           
  2416                           ;main.c: 212: PORTAbits.RA2 = 0;
  2417  0F99  1105               	bcf	5,2	;volatile
  2418                           
  2419                           ;main.c: 213: PORTAbits.RA3 = 1;
  2420  0F9A  1585               	bsf	5,3	;volatile
  2421                           
  2422                           ;main.c: 214: Lcd_Command(1);
  2423  0F9B  3001               	movlw	1
  2424  0F9C  120A  158A  20CD  120A  158A  	fcall	_Lcd_Command
  2425                           
  2426                           ;main.c: 215: Lcd_Text(2, 1, "      Finalizado    ");
  2427  0FA1  01F3               	clrf	Lcd_Text@x
  2428  0FA2  0AF3               	incf	Lcd_Text@x,f
  2429  0FA3  3085               	movlw	low (STR_17| (0+32768))
  2430  0FA4  00F4               	movwf	Lcd_Text@buffer
  2431  0FA5  3090               	movlw	high (STR_17| (0+32768))
  2432  0FA6  00F5               	movwf	Lcd_Text@buffer+1
  2433  0FA7  3002               	movlw	2
  2434  0FA8  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  2435                           
  2436                           ;main.c: 216: for (int i = 0; i < 4; i++) {
  2437  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  2438  0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  2439  0FAF  01D9               	clrf	lavadoRapido@i_357
  2440  0FB0  01DA               	clrf	lavadoRapido@i_357+1
  2441  0FB1                     L3:	
  2442  0FB1  085A               	movf	lavadoRapido@i_357+1,w
  2443  0FB2  3A80               	xorlw	128
  2444  0FB3  00FF               	movwf	127
  2445  0FB4  3080               	movlw	128
  2446  0FB5  027F               	subwf	127,w
  2447  0FB6  1D03               	skipz
  2448  0FB7  2FBA               	goto	u3265
  2449  0FB8  3004               	movlw	4
  2450  0FB9  0259               	subwf	lavadoRapido@i_357,w
  2451  0FBA                     u3265:	
  2452  0FBA  1803               	btfsc	3,0
  2453  0FBB  0008               	return
  2454                           
  2455                           ;main.c: 217: PORTAbits.RA5 = 1;
  2456  0FBC  1283               	bcf	3,5	;RP0=0, select bank0
  2457  0FBD  1303               	bcf	3,6	;RP1=0, select bank0
  2458  0FBE  1685               	bsf	5,5	;volatile
  2459                           
  2460                           ;main.c: 218: Lcd_Text(3, 1, "1");
  2461  0FBF  01F3               	clrf	Lcd_Text@x
  2462  0FC0  0AF3               	incf	Lcd_Text@x,f
  2463  0FC1  305C               	movlw	low (STR_18| (0+32768))
  2464  0FC2  00F4               	movwf	Lcd_Text@buffer
  2465  0FC3  3091               	movlw	high (STR_18| (0+32768))
  2466  0FC4  00F5               	movwf	Lcd_Text@buffer+1
  2467  0FC5  3003               	movlw	3
  2468  0FC6  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  2469                           
  2470                           ;main.c: 219: _delay((unsigned long)((1000)*(4000000/4000.0)));
  2471  0FCB  3006               	movlw	6
  2472  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  2473  0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  2474  0FCE  00D8               	movwf	??_lavadoRapido+2
  2475  0FCF  3013               	movlw	19
  2476  0FD0  00D7               	movwf	??_lavadoRapido+1
  2477  0FD1  30AD               	movlw	173
  2478  0FD2  00D6               	movwf	??_lavadoRapido
  2479  0FD3                     u3937:	
  2480  0FD3  0BD6               	decfsz	??_lavadoRapido,f
  2481  0FD4  2FD3               	goto	u3937
  2482  0FD5  0BD7               	decfsz	??_lavadoRapido+1,f
  2483  0FD6  2FD3               	goto	u3937
  2484  0FD7  0BD8               	decfsz	??_lavadoRapido+2,f
  2485  0FD8  2FD3               	goto	u3937
  2486                           
  2487                           ;main.c: 220: PORTAbits.RA5 = 0;
  2488  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  2489  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  2490  0FDB  1285               	bcf	5,5	;volatile
  2491                           
  2492                           ;main.c: 221: Lcd_Text(3, 1, "2");
  2493  0FDC  01F3               	clrf	Lcd_Text@x
  2494  0FDD  0AF3               	incf	Lcd_Text@x,f
  2495  0FDE  305E               	movlw	low (STR_19| (0+32768))
  2496  0FDF  00F4               	movwf	Lcd_Text@buffer
  2497  0FE0  3091               	movlw	high (STR_19| (0+32768))
  2498  0FE1  00F5               	movwf	Lcd_Text@buffer+1
  2499  0FE2  3003               	movlw	3
  2500  0FE3  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  2501                           
  2502                           ;main.c: 222: _delay((unsigned long)((300)*(4000000/4000.0)));
  2503  0FE8  3002               	movlw	2
  2504  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  2505  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  2506  0FEB  00D8               	movwf	??_lavadoRapido+2
  2507  0FEC  3086               	movlw	134
  2508  0FED  00D7               	movwf	??_lavadoRapido+1
  2509  0FEE  3098               	movlw	152
  2510  0FEF  00D6               	movwf	??_lavadoRapido
  2511  0FF0                     u3947:	
  2512  0FF0  0BD6               	decfsz	??_lavadoRapido,f
  2513  0FF1  2FF0               	goto	u3947
  2514  0FF2  0BD7               	decfsz	??_lavadoRapido+1,f
  2515  0FF3  2FF0               	goto	u3947
  2516  0FF4  0BD8               	decfsz	??_lavadoRapido+2,f
  2517  0FF5  2FF0               	goto	u3947
  2518  0FF6  0000               	nop
  2519  0FF7  3001               	movlw	1
  2520  0FF8  1283               	bcf	3,5	;RP0=0, select bank0
  2521  0FF9  1303               	bcf	3,6	;RP1=0, select bank0
  2522  0FFA  07D9               	addwf	lavadoRapido@i_357,f
  2523  0FFB  1803               	skipnc
  2524  0FFC  0ADA               	incf	lavadoRapido@i_357+1,f
  2525  0FFD  3000               	movlw	0
  2526  0FFE  07DA               	addwf	lavadoRapido@i_357+1,f
  2527  0FFF  2FB1               	goto	L3
  2528  1000                     __end_of_lavadoRapido:	
  2529                           
  2530                           	psect	text2
  2531  0308                     __ptext2:	
  2532 ;; *************** function _lavadoLento *****************
  2533 ;; Defined at:
  2534 ;;		line 226 in file "main.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;		None
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;  i               2   57[BANK0 ] int 
  2539 ;;  i               2   59[BANK0 ] int 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      void 
  2542 ;; Registers used:
  2543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2549 ;;      Params:         0       0       0       0       0
  2550 ;;      Locals:         0       4       0       0       0
  2551 ;;      Temps:          0       3       0       0       0
  2552 ;;      Totals:         0       7       0       0       0
  2553 ;;Total ram usage:        7 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; Hardware stack levels required when called:    4
  2556 ;; This function calls:
  2557 ;;		_Lcd_Command
  2558 ;;		_Lcd_Text
  2559 ;;		___awdiv
  2560 ;;		___wmul
  2561 ;;		_normal
  2562 ;;		_reversa
  2563 ;;		_sprintf
  2564 ;; This function is called by:
  2565 ;;		_main
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function _lavadoLento
  2571  0308                     _lavadoLento:	
  2572                           
  2573                           ;main.c: 227: Lcd_Command(1);
  2574                           
  2575                           ;incstack = 0
  2576                           ; Regs used in _lavadoLento: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2577  0308  3001               	movlw	1
  2578  0309  120A  158A  20CD  120A  118A  	fcall	_Lcd_Command
  2579                           
  2580                           ;main.c: 228: PORTAbits.RA0 = 0;
  2581  030E  1283               	bcf	3,5	;RP0=0, select bank0
  2582  030F  1303               	bcf	3,6	;RP1=0, select bank0
  2583  0310  1005               	bcf	5,0	;volatile
  2584                           
  2585                           ;main.c: 229: PORTAbits.RA1 = 1;
  2586  0311  1485               	bsf	5,1	;volatile
  2587                           
  2588                           ;main.c: 230: PORTAbits.RA2 = 1;
  2589  0312  1505               	bsf	5,2	;volatile
  2590                           
  2591                           ;main.c: 231: PORTAbits.RA3 = 0;
  2592  0313  1185               	bcf	5,3	;volatile
  2593                           
  2594                           ;main.c: 243: for (int i = 60*tiempo; i > 0; i--) {
  2595  0314  0863               	movf	_tiempo+1,w
  2596  0315  00F1               	movwf	___wmul@multiplier+1
  2597  0316  0862               	movf	_tiempo,w
  2598  0317  00F0               	movwf	___wmul@multiplier
  2599  0318  303C               	movlw	60
  2600  0319  00F2               	movwf	___wmul@multiplicand
  2601  031A  3000               	movlw	0
  2602  031B  00F3               	movwf	___wmul@multiplicand+1
  2603  031C  160A  118A  2441  120A  118A  	fcall	___wmul
  2604  0321  0871               	movf	?___wmul+1,w
  2605  0322  1283               	bcf	3,5	;RP0=0, select bank0
  2606  0323  1303               	bcf	3,6	;RP1=0, select bank0
  2607  0324  00DC               	movwf	lavadoLento@i+1
  2608  0325  0870               	movf	?___wmul,w
  2609  0326  00DB               	movwf	lavadoLento@i
  2610  0327  085C               	movf	lavadoLento@i+1,w
  2611  0328  3A80               	xorlw	128
  2612  0329  00FF               	movwf	127
  2613  032A  3080               	movlw	128
  2614  032B  027F               	subwf	127,w
  2615  032C  1D03               	skipz
  2616  032D  2B30               	goto	u3285
  2617  032E  3001               	movlw	1
  2618  032F  025B               	subwf	lavadoLento@i,w
  2619  0330                     u3285:	
  2620  0330  1C03               	btfss	3,0
  2621  0331  2CFE               	goto	l161
  2622  0332                     l2571:	
  2623                           
  2624                           ;main.c: 244: minutAux = i/60;
  2625  0332  303C               	movlw	60
  2626  0333  00F0               	movwf	___awdiv@divisor
  2627  0334  3000               	movlw	0
  2628  0335  00F1               	movwf	___awdiv@divisor+1
  2629  0336  1283               	bcf	3,5	;RP0=0, select bank0
  2630  0337  1303               	bcf	3,6	;RP1=0, select bank0
  2631  0338  085C               	movf	lavadoLento@i+1,w
  2632  0339  00F3               	movwf	___awdiv@dividend+1
  2633  033A  085B               	movf	lavadoLento@i,w
  2634  033B  00F2               	movwf	___awdiv@dividend
  2635  033C  160A  118A  259E  120A  118A  	fcall	___awdiv
  2636  0341  0871               	movf	?___awdiv+1,w
  2637  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2638  0343  1303               	bcf	3,6	;RP1=0, select bank0
  2639  0344  00E1               	movwf	_minutAux+1
  2640  0345  0870               	movf	?___awdiv,w
  2641  0346  00E0               	movwf	_minutAux
  2642                           
  2643                           ;main.c: 245: if(i/60 > 59){
  2644  0347  303C               	movlw	60
  2645  0348  00F0               	movwf	___awdiv@divisor
  2646  0349  3000               	movlw	0
  2647  034A  00F1               	movwf	___awdiv@divisor+1
  2648  034B  085C               	movf	lavadoLento@i+1,w
  2649  034C  00F3               	movwf	___awdiv@dividend+1
  2650  034D  085B               	movf	lavadoLento@i,w
  2651  034E  00F2               	movwf	___awdiv@dividend
  2652  034F  160A  118A  259E  120A  118A  	fcall	___awdiv
  2653  0354  0871               	movf	?___awdiv+1,w
  2654  0355  3A80               	xorlw	128
  2655  0356  00FF               	movwf	127
  2656  0357  3080               	movlw	128
  2657  0358  027F               	subwf	127,w
  2658  0359  1D03               	skipz
  2659  035A  2B5D               	goto	u3295
  2660  035B  303C               	movlw	60
  2661  035C  0270               	subwf	?___awdiv,w
  2662  035D                     u3295:	
  2663  035D  1C03               	skipc
  2664  035E  2B90               	goto	l2577
  2665                           
  2666                           ;main.c: 246: sprintf(aux,"      %i:%i:%i  ", (minutAux/60), (i/60)-60, (i-minutAux*60))
      +                          ;
  2667  035F  30D9               	movlw	low (STR_8| (0+32768))
  2668  0360  1283               	bcf	3,5	;RP0=0, select bank0
  2669  0361  1303               	bcf	3,6	;RP1=0, select bank0
  2670  0362  00A0               	movwf	sprintf@f
  2671  0363  3090               	movlw	high (STR_8| (0+32768))
  2672  0364  00A1               	movwf	sprintf@f+1
  2673  0365  303C               	movlw	60
  2674  0366  00F0               	movwf	___awdiv@divisor
  2675  0367  3000               	movlw	0
  2676  0368  00F1               	movwf	___awdiv@divisor+1
  2677  0369  0861               	movf	_minutAux+1,w
  2678  036A  00F3               	movwf	___awdiv@dividend+1
  2679  036B  0860               	movf	_minutAux,w
  2680  036C  00F2               	movwf	___awdiv@dividend
  2681  036D  160A  118A  259E  120A  118A  	fcall	___awdiv
  2682  0372  0871               	movf	?___awdiv+1,w
  2683  0373  1283               	bcf	3,5	;RP0=0, select bank0
  2684  0374  1303               	bcf	3,6	;RP1=0, select bank0
  2685  0375  00A3               	movwf	?_sprintf+3
  2686  0376  0870               	movf	?___awdiv,w
  2687  0377  00A2               	movwf	?_sprintf+2
  2688  0378  303C               	movlw	60
  2689  0379  00F0               	movwf	___awdiv@divisor
  2690  037A  3000               	movlw	0
  2691  037B  00F1               	movwf	___awdiv@divisor+1
  2692  037C  085C               	movf	lavadoLento@i+1,w
  2693  037D  00F3               	movwf	___awdiv@dividend+1
  2694  037E  085B               	movf	lavadoLento@i,w
  2695  037F  00F2               	movwf	___awdiv@dividend
  2696  0380  160A  118A  259E  120A  118A  	fcall	___awdiv
  2697  0385  0870               	movf	?___awdiv,w
  2698  0386  3EC4               	addlw	196
  2699  0387  1283               	bcf	3,5	;RP0=0, select bank0
  2700  0388  1303               	bcf	3,6	;RP1=0, select bank0
  2701  0389  00A4               	movwf	?_sprintf+4
  2702  038A  0871               	movf	?___awdiv+1,w
  2703  038B  1803               	skipnc
  2704  038C  3E01               	addlw	1
  2705  038D  3EFF               	addlw	255
  2706  038E  00A5               	movwf	?_sprintf+5
  2707  038F  2BBC               	goto	L4
  2708  0390                     l2577:	
  2709                           ;main.c: 247: }else{
  2710                           
  2711                           
  2712                           ;main.c: 248: sprintf(aux,"      %i:%i:%i  ", (minutAux/60), (i/60), (i-minutAux*60));
  2713  0390  30D9               	movlw	low (STR_8| (0+32768))
  2714  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2715  0392  1303               	bcf	3,6	;RP1=0, select bank0
  2716  0393  00A0               	movwf	sprintf@f
  2717  0394  3090               	movlw	high (STR_8| (0+32768))
  2718  0395  00A1               	movwf	sprintf@f+1
  2719  0396  303C               	movlw	60
  2720  0397  00F0               	movwf	___awdiv@divisor
  2721  0398  3000               	movlw	0
  2722  0399  00F1               	movwf	___awdiv@divisor+1
  2723  039A  0861               	movf	_minutAux+1,w
  2724  039B  00F3               	movwf	___awdiv@dividend+1
  2725  039C  0860               	movf	_minutAux,w
  2726  039D  00F2               	movwf	___awdiv@dividend
  2727  039E  160A  118A  259E  120A  118A  	fcall	___awdiv
  2728  03A3  0871               	movf	?___awdiv+1,w
  2729  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2730  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  2731  03A6  00A3               	movwf	?_sprintf+3
  2732  03A7  0870               	movf	?___awdiv,w
  2733  03A8  00A2               	movwf	?_sprintf+2
  2734  03A9  303C               	movlw	60
  2735  03AA  00F0               	movwf	___awdiv@divisor
  2736  03AB  3000               	movlw	0
  2737  03AC  00F1               	movwf	___awdiv@divisor+1
  2738  03AD  085C               	movf	lavadoLento@i+1,w
  2739  03AE  00F3               	movwf	___awdiv@dividend+1
  2740  03AF  085B               	movf	lavadoLento@i,w
  2741  03B0  00F2               	movwf	___awdiv@dividend
  2742  03B1  160A  118A  259E  120A  118A  	fcall	___awdiv
  2743  03B6  0871               	movf	?___awdiv+1,w
  2744  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2745  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2746  03B9  00A5               	movwf	?_sprintf+5
  2747  03BA  0870               	movf	?___awdiv,w
  2748  03BB  00A4               	movwf	?_sprintf+4
  2749  03BC                     L4:	
  2750  03BC  0861               	movf	_minutAux+1,w
  2751  03BD  00F1               	movwf	___wmul@multiplier+1
  2752  03BE  0860               	movf	_minutAux,w
  2753  03BF  00F0               	movwf	___wmul@multiplier
  2754  03C0  303C               	movlw	60
  2755  03C1  00F2               	movwf	___wmul@multiplicand
  2756  03C2  3000               	movlw	0
  2757  03C3  00F3               	movwf	___wmul@multiplicand+1
  2758  03C4  160A  118A  2441  120A  118A  	fcall	___wmul
  2759  03C9  0970               	comf	?___wmul,w
  2760  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2761  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  2762  03CC  00D6               	movwf	??_lavadoLento
  2763  03CD  0971               	comf	?___wmul+1,w
  2764  03CE  00D7               	movwf	??_lavadoLento+1
  2765  03CF  0AD6               	incf	??_lavadoLento,f
  2766  03D0  1903               	skipnz
  2767  03D1  0AD7               	incf	??_lavadoLento+1,f
  2768  03D2  085B               	movf	lavadoLento@i,w
  2769  03D3  0756               	addwf	??_lavadoLento,w
  2770  03D4  00A6               	movwf	?_sprintf+6
  2771  03D5  085C               	movf	lavadoLento@i+1,w
  2772  03D6  1803               	skipnc
  2773  03D7  0A5C               	incf	lavadoLento@i+1,w
  2774  03D8  0757               	addwf	??_lavadoLento+1,w
  2775  03D9  00A7               	movwf	?_sprintf+7
  2776  03DA  30BA               	movlw	(low (_aux| 0))& (0+255)
  2777  03DB  120A  158A  23AC  120A  118A  	fcall	_sprintf
  2778                           
  2779                           ;main.c: 249: }
  2780                           ;main.c: 251: if(i == 5340){
  2781  03E0  30DC               	movlw	220
  2782  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  2783  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  2784  03E3  065B               	xorwf	lavadoLento@i,w
  2785  03E4  3014               	movlw	20
  2786  03E5  1903               	skipnz
  2787  03E6  065C               	xorwf	lavadoLento@i+1,w
  2788  03E7  1D03               	btfss	3,2
  2789  03E8  2C01               	goto	l2585
  2790                           
  2791                           ;main.c: 252: Lcd_Text(2, 1, "      PRELAVADO     ");
  2792  03E9  01F3               	clrf	Lcd_Text@x
  2793  03EA  0AF3               	incf	Lcd_Text@x,f
  2794  03EB  3070               	movlw	low (STR_9| (0+32768))
  2795  03EC  00F4               	movwf	Lcd_Text@buffer
  2796  03ED  3090               	movlw	high (STR_9| (0+32768))
  2797  03EE  00F5               	movwf	Lcd_Text@buffer+1
  2798  03EF  3002               	movlw	2
  2799  03F0  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  2800                           
  2801                           ;main.c: 253: normal(581);
  2802  03F5  3045               	movlw	69
  2803  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2804  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  2805  03F8  00D4               	movwf	normal@pwm
  2806  03F9  3002               	movlw	2
  2807  03FA  00D5               	movwf	normal@pwm+1
  2808  03FB  160A  118A  2401  120A  118A  	fcall	_normal
  2809                           
  2810                           ;main.c: 254: }else if(i == 4740){
  2811  0400  2CD1               	goto	l2627
  2812  0401                     l2585:	
  2813  0401  3084               	movlw	132
  2814  0402  1283               	bcf	3,5	;RP0=0, select bank0
  2815  0403  1303               	bcf	3,6	;RP1=0, select bank0
  2816  0404  065B               	xorwf	lavadoLento@i,w
  2817  0405  3012               	movlw	18
  2818  0406  1903               	skipnz
  2819  0407  065C               	xorwf	lavadoLento@i+1,w
  2820  0408  1D03               	btfss	3,2
  2821  0409  2C18               	goto	l2591
  2822                           
  2823                           ;main.c: 255: Lcd_Text(2, 1, "      PRELAVADO     ");
  2824  040A  01F3               	clrf	Lcd_Text@x
  2825  040B  0AF3               	incf	Lcd_Text@x,f
  2826  040C  3070               	movlw	low (STR_9| (0+32768))
  2827  040D  00F4               	movwf	Lcd_Text@buffer
  2828  040E  3090               	movlw	high (STR_9| (0+32768))
  2829  040F  00F5               	movwf	Lcd_Text@buffer+1
  2830  0410  3002               	movlw	2
  2831  0411  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  2832                           
  2833                           ;main.c: 256: reversa(581);
  2834  0416  3045               	movlw	69
  2835  0417  2C8B               	goto	L6
  2836  0418                     l2591:	
  2837                           ;main.c: 257: }else if(i == 4140){
  2838                           
  2839  0418  302C               	movlw	44
  2840  0419  1283               	bcf	3,5	;RP0=0, select bank0
  2841  041A  1303               	bcf	3,6	;RP1=0, select bank0
  2842  041B  065B               	xorwf	lavadoLento@i,w
  2843  041C  3010               	movlw	16
  2844  041D  1903               	skipnz
  2845  041E  065C               	xorwf	lavadoLento@i+1,w
  2846  041F  1D03               	btfss	3,2
  2847  0420  2C39               	goto	l2597
  2848                           
  2849                           ;main.c: 258: Lcd_Text(2, 1, "      LAVADO        ");
  2850  0421  01F3               	clrf	Lcd_Text@x
  2851  0422  0AF3               	incf	Lcd_Text@x,f
  2852  0423  301C               	movlw	low (STR_11| (0+32768))
  2853  0424  00F4               	movwf	Lcd_Text@buffer
  2854  0425  3090               	movlw	high (STR_11| (0+32768))
  2855  0426  00F5               	movwf	Lcd_Text@buffer+1
  2856  0427  3002               	movlw	2
  2857  0428  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  2858                           
  2859                           ;main.c: 259: normal(440);
  2860  042D  30B8               	movlw	184
  2861  042E  1283               	bcf	3,5	;RP0=0, select bank0
  2862  042F  1303               	bcf	3,6	;RP1=0, select bank0
  2863  0430  00D4               	movwf	normal@pwm
  2864  0431  3001               	movlw	1
  2865  0432  00D5               	movwf	normal@pwm+1
  2866  0433  160A  118A  2401  120A  118A  	fcall	_normal
  2867                           
  2868                           ;main.c: 260: }else if(i == 2640){
  2869  0438  2CD1               	goto	l2627
  2870  0439                     l2597:	
  2871  0439  3050               	movlw	80
  2872  043A  1283               	bcf	3,5	;RP0=0, select bank0
  2873  043B  1303               	bcf	3,6	;RP1=0, select bank0
  2874  043C  065B               	xorwf	lavadoLento@i,w
  2875  043D  300A               	movlw	10
  2876  043E  1903               	skipnz
  2877  043F  065C               	xorwf	lavadoLento@i+1,w
  2878  0440  1D03               	btfss	3,2
  2879  0441  2C54               	goto	l2603
  2880                           
  2881                           ;main.c: 261: Lcd_Text(2, 1, "      LAVADO        ");
  2882  0442  01F3               	clrf	Lcd_Text@x
  2883  0443  0AF3               	incf	Lcd_Text@x,f
  2884  0444  301C               	movlw	low (STR_11| (0+32768))
  2885  0445  00F4               	movwf	Lcd_Text@buffer
  2886  0446  3090               	movlw	high (STR_11| (0+32768))
  2887  0447  00F5               	movwf	Lcd_Text@buffer+1
  2888  0448  3002               	movlw	2
  2889  0449  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  2890                           
  2891                           ;main.c: 262: reversa(440);
  2892  044E  30B8               	movlw	184
  2893  044F  1283               	bcf	3,5	;RP0=0, select bank0
  2894  0450  1303               	bcf	3,6	;RP1=0, select bank0
  2895  0451  00D4               	movwf	reversa@pwm
  2896  0452  3001               	movlw	1
  2897  0453  2CCB               	goto	L5
  2898  0454                     l2603:	
  2899                           ;main.c: 263: }else if(i == 2040){
  2900                           
  2901  0454  30F8               	movlw	248
  2902  0455  1283               	bcf	3,5	;RP0=0, select bank0
  2903  0456  1303               	bcf	3,6	;RP1=0, select bank0
  2904  0457  065B               	xorwf	lavadoLento@i,w
  2905  0458  3007               	movlw	7
  2906  0459  1903               	skipnz
  2907  045A  065C               	xorwf	lavadoLento@i+1,w
  2908  045B  1D03               	btfss	3,2
  2909  045C  2C75               	goto	l2609
  2910                           
  2911                           ;main.c: 264: Lcd_Text(2, 1, "      ACLARADO      ");
  2912  045D  01F3               	clrf	Lcd_Text@x
  2913  045E  0AF3               	incf	Lcd_Text@x,f
  2914  045F  3046               	movlw	low (STR_13| (0+32768))
  2915  0460  00F4               	movwf	Lcd_Text@buffer
  2916  0461  3090               	movlw	high (STR_13| (0+32768))
  2917  0462  00F5               	movwf	Lcd_Text@buffer+1
  2918  0463  3002               	movlw	2
  2919  0464  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  2920                           
  2921                           ;main.c: 265: normal(661);
  2922  0469  3095               	movlw	149
  2923  046A  1283               	bcf	3,5	;RP0=0, select bank0
  2924  046B  1303               	bcf	3,6	;RP1=0, select bank0
  2925  046C  00D4               	movwf	normal@pwm
  2926  046D  3002               	movlw	2
  2927  046E  00D5               	movwf	normal@pwm+1
  2928  046F  160A  118A  2401  120A  118A  	fcall	_normal
  2929                           
  2930                           ;main.c: 266: }else if(i == 1620){
  2931  0474  2CD1               	goto	l2627
  2932  0475                     l2609:	
  2933  0475  3054               	movlw	84
  2934  0476  1283               	bcf	3,5	;RP0=0, select bank0
  2935  0477  1303               	bcf	3,6	;RP1=0, select bank0
  2936  0478  065B               	xorwf	lavadoLento@i,w
  2937  0479  3006               	movlw	6
  2938  047A  1903               	skipnz
  2939  047B  065C               	xorwf	lavadoLento@i+1,w
  2940  047C  1D03               	btfss	3,2
  2941  047D  2C90               	goto	l2615
  2942                           
  2943                           ;main.c: 267: Lcd_Text(2, 1, "      ACLARADO      ");
  2944  047E  01F3               	clrf	Lcd_Text@x
  2945  047F  0AF3               	incf	Lcd_Text@x,f
  2946  0480  3046               	movlw	low (STR_13| (0+32768))
  2947  0481  00F4               	movwf	Lcd_Text@buffer
  2948  0482  3090               	movlw	high (STR_13| (0+32768))
  2949  0483  00F5               	movwf	Lcd_Text@buffer+1
  2950  0484  3002               	movlw	2
  2951  0485  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  2952                           
  2953                           ;main.c: 268: reversa(661);
  2954  048A  3095               	movlw	149
  2955  048B                     L6:	
  2956  048B  1283               	bcf	3,5	;RP0=0, select bank0
  2957  048C  1303               	bcf	3,6	;RP1=0, select bank0
  2958  048D  00D4               	movwf	reversa@pwm
  2959  048E  3002               	movlw	2
  2960  048F  2CCB               	goto	L5
  2961  0490                     l2615:	
  2962                           ;main.c: 269: }else if(i == 1140){
  2963                           
  2964  0490  3074               	movlw	116
  2965  0491  1283               	bcf	3,5	;RP0=0, select bank0
  2966  0492  1303               	bcf	3,6	;RP1=0, select bank0
  2967  0493  065B               	xorwf	lavadoLento@i,w
  2968  0494  3004               	movlw	4
  2969  0495  1903               	skipnz
  2970  0496  065C               	xorwf	lavadoLento@i+1,w
  2971  0497  1D03               	btfss	3,2
  2972  0498  2CB1               	goto	l2621
  2973                           
  2974                           ;main.c: 270: Lcd_Text(2, 1, "      CENTRIFUGADO  ");
  2975  0499  01F3               	clrf	Lcd_Text@x
  2976  049A  0AF3               	incf	Lcd_Text@x,f
  2977  049B  30C4               	movlw	low (STR_15| (0+32768))
  2978  049C  00F4               	movwf	Lcd_Text@buffer
  2979  049D  3090               	movlw	high (STR_15| (0+32768))
  2980  049E  00F5               	movwf	Lcd_Text@buffer+1
  2981  049F  3002               	movlw	2
  2982  04A0  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  2983                           
  2984                           ;main.c: 271: normal(821);
  2985  04A5  3035               	movlw	53
  2986  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  2987  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  2988  04A8  00D4               	movwf	normal@pwm
  2989  04A9  3003               	movlw	3
  2990  04AA  00D5               	movwf	normal@pwm+1
  2991  04AB  160A  118A  2401  120A  118A  	fcall	_normal
  2992                           
  2993                           ;main.c: 272: }else if(i == 540){
  2994  04B0  2CD1               	goto	l2627
  2995  04B1                     l2621:	
  2996  04B1  301C               	movlw	28
  2997  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  2998  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  2999  04B4  065B               	xorwf	lavadoLento@i,w
  3000  04B5  3002               	movlw	2
  3001  04B6  1903               	skipnz
  3002  04B7  065C               	xorwf	lavadoLento@i+1,w
  3003  04B8  1D03               	btfss	3,2
  3004  04B9  2CD1               	goto	l2627
  3005                           
  3006                           ;main.c: 273: Lcd_Text(2, 1, "      CENTRIFUGADO  ");
  3007  04BA  01F3               	clrf	Lcd_Text@x
  3008  04BB  0AF3               	incf	Lcd_Text@x,f
  3009  04BC  30C4               	movlw	low (STR_15| (0+32768))
  3010  04BD  00F4               	movwf	Lcd_Text@buffer
  3011  04BE  3090               	movlw	high (STR_15| (0+32768))
  3012  04BF  00F5               	movwf	Lcd_Text@buffer+1
  3013  04C0  3002               	movlw	2
  3014  04C1  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  3015                           
  3016                           ;main.c: 274: reversa(821);
  3017  04C6  3035               	movlw	53
  3018  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  3019  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  3020  04C9  00D4               	movwf	reversa@pwm
  3021  04CA  3003               	movlw	3
  3022  04CB                     L5:	
  3023  04CB  00D5               	movwf	reversa@pwm+1
  3024  04CC  160A  118A  240F  120A  118A  	fcall	_reversa
  3025  04D1                     l2627:	
  3026                           
  3027                           ;main.c: 275: }
  3028                           ;main.c: 276: Lcd_Text(4, 1, aux);
  3029  04D1  01F3               	clrf	Lcd_Text@x
  3030  04D2  0AF3               	incf	Lcd_Text@x,f
  3031  04D3  30BA               	movlw	(low (_aux| 0))& (0+255)
  3032  04D4  00F4               	movwf	Lcd_Text@buffer
  3033  04D5  3000               	movlw	0
  3034  04D6  00F5               	movwf	Lcd_Text@buffer+1
  3035  04D7  3004               	movlw	4
  3036  04D8  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  3037                           
  3038                           ;main.c: 277: _delay((unsigned long)((1000)*(4000000/4000.0)));
  3039  04DD  3006               	movlw	6
  3040  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  3041  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  3042  04E0  00D8               	movwf	??_lavadoLento+2
  3043  04E1  3013               	movlw	19
  3044  04E2  00D7               	movwf	??_lavadoLento+1
  3045  04E3  30AD               	movlw	173
  3046  04E4  00D6               	movwf	??_lavadoLento
  3047  04E5                     u3957:	
  3048  04E5  0BD6               	decfsz	??_lavadoLento,f
  3049  04E6  2CE5               	goto	u3957
  3050  04E7  0BD7               	decfsz	??_lavadoLento+1,f
  3051  04E8  2CE5               	goto	u3957
  3052  04E9  0BD8               	decfsz	??_lavadoLento+2,f
  3053  04EA  2CE5               	goto	u3957
  3054  04EB  30FF               	movlw	255
  3055  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  3056  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  3057  04EE  07DB               	addwf	lavadoLento@i,f
  3058  04EF  1803               	skipnc
  3059  04F0  0ADC               	incf	lavadoLento@i+1,f
  3060  04F1  30FF               	movlw	255
  3061  04F2  07DC               	addwf	lavadoLento@i+1,f
  3062  04F3  085C               	movf	lavadoLento@i+1,w
  3063  04F4  3A80               	xorlw	128
  3064  04F5  00FF               	movwf	127
  3065  04F6  3080               	movlw	128
  3066  04F7  027F               	subwf	127,w
  3067  04F8  1D03               	skipz
  3068  04F9  2CFC               	goto	u3385
  3069  04FA  3001               	movlw	1
  3070  04FB  025B               	subwf	lavadoLento@i,w
  3071  04FC                     u3385:	
  3072  04FC  1803               	skipnc
  3073  04FD  2B32               	goto	l2571
  3074  04FE                     l161:	
  3075                           
  3076                           ;main.c: 278: }
  3077                           ;main.c: 280: PORTAbits.RA0 = 1;
  3078  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  3079  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  3080  0500  1405               	bsf	5,0	;volatile
  3081                           
  3082                           ;main.c: 281: PORTAbits.RA1 = 0;
  3083  0501  1085               	bcf	5,1	;volatile
  3084                           
  3085                           ;main.c: 282: PORTAbits.RA2 = 0;
  3086  0502  1105               	bcf	5,2	;volatile
  3087                           
  3088                           ;main.c: 283: PORTAbits.RA3 = 1;
  3089  0503  1585               	bsf	5,3	;volatile
  3090                           
  3091                           ;main.c: 284: Lcd_Command(1);
  3092  0504  3001               	movlw	1
  3093  0505  120A  158A  20CD  120A  118A  	fcall	_Lcd_Command
  3094                           
  3095                           ;main.c: 285: Lcd_Text(2, 1, "      Finalizado    ");
  3096  050A  01F3               	clrf	Lcd_Text@x
  3097  050B  0AF3               	incf	Lcd_Text@x,f
  3098  050C  3085               	movlw	low (STR_17| (0+32768))
  3099  050D  00F4               	movwf	Lcd_Text@buffer
  3100  050E  3090               	movlw	high (STR_17| (0+32768))
  3101  050F  00F5               	movwf	Lcd_Text@buffer+1
  3102  0510  3002               	movlw	2
  3103  0511  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  3104                           
  3105                           ;main.c: 286: for (int i = 0; i < 4; i++) {
  3106  0516  1283               	bcf	3,5	;RP0=0, select bank0
  3107  0517  1303               	bcf	3,6	;RP1=0, select bank0
  3108  0518  01D9               	clrf	lavadoLento@i_373
  3109  0519  01DA               	clrf	lavadoLento@i_373+1
  3110  051A                     L7:	
  3111  051A  085A               	movf	lavadoLento@i_373+1,w
  3112  051B  3A80               	xorlw	128
  3113  051C  00FF               	movwf	127
  3114  051D  3080               	movlw	128
  3115  051E  027F               	subwf	127,w
  3116  051F  1D03               	skipz
  3117  0520  2D23               	goto	u3395
  3118  0521  3004               	movlw	4
  3119  0522  0259               	subwf	lavadoLento@i_373,w
  3120  0523                     u3395:	
  3121  0523  1803               	btfsc	3,0
  3122  0524  0008               	return
  3123                           
  3124                           ;main.c: 287: PORTAbits.RA5 = 1;
  3125  0525  1283               	bcf	3,5	;RP0=0, select bank0
  3126  0526  1303               	bcf	3,6	;RP1=0, select bank0
  3127  0527  1685               	bsf	5,5	;volatile
  3128                           
  3129                           ;main.c: 288: Lcd_Text(3, 1, "1");
  3130  0528  01F3               	clrf	Lcd_Text@x
  3131  0529  0AF3               	incf	Lcd_Text@x,f
  3132  052A  305C               	movlw	low (STR_18| (0+32768))
  3133  052B  00F4               	movwf	Lcd_Text@buffer
  3134  052C  3091               	movlw	high (STR_18| (0+32768))
  3135  052D  00F5               	movwf	Lcd_Text@buffer+1
  3136  052E  3003               	movlw	3
  3137  052F  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  3138                           
  3139                           ;main.c: 289: _delay((unsigned long)((1000)*(4000000/4000.0)));
  3140  0534  3006               	movlw	6
  3141  0535  1283               	bcf	3,5	;RP0=0, select bank0
  3142  0536  1303               	bcf	3,6	;RP1=0, select bank0
  3143  0537  00D8               	movwf	??_lavadoLento+2
  3144  0538  3013               	movlw	19
  3145  0539  00D7               	movwf	??_lavadoLento+1
  3146  053A  30AD               	movlw	173
  3147  053B  00D6               	movwf	??_lavadoLento
  3148  053C                     u3967:	
  3149  053C  0BD6               	decfsz	??_lavadoLento,f
  3150  053D  2D3C               	goto	u3967
  3151  053E  0BD7               	decfsz	??_lavadoLento+1,f
  3152  053F  2D3C               	goto	u3967
  3153  0540  0BD8               	decfsz	??_lavadoLento+2,f
  3154  0541  2D3C               	goto	u3967
  3155                           
  3156                           ;main.c: 290: PORTAbits.RA5 = 0;
  3157  0542  1283               	bcf	3,5	;RP0=0, select bank0
  3158  0543  1303               	bcf	3,6	;RP1=0, select bank0
  3159  0544  1285               	bcf	5,5	;volatile
  3160                           
  3161                           ;main.c: 291: Lcd_Text(3, 1, "2");
  3162  0545  01F3               	clrf	Lcd_Text@x
  3163  0546  0AF3               	incf	Lcd_Text@x,f
  3164  0547  305E               	movlw	low (STR_19| (0+32768))
  3165  0548  00F4               	movwf	Lcd_Text@buffer
  3166  0549  3091               	movlw	high (STR_19| (0+32768))
  3167  054A  00F5               	movwf	Lcd_Text@buffer+1
  3168  054B  3003               	movlw	3
  3169  054C  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  3170                           
  3171                           ;main.c: 292: _delay((unsigned long)((300)*(4000000/4000.0)));
  3172  0551  3002               	movlw	2
  3173  0552  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0553  1303               	bcf	3,6	;RP1=0, select bank0
  3175  0554  00D8               	movwf	??_lavadoLento+2
  3176  0555  3086               	movlw	134
  3177  0556  00D7               	movwf	??_lavadoLento+1
  3178  0557  3098               	movlw	152
  3179  0558  00D6               	movwf	??_lavadoLento
  3180  0559                     u3977:	
  3181  0559  0BD6               	decfsz	??_lavadoLento,f
  3182  055A  2D59               	goto	u3977
  3183  055B  0BD7               	decfsz	??_lavadoLento+1,f
  3184  055C  2D59               	goto	u3977
  3185  055D  0BD8               	decfsz	??_lavadoLento+2,f
  3186  055E  2D59               	goto	u3977
  3187  055F  0000               	nop
  3188  0560  3001               	movlw	1
  3189  0561  1283               	bcf	3,5	;RP0=0, select bank0
  3190  0562  1303               	bcf	3,6	;RP1=0, select bank0
  3191  0563  07D9               	addwf	lavadoLento@i_373,f
  3192  0564  1803               	skipnc
  3193  0565  0ADA               	incf	lavadoLento@i_373+1,f
  3194  0566  3000               	movlw	0
  3195  0567  07DA               	addwf	lavadoLento@i_373+1,f
  3196  0568  2D1A               	goto	L7
  3197  0569                     __end_of_lavadoLento:	
  3198                           
  3199                           	psect	text3
  3200  00A7                     __ptext3:	
  3201 ;; *************** function _lavadoDelicado *****************
  3202 ;; Defined at:
  3203 ;;		line 296 in file "main.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;		None
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  i               2   57[BANK0 ] int 
  3208 ;;  i               2   59[BANK0 ] int 
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      void 
  3211 ;; Registers used:
  3212 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3218 ;;      Params:         0       0       0       0       0
  3219 ;;      Locals:         0       4       0       0       0
  3220 ;;      Temps:          0       3       0       0       0
  3221 ;;      Totals:         0       7       0       0       0
  3222 ;;Total ram usage:        7 bytes
  3223 ;; Hardware stack levels used:    1
  3224 ;; Hardware stack levels required when called:    4
  3225 ;; This function calls:
  3226 ;;		_Lcd_Command
  3227 ;;		_Lcd_Text
  3228 ;;		___awdiv
  3229 ;;		___wmul
  3230 ;;		_normal
  3231 ;;		_reversa
  3232 ;;		_sprintf
  3233 ;; This function is called by:
  3234 ;;		_main
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           
  3239                           ;psect for function _lavadoDelicado
  3240  00A7                     _lavadoDelicado:	
  3241                           
  3242                           ;main.c: 297: Lcd_Command(1);
  3243                           
  3244                           ;incstack = 0
  3245                           ; Regs used in _lavadoDelicado: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3246  00A7  3001               	movlw	1
  3247  00A8  120A  158A  20CD  120A  118A  	fcall	_Lcd_Command
  3248                           
  3249                           ;main.c: 300: PORTAbits.RA0 = 0;
  3250  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  3251  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  3252  00AF  1005               	bcf	5,0	;volatile
  3253                           
  3254                           ;main.c: 301: PORTAbits.RA1 = 1;
  3255  00B0  1485               	bsf	5,1	;volatile
  3256                           
  3257                           ;main.c: 302: PORTAbits.RA2 = 1;
  3258  00B1  1505               	bsf	5,2	;volatile
  3259                           
  3260                           ;main.c: 303: PORTAbits.RA3 = 0;
  3261  00B2  1185               	bcf	5,3	;volatile
  3262                           
  3263                           ;main.c: 314: for (int i = 60*tiempo; i > 0; i--) {
  3264  00B3  0863               	movf	_tiempo+1,w
  3265  00B4  00F1               	movwf	___wmul@multiplier+1
  3266  00B5  0862               	movf	_tiempo,w
  3267  00B6  00F0               	movwf	___wmul@multiplier
  3268  00B7  303C               	movlw	60
  3269  00B8  00F2               	movwf	___wmul@multiplicand
  3270  00B9  3000               	movlw	0
  3271  00BA  00F3               	movwf	___wmul@multiplicand+1
  3272  00BB  160A  118A  2441  120A  118A  	fcall	___wmul
  3273  00C0  0871               	movf	?___wmul+1,w
  3274  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  3275  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  3276  00C3  00DC               	movwf	lavadoDelicado@i+1
  3277  00C4  0870               	movf	?___wmul,w
  3278  00C5  00DB               	movwf	lavadoDelicado@i
  3279  00C6  085C               	movf	lavadoDelicado@i+1,w
  3280  00C7  3A80               	xorlw	128
  3281  00C8  00FF               	movwf	127
  3282  00C9  3080               	movlw	128
  3283  00CA  027F               	subwf	127,w
  3284  00CB  1D03               	skipz
  3285  00CC  28CF               	goto	u3415
  3286  00CD  3001               	movlw	1
  3287  00CE  025B               	subwf	lavadoDelicado@i,w
  3288  00CF                     u3415:	
  3289  00CF  1C03               	btfss	3,0
  3290  00D0  2A9D               	goto	l185
  3291  00D1                     l2669:	
  3292                           
  3293                           ;main.c: 315: minutAux = i/60;
  3294  00D1  303C               	movlw	60
  3295  00D2  00F0               	movwf	___awdiv@divisor
  3296  00D3  3000               	movlw	0
  3297  00D4  00F1               	movwf	___awdiv@divisor+1
  3298  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  3299  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  3300  00D7  085C               	movf	lavadoDelicado@i+1,w
  3301  00D8  00F3               	movwf	___awdiv@dividend+1
  3302  00D9  085B               	movf	lavadoDelicado@i,w
  3303  00DA  00F2               	movwf	___awdiv@dividend
  3304  00DB  160A  118A  259E  120A  118A  	fcall	___awdiv
  3305  00E0  0871               	movf	?___awdiv+1,w
  3306  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  3307  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  3308  00E3  00E1               	movwf	_minutAux+1
  3309  00E4  0870               	movf	?___awdiv,w
  3310  00E5  00E0               	movwf	_minutAux
  3311                           
  3312                           ;main.c: 316: if(i/60 > 59){
  3313  00E6  303C               	movlw	60
  3314  00E7  00F0               	movwf	___awdiv@divisor
  3315  00E8  3000               	movlw	0
  3316  00E9  00F1               	movwf	___awdiv@divisor+1
  3317  00EA  085C               	movf	lavadoDelicado@i+1,w
  3318  00EB  00F3               	movwf	___awdiv@dividend+1
  3319  00EC  085B               	movf	lavadoDelicado@i,w
  3320  00ED  00F2               	movwf	___awdiv@dividend
  3321  00EE  160A  118A  259E  120A  118A  	fcall	___awdiv
  3322  00F3  0871               	movf	?___awdiv+1,w
  3323  00F4  3A80               	xorlw	128
  3324  00F5  00FF               	movwf	127
  3325  00F6  3080               	movlw	128
  3326  00F7  027F               	subwf	127,w
  3327  00F8  1D03               	skipz
  3328  00F9  28FC               	goto	u3425
  3329  00FA  303C               	movlw	60
  3330  00FB  0270               	subwf	?___awdiv,w
  3331  00FC                     u3425:	
  3332  00FC  1C03               	skipc
  3333  00FD  292F               	goto	l2675
  3334                           
  3335                           ;main.c: 317: sprintf(aux,"      %i:%i:%i  ", (minutAux/60), (i/60)-60, (i-minutAux*60))
      +                          ;
  3336  00FE  30D9               	movlw	low (STR_8| (0+32768))
  3337  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  3338  0100  1303               	bcf	3,6	;RP1=0, select bank0
  3339  0101  00A0               	movwf	sprintf@f
  3340  0102  3090               	movlw	high (STR_8| (0+32768))
  3341  0103  00A1               	movwf	sprintf@f+1
  3342  0104  303C               	movlw	60
  3343  0105  00F0               	movwf	___awdiv@divisor
  3344  0106  3000               	movlw	0
  3345  0107  00F1               	movwf	___awdiv@divisor+1
  3346  0108  0861               	movf	_minutAux+1,w
  3347  0109  00F3               	movwf	___awdiv@dividend+1
  3348  010A  0860               	movf	_minutAux,w
  3349  010B  00F2               	movwf	___awdiv@dividend
  3350  010C  160A  118A  259E  120A  118A  	fcall	___awdiv
  3351  0111  0871               	movf	?___awdiv+1,w
  3352  0112  1283               	bcf	3,5	;RP0=0, select bank0
  3353  0113  1303               	bcf	3,6	;RP1=0, select bank0
  3354  0114  00A3               	movwf	?_sprintf+3
  3355  0115  0870               	movf	?___awdiv,w
  3356  0116  00A2               	movwf	?_sprintf+2
  3357  0117  303C               	movlw	60
  3358  0118  00F0               	movwf	___awdiv@divisor
  3359  0119  3000               	movlw	0
  3360  011A  00F1               	movwf	___awdiv@divisor+1
  3361  011B  085C               	movf	lavadoDelicado@i+1,w
  3362  011C  00F3               	movwf	___awdiv@dividend+1
  3363  011D  085B               	movf	lavadoDelicado@i,w
  3364  011E  00F2               	movwf	___awdiv@dividend
  3365  011F  160A  118A  259E  120A  118A  	fcall	___awdiv
  3366  0124  0870               	movf	?___awdiv,w
  3367  0125  3EC4               	addlw	196
  3368  0126  1283               	bcf	3,5	;RP0=0, select bank0
  3369  0127  1303               	bcf	3,6	;RP1=0, select bank0
  3370  0128  00A4               	movwf	?_sprintf+4
  3371  0129  0871               	movf	?___awdiv+1,w
  3372  012A  1803               	skipnc
  3373  012B  3E01               	addlw	1
  3374  012C  3EFF               	addlw	255
  3375  012D  00A5               	movwf	?_sprintf+5
  3376  012E  295B               	goto	L8
  3377  012F                     l2675:	
  3378                           ;main.c: 318: }else{
  3379                           
  3380                           
  3381                           ;main.c: 319: sprintf(aux,"      %i:%i:%i  ", (minutAux/60), (i/60), (i-minutAux*60));
  3382  012F  30D9               	movlw	low (STR_8| (0+32768))
  3383  0130  1283               	bcf	3,5	;RP0=0, select bank0
  3384  0131  1303               	bcf	3,6	;RP1=0, select bank0
  3385  0132  00A0               	movwf	sprintf@f
  3386  0133  3090               	movlw	high (STR_8| (0+32768))
  3387  0134  00A1               	movwf	sprintf@f+1
  3388  0135  303C               	movlw	60
  3389  0136  00F0               	movwf	___awdiv@divisor
  3390  0137  3000               	movlw	0
  3391  0138  00F1               	movwf	___awdiv@divisor+1
  3392  0139  0861               	movf	_minutAux+1,w
  3393  013A  00F3               	movwf	___awdiv@dividend+1
  3394  013B  0860               	movf	_minutAux,w
  3395  013C  00F2               	movwf	___awdiv@dividend
  3396  013D  160A  118A  259E  120A  118A  	fcall	___awdiv
  3397  0142  0871               	movf	?___awdiv+1,w
  3398  0143  1283               	bcf	3,5	;RP0=0, select bank0
  3399  0144  1303               	bcf	3,6	;RP1=0, select bank0
  3400  0145  00A3               	movwf	?_sprintf+3
  3401  0146  0870               	movf	?___awdiv,w
  3402  0147  00A2               	movwf	?_sprintf+2
  3403  0148  303C               	movlw	60
  3404  0149  00F0               	movwf	___awdiv@divisor
  3405  014A  3000               	movlw	0
  3406  014B  00F1               	movwf	___awdiv@divisor+1
  3407  014C  085C               	movf	lavadoDelicado@i+1,w
  3408  014D  00F3               	movwf	___awdiv@dividend+1
  3409  014E  085B               	movf	lavadoDelicado@i,w
  3410  014F  00F2               	movwf	___awdiv@dividend
  3411  0150  160A  118A  259E  120A  118A  	fcall	___awdiv
  3412  0155  0871               	movf	?___awdiv+1,w
  3413  0156  1283               	bcf	3,5	;RP0=0, select bank0
  3414  0157  1303               	bcf	3,6	;RP1=0, select bank0
  3415  0158  00A5               	movwf	?_sprintf+5
  3416  0159  0870               	movf	?___awdiv,w
  3417  015A  00A4               	movwf	?_sprintf+4
  3418  015B                     L8:	
  3419  015B  0861               	movf	_minutAux+1,w
  3420  015C  00F1               	movwf	___wmul@multiplier+1
  3421  015D  0860               	movf	_minutAux,w
  3422  015E  00F0               	movwf	___wmul@multiplier
  3423  015F  303C               	movlw	60
  3424  0160  00F2               	movwf	___wmul@multiplicand
  3425  0161  3000               	movlw	0
  3426  0162  00F3               	movwf	___wmul@multiplicand+1
  3427  0163  160A  118A  2441  120A  118A  	fcall	___wmul
  3428  0168  0970               	comf	?___wmul,w
  3429  0169  1283               	bcf	3,5	;RP0=0, select bank0
  3430  016A  1303               	bcf	3,6	;RP1=0, select bank0
  3431  016B  00D6               	movwf	??_lavadoDelicado
  3432  016C  0971               	comf	?___wmul+1,w
  3433  016D  00D7               	movwf	??_lavadoDelicado+1
  3434  016E  0AD6               	incf	??_lavadoDelicado,f
  3435  016F  1903               	skipnz
  3436  0170  0AD7               	incf	??_lavadoDelicado+1,f
  3437  0171  085B               	movf	lavadoDelicado@i,w
  3438  0172  0756               	addwf	??_lavadoDelicado,w
  3439  0173  00A6               	movwf	?_sprintf+6
  3440  0174  085C               	movf	lavadoDelicado@i+1,w
  3441  0175  1803               	skipnc
  3442  0176  0A5C               	incf	lavadoDelicado@i+1,w
  3443  0177  0757               	addwf	??_lavadoDelicado+1,w
  3444  0178  00A7               	movwf	?_sprintf+7
  3445  0179  30BA               	movlw	(low (_aux| 0))& (0+255)
  3446  017A  120A  158A  23AC  120A  118A  	fcall	_sprintf
  3447                           
  3448                           ;main.c: 320: }
  3449                           ;main.c: 321: if(i == 4200){
  3450  017F  3068               	movlw	104
  3451  0180  1283               	bcf	3,5	;RP0=0, select bank0
  3452  0181  1303               	bcf	3,6	;RP1=0, select bank0
  3453  0182  065B               	xorwf	lavadoDelicado@i,w
  3454  0183  3010               	movlw	16
  3455  0184  1903               	skipnz
  3456  0185  065C               	xorwf	lavadoDelicado@i+1,w
  3457  0186  1D03               	btfss	3,2
  3458  0187  29A0               	goto	l2683
  3459                           
  3460                           ;main.c: 322: Lcd_Text(2, 1, "      PRELAVADO     ");
  3461  0188  01F3               	clrf	Lcd_Text@x
  3462  0189  0AF3               	incf	Lcd_Text@x,f
  3463  018A  3070               	movlw	low (STR_9| (0+32768))
  3464  018B  00F4               	movwf	Lcd_Text@buffer
  3465  018C  3090               	movlw	high (STR_9| (0+32768))
  3466  018D  00F5               	movwf	Lcd_Text@buffer+1
  3467  018E  3002               	movlw	2
  3468  018F  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  3469                           
  3470                           ;main.c: 323: normal(581);
  3471  0194  3045               	movlw	69
  3472  0195  1283               	bcf	3,5	;RP0=0, select bank0
  3473  0196  1303               	bcf	3,6	;RP1=0, select bank0
  3474  0197  00D4               	movwf	normal@pwm
  3475  0198  3002               	movlw	2
  3476  0199  00D5               	movwf	normal@pwm+1
  3477  019A  160A  118A  2401  120A  118A  	fcall	_normal
  3478                           
  3479                           ;main.c: 324: }else if(i == 3540){
  3480  019F  2A70               	goto	l2725
  3481  01A0                     l2683:	
  3482  01A0  30D4               	movlw	212
  3483  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  3484  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  3485  01A3  065B               	xorwf	lavadoDelicado@i,w
  3486  01A4  300D               	movlw	13
  3487  01A5  1903               	skipnz
  3488  01A6  065C               	xorwf	lavadoDelicado@i+1,w
  3489  01A7  1D03               	btfss	3,2
  3490  01A8  29B7               	goto	l2689
  3491                           
  3492                           ;main.c: 325: Lcd_Text(2, 1, "      PRELAVADO     ");
  3493  01A9  01F3               	clrf	Lcd_Text@x
  3494  01AA  0AF3               	incf	Lcd_Text@x,f
  3495  01AB  3070               	movlw	low (STR_9| (0+32768))
  3496  01AC  00F4               	movwf	Lcd_Text@buffer
  3497  01AD  3090               	movlw	high (STR_9| (0+32768))
  3498  01AE  00F5               	movwf	Lcd_Text@buffer+1
  3499  01AF  3002               	movlw	2
  3500  01B0  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  3501                           
  3502                           ;main.c: 326: reversa(581);
  3503  01B5  3045               	movlw	69
  3504  01B6  2A2A               	goto	L10
  3505  01B7                     l2689:	
  3506                           ;main.c: 327: }else if(i == 2940){
  3507                           
  3508  01B7  307C               	movlw	124
  3509  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  3510  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  3511  01BA  065B               	xorwf	lavadoDelicado@i,w
  3512  01BB  300B               	movlw	11
  3513  01BC  1903               	skipnz
  3514  01BD  065C               	xorwf	lavadoDelicado@i+1,w
  3515  01BE  1D03               	btfss	3,2
  3516  01BF  29D8               	goto	l2695
  3517                           
  3518                           ;main.c: 328: Lcd_Text(2, 1, "      LAVADO        ");
  3519  01C0  01F3               	clrf	Lcd_Text@x
  3520  01C1  0AF3               	incf	Lcd_Text@x,f
  3521  01C2  301C               	movlw	low (STR_11| (0+32768))
  3522  01C3  00F4               	movwf	Lcd_Text@buffer
  3523  01C4  3090               	movlw	high (STR_11| (0+32768))
  3524  01C5  00F5               	movwf	Lcd_Text@buffer+1
  3525  01C6  3002               	movlw	2
  3526  01C7  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  3527                           
  3528                           ;main.c: 329: normal(440);
  3529  01CC  30B8               	movlw	184
  3530  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  3531  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  3532  01CF  00D4               	movwf	normal@pwm
  3533  01D0  3001               	movlw	1
  3534  01D1  00D5               	movwf	normal@pwm+1
  3535  01D2  160A  118A  2401  120A  118A  	fcall	_normal
  3536                           
  3537                           ;main.c: 330: }else if(i == 2340){
  3538  01D7  2A70               	goto	l2725
  3539  01D8                     l2695:	
  3540  01D8  3024               	movlw	36
  3541  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  3542  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  3543  01DB  065B               	xorwf	lavadoDelicado@i,w
  3544  01DC  3009               	movlw	9
  3545  01DD  1903               	skipnz
  3546  01DE  065C               	xorwf	lavadoDelicado@i+1,w
  3547  01DF  1D03               	btfss	3,2
  3548  01E0  29F3               	goto	l2701
  3549                           
  3550                           ;main.c: 331: Lcd_Text(2, 1, "      LAVADO        ");
  3551  01E1  01F3               	clrf	Lcd_Text@x
  3552  01E2  0AF3               	incf	Lcd_Text@x,f
  3553  01E3  301C               	movlw	low (STR_11| (0+32768))
  3554  01E4  00F4               	movwf	Lcd_Text@buffer
  3555  01E5  3090               	movlw	high (STR_11| (0+32768))
  3556  01E6  00F5               	movwf	Lcd_Text@buffer+1
  3557  01E7  3002               	movlw	2
  3558  01E8  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  3559                           
  3560                           ;main.c: 332: reversa(440);
  3561  01ED  30B8               	movlw	184
  3562  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  3563  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  3564  01F0  00D4               	movwf	reversa@pwm
  3565  01F1  3001               	movlw	1
  3566  01F2  2A6A               	goto	L9
  3567  01F3                     l2701:	
  3568                           ;main.c: 333: }else if(i == 1740){
  3569                           
  3570  01F3  30CC               	movlw	204
  3571  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  3572  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  3573  01F6  065B               	xorwf	lavadoDelicado@i,w
  3574  01F7  3006               	movlw	6
  3575  01F8  1903               	skipnz
  3576  01F9  065C               	xorwf	lavadoDelicado@i+1,w
  3577  01FA  1D03               	btfss	3,2
  3578  01FB  2A14               	goto	l2707
  3579                           
  3580                           ;main.c: 334: Lcd_Text(2, 1, "      ACLARADO      ");
  3581  01FC  01F3               	clrf	Lcd_Text@x
  3582  01FD  0AF3               	incf	Lcd_Text@x,f
  3583  01FE  3046               	movlw	low (STR_13| (0+32768))
  3584  01FF  00F4               	movwf	Lcd_Text@buffer
  3585  0200  3090               	movlw	high (STR_13| (0+32768))
  3586  0201  00F5               	movwf	Lcd_Text@buffer+1
  3587  0202  3002               	movlw	2
  3588  0203  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  3589                           
  3590                           ;main.c: 335: normal(661);
  3591  0208  3095               	movlw	149
  3592  0209  1283               	bcf	3,5	;RP0=0, select bank0
  3593  020A  1303               	bcf	3,6	;RP1=0, select bank0
  3594  020B  00D4               	movwf	normal@pwm
  3595  020C  3002               	movlw	2
  3596  020D  00D5               	movwf	normal@pwm+1
  3597  020E  160A  118A  2401  120A  118A  	fcall	_normal
  3598                           
  3599                           ;main.c: 336: }else if(i == 1440){
  3600  0213  2A70               	goto	l2725
  3601  0214                     l2707:	
  3602  0214  30A0               	movlw	160
  3603  0215  1283               	bcf	3,5	;RP0=0, select bank0
  3604  0216  1303               	bcf	3,6	;RP1=0, select bank0
  3605  0217  065B               	xorwf	lavadoDelicado@i,w
  3606  0218  3005               	movlw	5
  3607  0219  1903               	skipnz
  3608  021A  065C               	xorwf	lavadoDelicado@i+1,w
  3609  021B  1D03               	btfss	3,2
  3610  021C  2A2F               	goto	l2713
  3611                           
  3612                           ;main.c: 337: Lcd_Text(2, 1, "      ACLARADO      ");
  3613  021D  01F3               	clrf	Lcd_Text@x
  3614  021E  0AF3               	incf	Lcd_Text@x,f
  3615  021F  3046               	movlw	low (STR_13| (0+32768))
  3616  0220  00F4               	movwf	Lcd_Text@buffer
  3617  0221  3090               	movlw	high (STR_13| (0+32768))
  3618  0222  00F5               	movwf	Lcd_Text@buffer+1
  3619  0223  3002               	movlw	2
  3620  0224  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  3621                           
  3622                           ;main.c: 338: reversa(661);
  3623  0229  3095               	movlw	149
  3624  022A                     L10:	
  3625  022A  1283               	bcf	3,5	;RP0=0, select bank0
  3626  022B  1303               	bcf	3,6	;RP1=0, select bank0
  3627  022C  00D4               	movwf	reversa@pwm
  3628  022D  3002               	movlw	2
  3629  022E  2A6A               	goto	L9
  3630  022F                     l2713:	
  3631                           ;main.c: 339: }else if(i == 1140){
  3632                           
  3633  022F  3074               	movlw	116
  3634  0230  1283               	bcf	3,5	;RP0=0, select bank0
  3635  0231  1303               	bcf	3,6	;RP1=0, select bank0
  3636  0232  065B               	xorwf	lavadoDelicado@i,w
  3637  0233  3004               	movlw	4
  3638  0234  1903               	skipnz
  3639  0235  065C               	xorwf	lavadoDelicado@i+1,w
  3640  0236  1D03               	btfss	3,2
  3641  0237  2A50               	goto	l2719
  3642                           
  3643                           ;main.c: 340: Lcd_Text(2, 1, "      CENTRIFUGADO  ");
  3644  0238  01F3               	clrf	Lcd_Text@x
  3645  0239  0AF3               	incf	Lcd_Text@x,f
  3646  023A  30C4               	movlw	low (STR_15| (0+32768))
  3647  023B  00F4               	movwf	Lcd_Text@buffer
  3648  023C  3090               	movlw	high (STR_15| (0+32768))
  3649  023D  00F5               	movwf	Lcd_Text@buffer+1
  3650  023E  3002               	movlw	2
  3651  023F  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  3652                           
  3653                           ;main.c: 341: normal(821);
  3654  0244  3035               	movlw	53
  3655  0245  1283               	bcf	3,5	;RP0=0, select bank0
  3656  0246  1303               	bcf	3,6	;RP1=0, select bank0
  3657  0247  00D4               	movwf	normal@pwm
  3658  0248  3003               	movlw	3
  3659  0249  00D5               	movwf	normal@pwm+1
  3660  024A  160A  118A  2401  120A  118A  	fcall	_normal
  3661                           
  3662                           ;main.c: 342: }else if(i == 540){
  3663  024F  2A70               	goto	l2725
  3664  0250                     l2719:	
  3665  0250  301C               	movlw	28
  3666  0251  1283               	bcf	3,5	;RP0=0, select bank0
  3667  0252  1303               	bcf	3,6	;RP1=0, select bank0
  3668  0253  065B               	xorwf	lavadoDelicado@i,w
  3669  0254  3002               	movlw	2
  3670  0255  1903               	skipnz
  3671  0256  065C               	xorwf	lavadoDelicado@i+1,w
  3672  0257  1D03               	btfss	3,2
  3673  0258  2A70               	goto	l2725
  3674                           
  3675                           ;main.c: 343: Lcd_Text(2, 1, "      CENTRIFUGADO  ");
  3676  0259  01F3               	clrf	Lcd_Text@x
  3677  025A  0AF3               	incf	Lcd_Text@x,f
  3678  025B  30C4               	movlw	low (STR_15| (0+32768))
  3679  025C  00F4               	movwf	Lcd_Text@buffer
  3680  025D  3090               	movlw	high (STR_15| (0+32768))
  3681  025E  00F5               	movwf	Lcd_Text@buffer+1
  3682  025F  3002               	movlw	2
  3683  0260  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  3684                           
  3685                           ;main.c: 344: reversa(821);
  3686  0265  3035               	movlw	53
  3687  0266  1283               	bcf	3,5	;RP0=0, select bank0
  3688  0267  1303               	bcf	3,6	;RP1=0, select bank0
  3689  0268  00D4               	movwf	reversa@pwm
  3690  0269  3003               	movlw	3
  3691  026A                     L9:	
  3692  026A  00D5               	movwf	reversa@pwm+1
  3693  026B  160A  118A  240F  120A  118A  	fcall	_reversa
  3694  0270                     l2725:	
  3695                           
  3696                           ;main.c: 345: }
  3697                           ;main.c: 346: Lcd_Text(4, 1, aux);
  3698  0270  01F3               	clrf	Lcd_Text@x
  3699  0271  0AF3               	incf	Lcd_Text@x,f
  3700  0272  30BA               	movlw	(low (_aux| 0))& (0+255)
  3701  0273  00F4               	movwf	Lcd_Text@buffer
  3702  0274  3000               	movlw	0
  3703  0275  00F5               	movwf	Lcd_Text@buffer+1
  3704  0276  3004               	movlw	4
  3705  0277  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  3706                           
  3707                           ;main.c: 347: _delay((unsigned long)((1000)*(4000000/4000.0)));
  3708  027C  3006               	movlw	6
  3709  027D  1283               	bcf	3,5	;RP0=0, select bank0
  3710  027E  1303               	bcf	3,6	;RP1=0, select bank0
  3711  027F  00D8               	movwf	??_lavadoDelicado+2
  3712  0280  3013               	movlw	19
  3713  0281  00D7               	movwf	??_lavadoDelicado+1
  3714  0282  30AD               	movlw	173
  3715  0283  00D6               	movwf	??_lavadoDelicado
  3716  0284                     u3987:	
  3717  0284  0BD6               	decfsz	??_lavadoDelicado,f
  3718  0285  2A84               	goto	u3987
  3719  0286  0BD7               	decfsz	??_lavadoDelicado+1,f
  3720  0287  2A84               	goto	u3987
  3721  0288  0BD8               	decfsz	??_lavadoDelicado+2,f
  3722  0289  2A84               	goto	u3987
  3723  028A  30FF               	movlw	255
  3724  028B  1283               	bcf	3,5	;RP0=0, select bank0
  3725  028C  1303               	bcf	3,6	;RP1=0, select bank0
  3726  028D  07DB               	addwf	lavadoDelicado@i,f
  3727  028E  1803               	skipnc
  3728  028F  0ADC               	incf	lavadoDelicado@i+1,f
  3729  0290  30FF               	movlw	255
  3730  0291  07DC               	addwf	lavadoDelicado@i+1,f
  3731  0292  085C               	movf	lavadoDelicado@i+1,w
  3732  0293  3A80               	xorlw	128
  3733  0294  00FF               	movwf	127
  3734  0295  3080               	movlw	128
  3735  0296  027F               	subwf	127,w
  3736  0297  1D03               	skipz
  3737  0298  2A9B               	goto	u3515
  3738  0299  3001               	movlw	1
  3739  029A  025B               	subwf	lavadoDelicado@i,w
  3740  029B                     u3515:	
  3741  029B  1803               	skipnc
  3742  029C  28D1               	goto	l2669
  3743  029D                     l185:	
  3744                           
  3745                           ;main.c: 348: }
  3746                           ;main.c: 350: PORTAbits.RA0 = 1;
  3747  029D  1283               	bcf	3,5	;RP0=0, select bank0
  3748  029E  1303               	bcf	3,6	;RP1=0, select bank0
  3749  029F  1405               	bsf	5,0	;volatile
  3750                           
  3751                           ;main.c: 351: PORTAbits.RA1 = 0;
  3752  02A0  1085               	bcf	5,1	;volatile
  3753                           
  3754                           ;main.c: 352: PORTAbits.RA2 = 0;
  3755  02A1  1105               	bcf	5,2	;volatile
  3756                           
  3757                           ;main.c: 353: PORTAbits.RA3 = 1;
  3758  02A2  1585               	bsf	5,3	;volatile
  3759                           
  3760                           ;main.c: 354: Lcd_Command(1);
  3761  02A3  3001               	movlw	1
  3762  02A4  120A  158A  20CD  120A  118A  	fcall	_Lcd_Command
  3763                           
  3764                           ;main.c: 355: Lcd_Text(2, 1, "      Finalizado    ");
  3765  02A9  01F3               	clrf	Lcd_Text@x
  3766  02AA  0AF3               	incf	Lcd_Text@x,f
  3767  02AB  3085               	movlw	low (STR_17| (0+32768))
  3768  02AC  00F4               	movwf	Lcd_Text@buffer
  3769  02AD  3090               	movlw	high (STR_17| (0+32768))
  3770  02AE  00F5               	movwf	Lcd_Text@buffer+1
  3771  02AF  3002               	movlw	2
  3772  02B0  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  3773                           
  3774                           ;main.c: 356: for (int i = 0; i < 4; i++) {
  3775  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  3776  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  3777  02B7  01D9               	clrf	lavadoDelicado@i_389
  3778  02B8  01DA               	clrf	lavadoDelicado@i_389+1
  3779  02B9                     L11:	
  3780  02B9  085A               	movf	lavadoDelicado@i_389+1,w
  3781  02BA  3A80               	xorlw	128
  3782  02BB  00FF               	movwf	127
  3783  02BC  3080               	movlw	128
  3784  02BD  027F               	subwf	127,w
  3785  02BE  1D03               	skipz
  3786  02BF  2AC2               	goto	u3525
  3787  02C0  3004               	movlw	4
  3788  02C1  0259               	subwf	lavadoDelicado@i_389,w
  3789  02C2                     u3525:	
  3790  02C2  1803               	btfsc	3,0
  3791  02C3  0008               	return
  3792                           
  3793                           ;main.c: 357: PORTAbits.RA5 = 1;
  3794  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  3795  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  3796  02C6  1685               	bsf	5,5	;volatile
  3797                           
  3798                           ;main.c: 358: Lcd_Text(3, 1, "1");
  3799  02C7  01F3               	clrf	Lcd_Text@x
  3800  02C8  0AF3               	incf	Lcd_Text@x,f
  3801  02C9  305C               	movlw	low (STR_18| (0+32768))
  3802  02CA  00F4               	movwf	Lcd_Text@buffer
  3803  02CB  3091               	movlw	high (STR_18| (0+32768))
  3804  02CC  00F5               	movwf	Lcd_Text@buffer+1
  3805  02CD  3003               	movlw	3
  3806  02CE  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  3807                           
  3808                           ;main.c: 359: _delay((unsigned long)((1000)*(4000000/4000.0)));
  3809  02D3  3006               	movlw	6
  3810  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  3811  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  3812  02D6  00D8               	movwf	??_lavadoDelicado+2
  3813  02D7  3013               	movlw	19
  3814  02D8  00D7               	movwf	??_lavadoDelicado+1
  3815  02D9  30AD               	movlw	173
  3816  02DA  00D6               	movwf	??_lavadoDelicado
  3817  02DB                     u3997:	
  3818  02DB  0BD6               	decfsz	??_lavadoDelicado,f
  3819  02DC  2ADB               	goto	u3997
  3820  02DD  0BD7               	decfsz	??_lavadoDelicado+1,f
  3821  02DE  2ADB               	goto	u3997
  3822  02DF  0BD8               	decfsz	??_lavadoDelicado+2,f
  3823  02E0  2ADB               	goto	u3997
  3824                           
  3825                           ;main.c: 360: PORTAbits.RA5 = 0;
  3826  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  3827  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  3828  02E3  1285               	bcf	5,5	;volatile
  3829                           
  3830                           ;main.c: 361: Lcd_Text(3, 1, "2");
  3831  02E4  01F3               	clrf	Lcd_Text@x
  3832  02E5  0AF3               	incf	Lcd_Text@x,f
  3833  02E6  305E               	movlw	low (STR_19| (0+32768))
  3834  02E7  00F4               	movwf	Lcd_Text@buffer
  3835  02E8  3091               	movlw	high (STR_19| (0+32768))
  3836  02E9  00F5               	movwf	Lcd_Text@buffer+1
  3837  02EA  3003               	movlw	3
  3838  02EB  160A  118A  2509  120A  118A  	fcall	_Lcd_Text
  3839                           
  3840                           ;main.c: 362: _delay((unsigned long)((300)*(4000000/4000.0)));
  3841  02F0  3002               	movlw	2
  3842  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  3843  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  3844  02F3  00D8               	movwf	??_lavadoDelicado+2
  3845  02F4  3086               	movlw	134
  3846  02F5  00D7               	movwf	??_lavadoDelicado+1
  3847  02F6  3098               	movlw	152
  3848  02F7  00D6               	movwf	??_lavadoDelicado
  3849  02F8                     u4007:	
  3850  02F8  0BD6               	decfsz	??_lavadoDelicado,f
  3851  02F9  2AF8               	goto	u4007
  3852  02FA  0BD7               	decfsz	??_lavadoDelicado+1,f
  3853  02FB  2AF8               	goto	u4007
  3854  02FC  0BD8               	decfsz	??_lavadoDelicado+2,f
  3855  02FD  2AF8               	goto	u4007
  3856  02FE  0000               	nop
  3857  02FF  3001               	movlw	1
  3858  0300  1283               	bcf	3,5	;RP0=0, select bank0
  3859  0301  1303               	bcf	3,6	;RP1=0, select bank0
  3860  0302  07D9               	addwf	lavadoDelicado@i_389,f
  3861  0303  1803               	skipnc
  3862  0304  0ADA               	incf	lavadoDelicado@i_389+1,f
  3863  0305  3000               	movlw	0
  3864  0306  07DA               	addwf	lavadoDelicado@i_389+1,f
  3865  0307  2AB9               	goto	L11
  3866  0308                     __end_of_lavadoDelicado:	
  3867                           
  3868                           	psect	text4
  3869  140F                     __ptext4:	
  3870 ;; *************** function _reversa *****************
  3871 ;; Defined at:
  3872 ;;		line 366 in file "main.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  pwm             2   52[BANK0 ] int 
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;		None
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      void 
  3879 ;; Registers used:
  3880 ;;		wreg, status,2, status,0, pclath, cstack
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3886 ;;      Params:         0       2       0       0       0
  3887 ;;      Locals:         0       0       0       0       0
  3888 ;;      Temps:          0       0       0       0       0
  3889 ;;      Totals:         0       2       0       0       0
  3890 ;;Total ram usage:        2 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    3
  3893 ;; This function calls:
  3894 ;;		_PWM_Duty
  3895 ;; This function is called by:
  3896 ;;		_lavadoRapido
  3897 ;;		_lavadoLento
  3898 ;;		_lavadoDelicado
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           
  3903                           ;psect for function _reversa
  3904  140F                     _reversa:	
  3905                           
  3906                           ;main.c: 367: PWM_Duty(pwm);
  3907                           
  3908                           ;incstack = 0
  3909                           ; Regs used in _reversa: [wreg+status,2+status,0+pclath+cstack]
  3910  140F  1283               	bcf	3,5	;RP0=0, select bank0
  3911  1410  1303               	bcf	3,6	;RP1=0, select bank0
  3912  1411  0855               	movf	reversa@pwm+1,w
  3913  1412  00CF               	movwf	PWM_Duty@duty+1
  3914  1413  0854               	movf	reversa@pwm,w
  3915  1414  00CE               	movwf	PWM_Duty@duty
  3916  1415  120A  158A  2034   	fcall	_PWM_Duty
  3917                           
  3918                           ;main.c: 368: PORTDbits.RD0 = 0;
  3919  1418  1283               	bcf	3,5	;RP0=0, select bank0
  3920  1419  1303               	bcf	3,6	;RP1=0, select bank0
  3921  141A  1008               	bcf	8,0	;volatile
  3922                           
  3923                           ;main.c: 369: PORTDbits.RD1 = 1;
  3924  141B  1488               	bsf	8,1	;volatile
  3925  141C  0008               	return
  3926  141D                     __end_of_reversa:	
  3927                           
  3928                           	psect	text5
  3929  1401                     __ptext5:	
  3930 ;; *************** function _normal *****************
  3931 ;; Defined at:
  3932 ;;		line 372 in file "main.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;  pwm             2   52[BANK0 ] int 
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;		None
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  1    wreg      void 
  3939 ;; Registers used:
  3940 ;;		wreg, status,2, status,0, pclath, cstack
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3946 ;;      Params:         0       2       0       0       0
  3947 ;;      Locals:         0       0       0       0       0
  3948 ;;      Temps:          0       0       0       0       0
  3949 ;;      Totals:         0       2       0       0       0
  3950 ;;Total ram usage:        2 bytes
  3951 ;; Hardware stack levels used:    1
  3952 ;; Hardware stack levels required when called:    3
  3953 ;; This function calls:
  3954 ;;		_PWM_Duty
  3955 ;; This function is called by:
  3956 ;;		_lavadoRapido
  3957 ;;		_lavadoLento
  3958 ;;		_lavadoDelicado
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           
  3963                           ;psect for function _normal
  3964  1401                     _normal:	
  3965                           
  3966                           ;main.c: 373: PWM_Duty(pwm);
  3967                           
  3968                           ;incstack = 0
  3969                           ; Regs used in _normal: [wreg+status,2+status,0+pclath+cstack]
  3970  1401  1283               	bcf	3,5	;RP0=0, select bank0
  3971  1402  1303               	bcf	3,6	;RP1=0, select bank0
  3972  1403  0855               	movf	normal@pwm+1,w
  3973  1404  00CF               	movwf	PWM_Duty@duty+1
  3974  1405  0854               	movf	normal@pwm,w
  3975  1406  00CE               	movwf	PWM_Duty@duty
  3976  1407  120A  158A  2034   	fcall	_PWM_Duty
  3977                           
  3978                           ;main.c: 374: PORTDbits.RD0 = 1;
  3979  140A  1283               	bcf	3,5	;RP0=0, select bank0
  3980  140B  1303               	bcf	3,6	;RP1=0, select bank0
  3981  140C  1408               	bsf	8,0	;volatile
  3982                           
  3983                           ;main.c: 375: PORTDbits.RD1 = 0;
  3984  140D  1088               	bcf	8,1	;volatile
  3985  140E  0008               	return
  3986  140F                     __end_of_normal:	
  3987                           
  3988                           	psect	text6
  3989  0834                     __ptext6:	
  3990 ;; *************** function _PWM_Duty *****************
  3991 ;; Defined at:
  3992 ;;		line 430 in file "main.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  duty            2   46[BANK0 ] unsigned int 
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;		None
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  1    wreg      void 
  3999 ;; Registers used:
  4000 ;;		wreg, status,2, status,0, pclath, cstack
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4006 ;;      Params:         0       2       0       0       0
  4007 ;;      Locals:         0       0       0       0       0
  4008 ;;      Temps:          0       4       0       0       0
  4009 ;;      Totals:         0       6       0       0       0
  4010 ;;Total ram usage:        6 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; Hardware stack levels required when called:    2
  4013 ;; This function calls:
  4014 ;;		___aldiv
  4015 ;;		___altoft
  4016 ;;		___ftdiv
  4017 ;;		___ftmul
  4018 ;;		___fttol
  4019 ;;		___lwtoft
  4020 ;; This function is called by:
  4021 ;;		_main
  4022 ;;		_reversa
  4023 ;;		_normal
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           
  4028                           ;psect for function _PWM_Duty
  4029  0834                     _PWM_Duty:	
  4030                           
  4031                           ;main.c: 431: if(duty<1023){
  4032                           
  4033                           ;incstack = 0
  4034                           ; Regs used in _PWM_Duty: [wreg+status,2+status,0+pclath+cstack]
  4035  0834  3003               	movlw	3
  4036  0835  1283               	bcf	3,5	;RP0=0, select bank0
  4037  0836  1303               	bcf	3,6	;RP1=0, select bank0
  4038  0837  024F               	subwf	PWM_Duty@duty+1,w
  4039  0838  30FF               	movlw	255
  4040  0839  1903               	skipnz
  4041  083A  024E               	subwf	PWM_Duty@duty,w
  4042  083B  1803               	skipnc
  4043  083C  0008               	return
  4044                           
  4045                           ;main.c: 432: duty = ((float)duty/1023)*(4000000/(PWM_freq*4));
  4046  083D  084F               	movf	PWM_Duty@duty+1,w
  4047  083E  00F9               	movwf	___lwtoft@c+1
  4048  083F  084E               	movf	PWM_Duty@duty,w
  4049  0840  00F8               	movwf	___lwtoft@c
  4050  0841  160A  118A  242D  120A  158A  	fcall	___lwtoft
  4051  0846  0878               	movf	?___lwtoft,w
  4052  0847  1283               	bcf	3,5	;RP0=0, select bank0
  4053  0848  1303               	bcf	3,6	;RP1=0, select bank0
  4054  0849  00A3               	movwf	___ftdiv@f1
  4055  084A  0879               	movf	?___lwtoft+1,w
  4056  084B  00A4               	movwf	___ftdiv@f1+1
  4057  084C  087A               	movf	?___lwtoft+2,w
  4058  084D  00A5               	movwf	___ftdiv@f1+2
  4059  084E  30C0               	movlw	192
  4060  084F  00A0               	movwf	___ftdiv@f2
  4061  0850  307F               	movlw	127
  4062  0851  00A1               	movwf	___ftdiv@f2+1
  4063  0852  3044               	movlw	68
  4064  0853  00A2               	movwf	___ftdiv@f2+2
  4065  0854  120A  158A  2221  120A  158A  	fcall	___ftdiv
  4066  0859  1283               	bcf	3,5	;RP0=0, select bank0
  4067  085A  1303               	bcf	3,6	;RP1=0, select bank0
  4068  085B  0820               	movf	?___ftdiv,w
  4069  085C  00B3               	movwf	___ftmul@f2
  4070  085D  0821               	movf	?___ftdiv+1,w
  4071  085E  00B4               	movwf	___ftmul@f2+1
  4072  085F  0822               	movf	?___ftdiv+2,w
  4073  0860  00B5               	movwf	___ftmul@f2+2
  4074  0861  3000               	movlw	0
  4075  0862  00F7               	movwf	___aldiv@dividend+3
  4076  0863  303D               	movlw	61
  4077  0864  00F6               	movwf	___aldiv@dividend+2
  4078  0865  3009               	movlw	9
  4079  0866  00F5               	movwf	___aldiv@dividend+1
  4080  0867  3000               	movlw	0
  4081  0868  00F4               	movwf	___aldiv@dividend
  4082  0869  0864               	movf	_PWM_freq,w
  4083  086A  00D0               	movwf	??_PWM_Duty
  4084  086B  0865               	movf	_PWM_freq+1,w
  4085  086C  00D1               	movwf	??_PWM_Duty+1
  4086  086D  0866               	movf	_PWM_freq+2,w
  4087  086E  00D2               	movwf	??_PWM_Duty+2
  4088  086F  0867               	movf	_PWM_freq+3,w
  4089  0870  00D3               	movwf	??_PWM_Duty+3
  4090  0871  3002               	movlw	2
  4091  0872                     u2585:	
  4092  0872  1003               	clrc
  4093  0873  0DD0               	rlf	??_PWM_Duty,f
  4094  0874  0DD1               	rlf	??_PWM_Duty+1,f
  4095  0875  0DD2               	rlf	??_PWM_Duty+2,f
  4096  0876  0DD3               	rlf	??_PWM_Duty+3,f
  4097  0877  3EFF               	addlw	-1
  4098  0878  1D03               	skipz
  4099  0879  2872               	goto	u2585
  4100  087A  0853               	movf	??_PWM_Duty+3,w
  4101  087B  00F3               	movwf	___aldiv@divisor+3
  4102  087C  0852               	movf	??_PWM_Duty+2,w
  4103  087D  00F2               	movwf	___aldiv@divisor+2
  4104  087E  0851               	movf	??_PWM_Duty+1,w
  4105  087F  00F1               	movwf	___aldiv@divisor+1
  4106  0880  0850               	movf	??_PWM_Duty,w
  4107  0881  00F0               	movwf	___aldiv@divisor
  4108  0882  160A  118A  2771  120A  158A  	fcall	___aldiv
  4109  0887  0873               	movf	?___aldiv+3,w
  4110  0888  1283               	bcf	3,5	;RP0=0, select bank0
  4111  0889  1303               	bcf	3,6	;RP1=0, select bank0
  4112  088A  00A9               	movwf	___altoft@c+3
  4113  088B  0872               	movf	?___aldiv+2,w
  4114  088C  00A8               	movwf	___altoft@c+2
  4115  088D  0871               	movf	?___aldiv+1,w
  4116  088E  00A7               	movwf	___altoft@c+1
  4117  088F  0870               	movf	?___aldiv,w
  4118  0890  00A6               	movwf	___altoft@c
  4119  0891  160A  118A  24C7  120A  158A  	fcall	___altoft
  4120  0896  1283               	bcf	3,5	;RP0=0, select bank0
  4121  0897  1303               	bcf	3,6	;RP1=0, select bank0
  4122  0898  0826               	movf	?___altoft,w
  4123  0899  00B0               	movwf	___ftmul@f1
  4124  089A  0827               	movf	?___altoft+1,w
  4125  089B  00B1               	movwf	___ftmul@f1+1
  4126  089C  0828               	movf	?___altoft+2,w
  4127  089D  00B2               	movwf	___ftmul@f1+2
  4128  089E  120A  158A  22D9  120A  158A  	fcall	___ftmul
  4129  08A3  1283               	bcf	3,5	;RP0=0, select bank0
  4130  08A4  1303               	bcf	3,6	;RP1=0, select bank0
  4131  08A5  0830               	movf	?___ftmul,w
  4132  08A6  00C0               	movwf	___fttol@f1
  4133  08A7  0831               	movf	?___ftmul+1,w
  4134  08A8  00C1               	movwf	___fttol@f1+1
  4135  08A9  0832               	movf	?___ftmul+2,w
  4136  08AA  00C2               	movwf	___fttol@f1+2
  4137  08AB  160A  118A  26E3  120A  158A  	fcall	___fttol
  4138  08B0  1283               	bcf	3,5	;RP0=0, select bank0
  4139  08B1  1303               	bcf	3,6	;RP1=0, select bank0
  4140  08B2  0841               	movf	?___fttol+1,w
  4141  08B3  00CF               	movwf	PWM_Duty@duty+1
  4142  08B4  0840               	movf	?___fttol,w
  4143  08B5  00CE               	movwf	PWM_Duty@duty
  4144                           
  4145                           ;main.c: 433: CCP1X = duty & 1;
  4146  08B6  1C4E               	btfss	PWM_Duty@duty,0
  4147  08B7  28BC               	goto	u2590
  4148  08B8  1283               	bcf	3,5	;RP0=0, select bank0
  4149  08B9  1303               	bcf	3,6	;RP1=0, select bank0
  4150  08BA  1697               	bsf	23,5	;volatile
  4151  08BB  28BF               	goto	l2121
  4152  08BC                     u2590:	
  4153  08BC  1283               	bcf	3,5	;RP0=0, select bank0
  4154  08BD  1303               	bcf	3,6	;RP1=0, select bank0
  4155  08BE  1297               	bcf	23,5	;volatile
  4156  08BF                     l2121:	
  4157                           
  4158                           ;main.c: 434: CCP1Y = duty & 2;
  4159  08BF  1217               	bcf	23,4	;volatile
  4160                           
  4161                           ;main.c: 435: CCPR1L = duty>>2;
  4162  08C0  084F               	movf	PWM_Duty@duty+1,w
  4163  08C1  00D1               	movwf	??_PWM_Duty+1
  4164  08C2  084E               	movf	PWM_Duty@duty,w
  4165  08C3  00D0               	movwf	??_PWM_Duty
  4166  08C4  1003               	clrc
  4167  08C5  0CD1               	rrf	??_PWM_Duty+1,f
  4168  08C6  0CD0               	rrf	??_PWM_Duty,f
  4169  08C7  1003               	clrc
  4170  08C8  0CD1               	rrf	??_PWM_Duty+1,f
  4171  08C9  0CD0               	rrf	??_PWM_Duty,f
  4172  08CA  0850               	movf	??_PWM_Duty,w
  4173  08CB  0095               	movwf	21	;volatile
  4174  08CC  0008               	return
  4175  08CD                     __end_of_PWM_Duty:	
  4176                           
  4177                           	psect	text7
  4178  142D                     __ptext7:	
  4179 ;; *************** function ___lwtoft *****************
  4180 ;; Defined at:
  4181 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  c               2    8[COMMON] unsigned int 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;		None
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  3    8[COMMON] float 
  4188 ;; Registers used:
  4189 ;;		wreg, status,2, status,0, pclath, cstack
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4195 ;;      Params:         3       0       0       0       0
  4196 ;;      Locals:         0       0       0       0       0
  4197 ;;      Temps:          1       0       0       0       0
  4198 ;;      Totals:         4       0       0       0       0
  4199 ;;Total ram usage:        4 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; Hardware stack levels required when called:    1
  4202 ;; This function calls:
  4203 ;;		___ftpack
  4204 ;; This function is called by:
  4205 ;;		_PWM_Duty
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           
  4210                           ;psect for function ___lwtoft
  4211  142D                     ___lwtoft:	
  4212                           
  4213                           ;incstack = 0
  4214                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  4215  142D  0878               	movf	___lwtoft@c,w
  4216  142E  00F0               	movwf	___ftpack@arg
  4217  142F  0879               	movf	___lwtoft@c+1,w
  4218  1430  00F1               	movwf	___ftpack@arg+1
  4219  1431  01F2               	clrf	___ftpack@arg+2
  4220  1432  308E               	movlw	142
  4221  1433  00FB               	movwf	??___lwtoft
  4222  1434  087B               	movf	??___lwtoft,w
  4223  1435  00F3               	movwf	___ftpack@exp
  4224  1436  01F4               	clrf	___ftpack@sign
  4225  1437  160A  118A  25F7   	fcall	___ftpack
  4226  143A  0870               	movf	?___ftpack,w
  4227  143B  00F8               	movwf	?___lwtoft
  4228  143C  0871               	movf	?___ftpack+1,w
  4229  143D  00F9               	movwf	?___lwtoft+1
  4230  143E  0872               	movf	?___ftpack+2,w
  4231  143F  00FA               	movwf	?___lwtoft+2
  4232  1440  0008               	return
  4233  1441                     __end_of___lwtoft:	
  4234                           
  4235                           	psect	text8
  4236  16E3                     __ptext8:	
  4237 ;; *************** function ___fttol *****************
  4238 ;; Defined at:
  4239 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;  f1              3   32[BANK0 ] float 
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;  lval            4   41[BANK0 ] unsigned long 
  4244 ;;  exp1            1   45[BANK0 ] unsigned char 
  4245 ;;  sign1           1   40[BANK0 ] unsigned char 
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  4   32[BANK0 ] long 
  4248 ;; Registers used:
  4249 ;;		wreg, status,2, status,0
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4255 ;;      Params:         0       4       0       0       0
  4256 ;;      Locals:         0       6       0       0       0
  4257 ;;      Temps:          0       4       0       0       0
  4258 ;;      Totals:         0      14       0       0       0
  4259 ;;Total ram usage:       14 bytes
  4260 ;; Hardware stack levels used:    1
  4261 ;; This function calls:
  4262 ;;		Nothing
  4263 ;; This function is called by:
  4264 ;;		_PWM_Duty
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           
  4269                           ;psect for function ___fttol
  4270  16E3                     ___fttol:	
  4271                           
  4272                           ;incstack = 0
  4273                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4274  16E3  1283               	bcf	3,5	;RP0=0, select bank0
  4275  16E4  1303               	bcf	3,6	;RP1=0, select bank0
  4276  16E5  0840               	movf	___fttol@f1,w
  4277  16E6  00C4               	movwf	??___fttol
  4278  16E7  0841               	movf	___fttol@f1+1,w
  4279  16E8  00C5               	movwf	??___fttol+1
  4280  16E9  0842               	movf	___fttol@f1+2,w
  4281  16EA  00C6               	movwf	??___fttol+2
  4282  16EB  1003               	clrc
  4283  16EC  0D45               	rlf	??___fttol+1,w
  4284  16ED  0D46               	rlf	??___fttol+2,w
  4285  16EE  00C7               	movwf	??___fttol+3
  4286  16EF  0847               	movf	??___fttol+3,w
  4287  16F0  00CD               	movwf	___fttol@exp1
  4288  16F1  084D               	movf	___fttol@exp1,w
  4289  16F2  1D03               	btfss	3,2
  4290  16F3  2EFD               	goto	l2057
  4291  16F4  3000               	movlw	0
  4292  16F5  00C3               	movwf	?___fttol+3
  4293  16F6  3000               	movlw	0
  4294  16F7  00C2               	movwf	?___fttol+2
  4295  16F8  3000               	movlw	0
  4296  16F9  00C1               	movwf	?___fttol+1
  4297  16FA  3000               	movlw	0
  4298  16FB  00C0               	movwf	?___fttol
  4299  16FC  0008               	return
  4300  16FD                     l2057:	
  4301  16FD  0840               	movf	___fttol@f1,w
  4302  16FE  00C4               	movwf	??___fttol
  4303  16FF  0841               	movf	___fttol@f1+1,w
  4304  1700  00C5               	movwf	??___fttol+1
  4305  1701  0842               	movf	___fttol@f1+2,w
  4306  1702  00C6               	movwf	??___fttol+2
  4307  1703  3017               	movlw	23
  4308  1704                     u2425:	
  4309  1704  1003               	clrc
  4310  1705  0CC6               	rrf	??___fttol+2,f
  4311  1706  0CC5               	rrf	??___fttol+1,f
  4312  1707  0CC4               	rrf	??___fttol,f
  4313  1708  3EFF               	addlw	-1
  4314  1709  1D03               	skipz
  4315  170A  2F04               	goto	u2425
  4316  170B  0844               	movf	??___fttol,w
  4317  170C  00C7               	movwf	??___fttol+3
  4318  170D  0847               	movf	??___fttol+3,w
  4319  170E  00C8               	movwf	___fttol@sign1
  4320  170F  17C1               	bsf	___fttol@f1+1,7
  4321  1710  30FF               	movlw	255
  4322  1711  05C0               	andwf	___fttol@f1,f
  4323  1712  30FF               	movlw	255
  4324  1713  05C1               	andwf	___fttol@f1+1,f
  4325  1714  3000               	movlw	0
  4326  1715  05C2               	andwf	___fttol@f1+2,f
  4327  1716  0840               	movf	___fttol@f1,w
  4328  1717  00C9               	movwf	___fttol@lval
  4329  1718  0841               	movf	___fttol@f1+1,w
  4330  1719  00CA               	movwf	___fttol@lval+1
  4331  171A  0842               	movf	___fttol@f1+2,w
  4332  171B  00CB               	movwf	___fttol@lval+2
  4333  171C  01CC               	clrf	___fttol@lval+3
  4334  171D  308E               	movlw	142
  4335  171E  02CD               	subwf	___fttol@exp1,f
  4336  171F  1FCD               	btfss	___fttol@exp1,7
  4337  1720  2F3F               	goto	l2077
  4338  1721  084D               	movf	___fttol@exp1,w
  4339  1722  3A80               	xorlw	128
  4340  1723  3E8F               	addlw	143
  4341  1724  1803               	skipnc
  4342  1725  2F2F               	goto	l2075
  4343  1726  3000               	movlw	0
  4344  1727  00C3               	movwf	?___fttol+3
  4345  1728  3000               	movlw	0
  4346  1729  00C2               	movwf	?___fttol+2
  4347  172A  3000               	movlw	0
  4348  172B  00C1               	movwf	?___fttol+1
  4349  172C  3000               	movlw	0
  4350  172D  00C0               	movwf	?___fttol
  4351  172E  0008               	return
  4352  172F                     l2075:	
  4353  172F  3001               	movlw	1
  4354  1730                     u2455:	
  4355  1730  1003               	clrc
  4356  1731  0CCC               	rrf	___fttol@lval+3,f
  4357  1732  0CCB               	rrf	___fttol@lval+2,f
  4358  1733  0CCA               	rrf	___fttol@lval+1,f
  4359  1734  0CC9               	rrf	___fttol@lval,f
  4360  1735  3EFF               	addlw	-1
  4361  1736  1D03               	skipz
  4362  1737  2F30               	goto	u2455
  4363  1738  3001               	movlw	1
  4364  1739  00C4               	movwf	??___fttol
  4365  173A  0844               	movf	??___fttol,w
  4366  173B  07CD               	addwf	___fttol@exp1,f
  4367  173C  1903               	btfsc	3,2
  4368  173D  2F5A               	goto	l2085
  4369  173E  2F2F               	goto	l2075
  4370  173F                     l2077:	
  4371  173F  3018               	movlw	24
  4372  1740  024D               	subwf	___fttol@exp1,w
  4373  1741  1C03               	skipc
  4374  1742  2F57               	goto	l669
  4375  1743  3000               	movlw	0
  4376  1744  00C3               	movwf	?___fttol+3
  4377  1745  3000               	movlw	0
  4378  1746  00C2               	movwf	?___fttol+2
  4379  1747  3000               	movlw	0
  4380  1748  00C1               	movwf	?___fttol+1
  4381  1749  3000               	movlw	0
  4382  174A  00C0               	movwf	?___fttol
  4383  174B  0008               	return
  4384  174C                     l2083:	
  4385  174C  3001               	movlw	1
  4386  174D  00C4               	movwf	??___fttol
  4387  174E                     u2485:	
  4388  174E  1003               	clrc
  4389  174F  0DC9               	rlf	___fttol@lval,f
  4390  1750  0DCA               	rlf	___fttol@lval+1,f
  4391  1751  0DCB               	rlf	___fttol@lval+2,f
  4392  1752  0DCC               	rlf	___fttol@lval+3,f
  4393  1753  0BC4               	decfsz	??___fttol,f
  4394  1754  2F4E               	goto	u2485
  4395  1755  3001               	movlw	1
  4396  1756  02CD               	subwf	___fttol@exp1,f
  4397  1757                     l669:	
  4398  1757  084D               	movf	___fttol@exp1,w
  4399  1758  1D03               	btfss	3,2
  4400  1759  2F4C               	goto	l2083
  4401  175A                     l2085:	
  4402  175A  0848               	movf	___fttol@sign1,w
  4403  175B  1903               	btfsc	3,2
  4404  175C  2F68               	goto	l2089
  4405  175D  09C9               	comf	___fttol@lval,f
  4406  175E  09CA               	comf	___fttol@lval+1,f
  4407  175F  09CB               	comf	___fttol@lval+2,f
  4408  1760  09CC               	comf	___fttol@lval+3,f
  4409  1761  0AC9               	incf	___fttol@lval,f
  4410  1762  1903               	skipnz
  4411  1763  0ACA               	incf	___fttol@lval+1,f
  4412  1764  1903               	skipnz
  4413  1765  0ACB               	incf	___fttol@lval+2,f
  4414  1766  1903               	skipnz
  4415  1767  0ACC               	incf	___fttol@lval+3,f
  4416  1768                     l2089:	
  4417  1768  084C               	movf	___fttol@lval+3,w
  4418  1769  00C3               	movwf	?___fttol+3
  4419  176A  084B               	movf	___fttol@lval+2,w
  4420  176B  00C2               	movwf	?___fttol+2
  4421  176C  084A               	movf	___fttol@lval+1,w
  4422  176D  00C1               	movwf	?___fttol+1
  4423  176E  0849               	movf	___fttol@lval,w
  4424  176F  00C0               	movwf	?___fttol
  4425  1770  0008               	return
  4426  1771                     __end_of___fttol:	
  4427                           
  4428                           	psect	text9
  4429  0AD9                     __ptext9:	
  4430 ;; *************** function ___ftmul *****************
  4431 ;; Defined at:
  4432 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;  f1              3   16[BANK0 ] float 
  4435 ;;  f2              3   19[BANK0 ] float 
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  4438 ;;  sign            1   31[BANK0 ] unsigned char 
  4439 ;;  cntr            1   30[BANK0 ] unsigned char 
  4440 ;;  exp             1   26[BANK0 ] unsigned char 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  3   16[BANK0 ] float 
  4443 ;; Registers used:
  4444 ;;		wreg, status,2, status,0, pclath, cstack
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4450 ;;      Params:         0       6       0       0       0
  4451 ;;      Locals:         0       6       0       0       0
  4452 ;;      Temps:          0       4       0       0       0
  4453 ;;      Totals:         0      16       0       0       0
  4454 ;;Total ram usage:       16 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; Hardware stack levels required when called:    1
  4457 ;; This function calls:
  4458 ;;		___ftpack
  4459 ;; This function is called by:
  4460 ;;		_PWM_Duty
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           
  4465                           ;psect for function ___ftmul
  4466  0AD9                     ___ftmul:	
  4467                           
  4468                           ;incstack = 0
  4469                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4470  0AD9  1283               	bcf	3,5	;RP0=0, select bank0
  4471  0ADA  1303               	bcf	3,6	;RP1=0, select bank0
  4472  0ADB  0830               	movf	___ftmul@f1,w
  4473  0ADC  00B6               	movwf	??___ftmul
  4474  0ADD  0831               	movf	___ftmul@f1+1,w
  4475  0ADE  00B7               	movwf	??___ftmul+1
  4476  0ADF  0832               	movf	___ftmul@f1+2,w
  4477  0AE0  00B8               	movwf	??___ftmul+2
  4478  0AE1  1003               	clrc
  4479  0AE2  0D37               	rlf	??___ftmul+1,w
  4480  0AE3  0D38               	rlf	??___ftmul+2,w
  4481  0AE4  00B9               	movwf	??___ftmul+3
  4482  0AE5  0839               	movf	??___ftmul+3,w
  4483  0AE6  00BA               	movwf	___ftmul@exp
  4484  0AE7  083A               	movf	___ftmul@exp,w
  4485  0AE8  1D03               	btfss	3,2
  4486  0AE9  2AF1               	goto	l2007
  4487  0AEA  3000               	movlw	0
  4488  0AEB  00B0               	movwf	?___ftmul
  4489  0AEC  3000               	movlw	0
  4490  0AED  00B1               	movwf	?___ftmul+1
  4491  0AEE  3000               	movlw	0
  4492  0AEF  00B2               	movwf	?___ftmul+2
  4493  0AF0  0008               	return
  4494  0AF1                     l2007:	
  4495  0AF1  0833               	movf	___ftmul@f2,w
  4496  0AF2  00B6               	movwf	??___ftmul
  4497  0AF3  0834               	movf	___ftmul@f2+1,w
  4498  0AF4  00B7               	movwf	??___ftmul+1
  4499  0AF5  0835               	movf	___ftmul@f2+2,w
  4500  0AF6  00B8               	movwf	??___ftmul+2
  4501  0AF7  1003               	clrc
  4502  0AF8  0D37               	rlf	??___ftmul+1,w
  4503  0AF9  0D38               	rlf	??___ftmul+2,w
  4504  0AFA  00B9               	movwf	??___ftmul+3
  4505  0AFB  0839               	movf	??___ftmul+3,w
  4506  0AFC  00BF               	movwf	___ftmul@sign
  4507  0AFD  083F               	movf	___ftmul@sign,w
  4508  0AFE  1D03               	btfss	3,2
  4509  0AFF  2B07               	goto	l2013
  4510  0B00  3000               	movlw	0
  4511  0B01  00B0               	movwf	?___ftmul
  4512  0B02  3000               	movlw	0
  4513  0B03  00B1               	movwf	?___ftmul+1
  4514  0B04  3000               	movlw	0
  4515  0B05  00B2               	movwf	?___ftmul+2
  4516  0B06  0008               	return
  4517  0B07                     l2013:	
  4518  0B07  083F               	movf	___ftmul@sign,w
  4519  0B08  3E7B               	addlw	123
  4520  0B09  00B6               	movwf	??___ftmul
  4521  0B0A  0836               	movf	??___ftmul,w
  4522  0B0B  07BA               	addwf	___ftmul@exp,f
  4523  0B0C  0830               	movf	___ftmul@f1,w
  4524  0B0D  00B6               	movwf	??___ftmul
  4525  0B0E  0831               	movf	___ftmul@f1+1,w
  4526  0B0F  00B7               	movwf	??___ftmul+1
  4527  0B10  0832               	movf	___ftmul@f1+2,w
  4528  0B11  00B8               	movwf	??___ftmul+2
  4529  0B12  3010               	movlw	16
  4530  0B13                     u2295:	
  4531  0B13  1003               	clrc
  4532  0B14  0CB8               	rrf	??___ftmul+2,f
  4533  0B15  0CB7               	rrf	??___ftmul+1,f
  4534  0B16  0CB6               	rrf	??___ftmul,f
  4535  0B17  3EFF               	addlw	-1
  4536  0B18  1D03               	skipz
  4537  0B19  2B13               	goto	u2295
  4538  0B1A  0836               	movf	??___ftmul,w
  4539  0B1B  00B9               	movwf	??___ftmul+3
  4540  0B1C  0839               	movf	??___ftmul+3,w
  4541  0B1D  00BF               	movwf	___ftmul@sign
  4542  0B1E  0833               	movf	___ftmul@f2,w
  4543  0B1F  00B6               	movwf	??___ftmul
  4544  0B20  0834               	movf	___ftmul@f2+1,w
  4545  0B21  00B7               	movwf	??___ftmul+1
  4546  0B22  0835               	movf	___ftmul@f2+2,w
  4547  0B23  00B8               	movwf	??___ftmul+2
  4548  0B24  3010               	movlw	16
  4549  0B25                     u2305:	
  4550  0B25  1003               	clrc
  4551  0B26  0CB8               	rrf	??___ftmul+2,f
  4552  0B27  0CB7               	rrf	??___ftmul+1,f
  4553  0B28  0CB6               	rrf	??___ftmul,f
  4554  0B29  3EFF               	addlw	-1
  4555  0B2A  1D03               	skipz
  4556  0B2B  2B25               	goto	u2305
  4557  0B2C  0836               	movf	??___ftmul,w
  4558  0B2D  00B9               	movwf	??___ftmul+3
  4559  0B2E  0839               	movf	??___ftmul+3,w
  4560  0B2F  06BF               	xorwf	___ftmul@sign,f
  4561  0B30  3080               	movlw	128
  4562  0B31  00B6               	movwf	??___ftmul
  4563  0B32  0836               	movf	??___ftmul,w
  4564  0B33  05BF               	andwf	___ftmul@sign,f
  4565  0B34  17B1               	bsf	___ftmul@f1+1,7
  4566  0B35  17B4               	bsf	___ftmul@f2+1,7
  4567  0B36  30FF               	movlw	255
  4568  0B37  05B3               	andwf	___ftmul@f2,f
  4569  0B38  30FF               	movlw	255
  4570  0B39  05B4               	andwf	___ftmul@f2+1,f
  4571  0B3A  3000               	movlw	0
  4572  0B3B  05B5               	andwf	___ftmul@f2+2,f
  4573  0B3C  3000               	movlw	0
  4574  0B3D  00BB               	movwf	___ftmul@f3_as_product
  4575  0B3E  3000               	movlw	0
  4576  0B3F  00BC               	movwf	___ftmul@f3_as_product+1
  4577  0B40  3000               	movlw	0
  4578  0B41  00BD               	movwf	___ftmul@f3_as_product+2
  4579  0B42  3007               	movlw	7
  4580  0B43  00B6               	movwf	??___ftmul
  4581  0B44  0836               	movf	??___ftmul,w
  4582  0B45  00BE               	movwf	___ftmul@cntr
  4583  0B46                     l2025:	
  4584  0B46  1C30               	btfss	___ftmul@f1,0
  4585  0B47  2B56               	goto	l2029
  4586  0B48  0833               	movf	___ftmul@f2,w
  4587  0B49  07BB               	addwf	___ftmul@f3_as_product,f
  4588  0B4A  0834               	movf	___ftmul@f2+1,w
  4589  0B4B  1103               	clrz
  4590  0B4C  1803               	skipnc
  4591  0B4D  0A34               	incf	___ftmul@f2+1,w
  4592  0B4E  1D03               	btfss	3,2
  4593  0B4F  07BC               	addwf	___ftmul@f3_as_product+1,f
  4594  0B50  0835               	movf	___ftmul@f2+2,w
  4595  0B51  1103               	clrz
  4596  0B52  1803               	skipnc
  4597  0B53  0A35               	incf	___ftmul@f2+2,w
  4598  0B54  1D03               	btfss	3,2
  4599  0B55  07BD               	addwf	___ftmul@f3_as_product+2,f
  4600  0B56                     l2029:	
  4601  0B56  3001               	movlw	1
  4602  0B57                     u2335:	
  4603  0B57  1003               	clrc
  4604  0B58  0CB2               	rrf	___ftmul@f1+2,f
  4605  0B59  0CB1               	rrf	___ftmul@f1+1,f
  4606  0B5A  0CB0               	rrf	___ftmul@f1,f
  4607  0B5B  3EFF               	addlw	-1
  4608  0B5C  1D03               	skipz
  4609  0B5D  2B57               	goto	u2335
  4610  0B5E  3001               	movlw	1
  4611  0B5F                     u2345:	
  4612  0B5F  1003               	clrc
  4613  0B60  0DB3               	rlf	___ftmul@f2,f
  4614  0B61  0DB4               	rlf	___ftmul@f2+1,f
  4615  0B62  0DB5               	rlf	___ftmul@f2+2,f
  4616  0B63  3EFF               	addlw	-1
  4617  0B64  1D03               	skipz
  4618  0B65  2B5F               	goto	u2345
  4619  0B66  3001               	movlw	1
  4620  0B67  02BE               	subwf	___ftmul@cntr,f
  4621  0B68  1D03               	btfss	3,2
  4622  0B69  2B46               	goto	l2025
  4623  0B6A  3009               	movlw	9
  4624  0B6B  00B6               	movwf	??___ftmul
  4625  0B6C  0836               	movf	??___ftmul,w
  4626  0B6D  00BE               	movwf	___ftmul@cntr
  4627  0B6E                     l2037:	
  4628  0B6E  1C30               	btfss	___ftmul@f1,0
  4629  0B6F  2B7E               	goto	l2041
  4630  0B70  0833               	movf	___ftmul@f2,w
  4631  0B71  07BB               	addwf	___ftmul@f3_as_product,f
  4632  0B72  0834               	movf	___ftmul@f2+1,w
  4633  0B73  1103               	clrz
  4634  0B74  1803               	skipnc
  4635  0B75  0A34               	incf	___ftmul@f2+1,w
  4636  0B76  1D03               	btfss	3,2
  4637  0B77  07BC               	addwf	___ftmul@f3_as_product+1,f
  4638  0B78  0835               	movf	___ftmul@f2+2,w
  4639  0B79  1103               	clrz
  4640  0B7A  1803               	skipnc
  4641  0B7B  0A35               	incf	___ftmul@f2+2,w
  4642  0B7C  1D03               	btfss	3,2
  4643  0B7D  07BD               	addwf	___ftmul@f3_as_product+2,f
  4644  0B7E                     l2041:	
  4645  0B7E  3001               	movlw	1
  4646  0B7F                     u2385:	
  4647  0B7F  1003               	clrc
  4648  0B80  0CB2               	rrf	___ftmul@f1+2,f
  4649  0B81  0CB1               	rrf	___ftmul@f1+1,f
  4650  0B82  0CB0               	rrf	___ftmul@f1,f
  4651  0B83  3EFF               	addlw	-1
  4652  0B84  1D03               	skipz
  4653  0B85  2B7F               	goto	u2385
  4654  0B86  3001               	movlw	1
  4655  0B87                     u2395:	
  4656  0B87  1003               	clrc
  4657  0B88  0CBD               	rrf	___ftmul@f3_as_product+2,f
  4658  0B89  0CBC               	rrf	___ftmul@f3_as_product+1,f
  4659  0B8A  0CBB               	rrf	___ftmul@f3_as_product,f
  4660  0B8B  3EFF               	addlw	-1
  4661  0B8C  1D03               	skipz
  4662  0B8D  2B87               	goto	u2395
  4663  0B8E  3001               	movlw	1
  4664  0B8F  02BE               	subwf	___ftmul@cntr,f
  4665  0B90  1D03               	btfss	3,2
  4666  0B91  2B6E               	goto	l2037
  4667  0B92  083B               	movf	___ftmul@f3_as_product,w
  4668  0B93  00F0               	movwf	___ftpack@arg
  4669  0B94  083C               	movf	___ftmul@f3_as_product+1,w
  4670  0B95  00F1               	movwf	___ftpack@arg+1
  4671  0B96  083D               	movf	___ftmul@f3_as_product+2,w
  4672  0B97  00F2               	movwf	___ftpack@arg+2
  4673  0B98  083A               	movf	___ftmul@exp,w
  4674  0B99  00B6               	movwf	??___ftmul
  4675  0B9A  0836               	movf	??___ftmul,w
  4676  0B9B  00F3               	movwf	___ftpack@exp
  4677  0B9C  083F               	movf	___ftmul@sign,w
  4678  0B9D  00B7               	movwf	??___ftmul+1
  4679  0B9E  0837               	movf	??___ftmul+1,w
  4680  0B9F  00F4               	movwf	___ftpack@sign
  4681  0BA0  160A  118A  25F7   	fcall	___ftpack
  4682  0BA3  0870               	movf	?___ftpack,w
  4683  0BA4  1283               	bcf	3,5	;RP0=0, select bank0
  4684  0BA5  1303               	bcf	3,6	;RP1=0, select bank0
  4685  0BA6  00B0               	movwf	?___ftmul
  4686  0BA7  0871               	movf	?___ftpack+1,w
  4687  0BA8  00B1               	movwf	?___ftmul+1
  4688  0BA9  0872               	movf	?___ftpack+2,w
  4689  0BAA  00B2               	movwf	?___ftmul+2
  4690  0BAB  0008               	return
  4691  0BAC                     __end_of___ftmul:	
  4692                           
  4693                           	psect	text10
  4694  0A21                     __ptext10:	
  4695 ;; *************** function ___ftdiv *****************
  4696 ;; Defined at:
  4697 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;  f2              3    0[BANK0 ] float 
  4700 ;;  f1              3    3[BANK0 ] float 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  f3              3   11[BANK0 ] float 
  4703 ;;  sign            1   15[BANK0 ] unsigned char 
  4704 ;;  exp             1   14[BANK0 ] unsigned char 
  4705 ;;  cntr            1   10[BANK0 ] unsigned char 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  3    0[BANK0 ] float 
  4708 ;; Registers used:
  4709 ;;		wreg, status,2, status,0, pclath, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4715 ;;      Params:         0       6       0       0       0
  4716 ;;      Locals:         0       6       0       0       0
  4717 ;;      Temps:          0       4       0       0       0
  4718 ;;      Totals:         0      16       0       0       0
  4719 ;;Total ram usage:       16 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:    1
  4722 ;; This function calls:
  4723 ;;		___ftpack
  4724 ;; This function is called by:
  4725 ;;		_PWM_Duty
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           
  4730                           ;psect for function ___ftdiv
  4731  0A21                     ___ftdiv:	
  4732                           
  4733                           ;incstack = 0
  4734                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4735  0A21  1283               	bcf	3,5	;RP0=0, select bank0
  4736  0A22  1303               	bcf	3,6	;RP1=0, select bank0
  4737  0A23  0823               	movf	___ftdiv@f1,w
  4738  0A24  00A6               	movwf	??___ftdiv
  4739  0A25  0824               	movf	___ftdiv@f1+1,w
  4740  0A26  00A7               	movwf	??___ftdiv+1
  4741  0A27  0825               	movf	___ftdiv@f1+2,w
  4742  0A28  00A8               	movwf	??___ftdiv+2
  4743  0A29  1003               	clrc
  4744  0A2A  0D27               	rlf	??___ftdiv+1,w
  4745  0A2B  0D28               	rlf	??___ftdiv+2,w
  4746  0A2C  00A9               	movwf	??___ftdiv+3
  4747  0A2D  0829               	movf	??___ftdiv+3,w
  4748  0A2E  00AE               	movwf	___ftdiv@exp
  4749  0A2F  082E               	movf	___ftdiv@exp,w
  4750  0A30  1D03               	btfss	3,2
  4751  0A31  2A39               	goto	l1965
  4752  0A32  3000               	movlw	0
  4753  0A33  00A0               	movwf	?___ftdiv
  4754  0A34  3000               	movlw	0
  4755  0A35  00A1               	movwf	?___ftdiv+1
  4756  0A36  3000               	movlw	0
  4757  0A37  00A2               	movwf	?___ftdiv+2
  4758  0A38  0008               	return
  4759  0A39                     l1965:	
  4760  0A39  0820               	movf	___ftdiv@f2,w
  4761  0A3A  00A6               	movwf	??___ftdiv
  4762  0A3B  0821               	movf	___ftdiv@f2+1,w
  4763  0A3C  00A7               	movwf	??___ftdiv+1
  4764  0A3D  0822               	movf	___ftdiv@f2+2,w
  4765  0A3E  00A8               	movwf	??___ftdiv+2
  4766  0A3F  1003               	clrc
  4767  0A40  0D27               	rlf	??___ftdiv+1,w
  4768  0A41  0D28               	rlf	??___ftdiv+2,w
  4769  0A42  00A9               	movwf	??___ftdiv+3
  4770  0A43  0829               	movf	??___ftdiv+3,w
  4771  0A44  00AF               	movwf	___ftdiv@sign
  4772  0A45  082F               	movf	___ftdiv@sign,w
  4773  0A46  1D03               	btfss	3,2
  4774  0A47  2A4F               	goto	l1971
  4775  0A48  3000               	movlw	0
  4776  0A49  00A0               	movwf	?___ftdiv
  4777  0A4A  3000               	movlw	0
  4778  0A4B  00A1               	movwf	?___ftdiv+1
  4779  0A4C  3000               	movlw	0
  4780  0A4D  00A2               	movwf	?___ftdiv+2
  4781  0A4E  0008               	return
  4782  0A4F                     l1971:	
  4783  0A4F  3000               	movlw	0
  4784  0A50  00AB               	movwf	___ftdiv@f3
  4785  0A51  3000               	movlw	0
  4786  0A52  00AC               	movwf	___ftdiv@f3+1
  4787  0A53  3000               	movlw	0
  4788  0A54  00AD               	movwf	___ftdiv@f3+2
  4789  0A55  3089               	movlw	137
  4790  0A56  072F               	addwf	___ftdiv@sign,w
  4791  0A57  00A6               	movwf	??___ftdiv
  4792  0A58  0826               	movf	??___ftdiv,w
  4793  0A59  02AE               	subwf	___ftdiv@exp,f
  4794  0A5A  0823               	movf	___ftdiv@f1,w
  4795  0A5B  00A6               	movwf	??___ftdiv
  4796  0A5C  0824               	movf	___ftdiv@f1+1,w
  4797  0A5D  00A7               	movwf	??___ftdiv+1
  4798  0A5E  0825               	movf	___ftdiv@f1+2,w
  4799  0A5F  00A8               	movwf	??___ftdiv+2
  4800  0A60  3010               	movlw	16
  4801  0A61                     u2215:	
  4802  0A61  1003               	clrc
  4803  0A62  0CA8               	rrf	??___ftdiv+2,f
  4804  0A63  0CA7               	rrf	??___ftdiv+1,f
  4805  0A64  0CA6               	rrf	??___ftdiv,f
  4806  0A65  3EFF               	addlw	-1
  4807  0A66  1D03               	skipz
  4808  0A67  2A61               	goto	u2215
  4809  0A68  0826               	movf	??___ftdiv,w
  4810  0A69  00A9               	movwf	??___ftdiv+3
  4811  0A6A  0829               	movf	??___ftdiv+3,w
  4812  0A6B  00AF               	movwf	___ftdiv@sign
  4813  0A6C  0820               	movf	___ftdiv@f2,w
  4814  0A6D  00A6               	movwf	??___ftdiv
  4815  0A6E  0821               	movf	___ftdiv@f2+1,w
  4816  0A6F  00A7               	movwf	??___ftdiv+1
  4817  0A70  0822               	movf	___ftdiv@f2+2,w
  4818  0A71  00A8               	movwf	??___ftdiv+2
  4819  0A72  3010               	movlw	16
  4820  0A73                     u2225:	
  4821  0A73  1003               	clrc
  4822  0A74  0CA8               	rrf	??___ftdiv+2,f
  4823  0A75  0CA7               	rrf	??___ftdiv+1,f
  4824  0A76  0CA6               	rrf	??___ftdiv,f
  4825  0A77  3EFF               	addlw	-1
  4826  0A78  1D03               	skipz
  4827  0A79  2A73               	goto	u2225
  4828  0A7A  0826               	movf	??___ftdiv,w
  4829  0A7B  00A9               	movwf	??___ftdiv+3
  4830  0A7C  0829               	movf	??___ftdiv+3,w
  4831  0A7D  06AF               	xorwf	___ftdiv@sign,f
  4832  0A7E  3080               	movlw	128
  4833  0A7F  00A6               	movwf	??___ftdiv
  4834  0A80  0826               	movf	??___ftdiv,w
  4835  0A81  05AF               	andwf	___ftdiv@sign,f
  4836  0A82  17A4               	bsf	___ftdiv@f1+1,7
  4837  0A83  30FF               	movlw	255
  4838  0A84  05A3               	andwf	___ftdiv@f1,f
  4839  0A85  30FF               	movlw	255
  4840  0A86  05A4               	andwf	___ftdiv@f1+1,f
  4841  0A87  3000               	movlw	0
  4842  0A88  05A5               	andwf	___ftdiv@f1+2,f
  4843  0A89  17A1               	bsf	___ftdiv@f2+1,7
  4844  0A8A  30FF               	movlw	255
  4845  0A8B  05A0               	andwf	___ftdiv@f2,f
  4846  0A8C  30FF               	movlw	255
  4847  0A8D  05A1               	andwf	___ftdiv@f2+1,f
  4848  0A8E  3000               	movlw	0
  4849  0A8F  05A2               	andwf	___ftdiv@f2+2,f
  4850  0A90  3018               	movlw	24
  4851  0A91  00A6               	movwf	??___ftdiv
  4852  0A92  0826               	movf	??___ftdiv,w
  4853  0A93  00AA               	movwf	___ftdiv@cntr
  4854  0A94                     l1985:	
  4855  0A94  3001               	movlw	1
  4856  0A95                     u2235:	
  4857  0A95  1003               	clrc
  4858  0A96  0DAB               	rlf	___ftdiv@f3,f
  4859  0A97  0DAC               	rlf	___ftdiv@f3+1,f
  4860  0A98  0DAD               	rlf	___ftdiv@f3+2,f
  4861  0A99  3EFF               	addlw	-1
  4862  0A9A  1D03               	skipz
  4863  0A9B  2A95               	goto	u2235
  4864  0A9C  0822               	movf	___ftdiv@f2+2,w
  4865  0A9D  0225               	subwf	___ftdiv@f1+2,w
  4866  0A9E  1D03               	skipz
  4867  0A9F  2AA6               	goto	u2245
  4868  0AA0  0821               	movf	___ftdiv@f2+1,w
  4869  0AA1  0224               	subwf	___ftdiv@f1+1,w
  4870  0AA2  1D03               	skipz
  4871  0AA3  2AA6               	goto	u2245
  4872  0AA4  0820               	movf	___ftdiv@f2,w
  4873  0AA5  0223               	subwf	___ftdiv@f1,w
  4874  0AA6                     u2245:	
  4875  0AA6  1C03               	skipc
  4876  0AA7  2AB3               	goto	l1993
  4877  0AA8  0820               	movf	___ftdiv@f2,w
  4878  0AA9  02A3               	subwf	___ftdiv@f1,f
  4879  0AAA  0821               	movf	___ftdiv@f2+1,w
  4880  0AAB  1C03               	skipc
  4881  0AAC  0F21               	incfsz	___ftdiv@f2+1,w
  4882  0AAD  02A4               	subwf	___ftdiv@f1+1,f
  4883  0AAE  0822               	movf	___ftdiv@f2+2,w
  4884  0AAF  1C03               	skipc
  4885  0AB0  0A22               	incf	___ftdiv@f2+2,w
  4886  0AB1  02A5               	subwf	___ftdiv@f1+2,f
  4887  0AB2  142B               	bsf	___ftdiv@f3,0
  4888  0AB3                     l1993:	
  4889  0AB3  3001               	movlw	1
  4890  0AB4                     u2255:	
  4891  0AB4  1003               	clrc
  4892  0AB5  0DA3               	rlf	___ftdiv@f1,f
  4893  0AB6  0DA4               	rlf	___ftdiv@f1+1,f
  4894  0AB7  0DA5               	rlf	___ftdiv@f1+2,f
  4895  0AB8  3EFF               	addlw	-1
  4896  0AB9  1D03               	skipz
  4897  0ABA  2AB4               	goto	u2255
  4898  0ABB  3001               	movlw	1
  4899  0ABC  02AA               	subwf	___ftdiv@cntr,f
  4900  0ABD  1D03               	btfss	3,2
  4901  0ABE  2A94               	goto	l1985
  4902  0ABF  082B               	movf	___ftdiv@f3,w
  4903  0AC0  00F0               	movwf	___ftpack@arg
  4904  0AC1  082C               	movf	___ftdiv@f3+1,w
  4905  0AC2  00F1               	movwf	___ftpack@arg+1
  4906  0AC3  082D               	movf	___ftdiv@f3+2,w
  4907  0AC4  00F2               	movwf	___ftpack@arg+2
  4908  0AC5  082E               	movf	___ftdiv@exp,w
  4909  0AC6  00A6               	movwf	??___ftdiv
  4910  0AC7  0826               	movf	??___ftdiv,w
  4911  0AC8  00F3               	movwf	___ftpack@exp
  4912  0AC9  082F               	movf	___ftdiv@sign,w
  4913  0ACA  00A7               	movwf	??___ftdiv+1
  4914  0ACB  0827               	movf	??___ftdiv+1,w
  4915  0ACC  00F4               	movwf	___ftpack@sign
  4916  0ACD  160A  118A  25F7   	fcall	___ftpack
  4917  0AD0  0870               	movf	?___ftpack,w
  4918  0AD1  1283               	bcf	3,5	;RP0=0, select bank0
  4919  0AD2  1303               	bcf	3,6	;RP1=0, select bank0
  4920  0AD3  00A0               	movwf	?___ftdiv
  4921  0AD4  0871               	movf	?___ftpack+1,w
  4922  0AD5  00A1               	movwf	?___ftdiv+1
  4923  0AD6  0872               	movf	?___ftpack+2,w
  4924  0AD7  00A2               	movwf	?___ftdiv+2
  4925  0AD8  0008               	return
  4926  0AD9                     __end_of___ftdiv:	
  4927                           
  4928                           	psect	text11
  4929  14C7                     __ptext11:	
  4930 ;; *************** function ___altoft *****************
  4931 ;; Defined at:
  4932 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\altoft.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;  c               4    6[BANK0 ] long 
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;  sign            1   12[COMMON] unsigned char 
  4937 ;;  exp             1   11[COMMON] unsigned char 
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  3    6[BANK0 ] float 
  4940 ;; Registers used:
  4941 ;;		wreg, status,2, status,0, pclath, cstack
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4947 ;;      Params:         0       4       0       0       0
  4948 ;;      Locals:         2       0       0       0       0
  4949 ;;      Temps:          2       0       0       0       0
  4950 ;;      Totals:         4       4       0       0       0
  4951 ;;Total ram usage:        8 bytes
  4952 ;; Hardware stack levels used:    1
  4953 ;; Hardware stack levels required when called:    1
  4954 ;; This function calls:
  4955 ;;		___ftpack
  4956 ;; This function is called by:
  4957 ;;		_PWM_Duty
  4958 ;; This function uses a non-reentrant model
  4959 ;;
  4960                           
  4961                           
  4962                           ;psect for function ___altoft
  4963  14C7                     ___altoft:	
  4964                           
  4965                           ;incstack = 0
  4966                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  4967  14C7  01FC               	clrf	___altoft@sign
  4968  14C8  308E               	movlw	142
  4969  14C9  00F9               	movwf	??___altoft
  4970  14CA  0879               	movf	??___altoft,w
  4971  14CB  00FB               	movwf	___altoft@exp
  4972  14CC  1283               	bcf	3,5	;RP0=0, select bank0
  4973  14CD  1303               	bcf	3,6	;RP1=0, select bank0
  4974  14CE  1FA9               	btfss	___altoft@c+3,7
  4975  14CF  2CDD               	goto	l1953
  4976  14D0  09A6               	comf	___altoft@c,f
  4977  14D1  09A7               	comf	___altoft@c+1,f
  4978  14D2  09A8               	comf	___altoft@c+2,f
  4979  14D3  09A9               	comf	___altoft@c+3,f
  4980  14D4  0AA6               	incf	___altoft@c,f
  4981  14D5  1903               	skipnz
  4982  14D6  0AA7               	incf	___altoft@c+1,f
  4983  14D7  1903               	skipnz
  4984  14D8  0AA8               	incf	___altoft@c+2,f
  4985  14D9  1903               	skipnz
  4986  14DA  0AA9               	incf	___altoft@c+3,f
  4987  14DB  01FC               	clrf	___altoft@sign
  4988  14DC  0AFC               	incf	___altoft@sign,f
  4989  14DD                     l1953:	
  4990  14DD  30FF               	movlw	255
  4991  14DE  0529               	andwf	___altoft@c+3,w
  4992  14DF  1903               	btfsc	3,2
  4993  14E0  2CEF               	goto	l1955
  4994  14E1  3001               	movlw	1
  4995  14E2                     u2175:	
  4996  14E2  1003               	clrc
  4997  14E3  0CA9               	rrf	___altoft@c+3,f
  4998  14E4  0CA8               	rrf	___altoft@c+2,f
  4999  14E5  0CA7               	rrf	___altoft@c+1,f
  5000  14E6  0CA6               	rrf	___altoft@c,f
  5001  14E7  3EFF               	addlw	-1
  5002  14E8  1D03               	skipz
  5003  14E9  2CE2               	goto	u2175
  5004  14EA  3001               	movlw	1
  5005  14EB  00F9               	movwf	??___altoft
  5006  14EC  0879               	movf	??___altoft,w
  5007  14ED  07FB               	addwf	___altoft@exp,f
  5008  14EE  2CDD               	goto	l1953
  5009  14EF                     l1955:	
  5010  14EF  0826               	movf	___altoft@c,w
  5011  14F0  00F0               	movwf	___ftpack@arg
  5012  14F1  0827               	movf	___altoft@c+1,w
  5013  14F2  00F1               	movwf	___ftpack@arg+1
  5014  14F3  0828               	movf	___altoft@c+2,w
  5015  14F4  00F2               	movwf	___ftpack@arg+2
  5016  14F5  087B               	movf	___altoft@exp,w
  5017  14F6  00F9               	movwf	??___altoft
  5018  14F7  0879               	movf	??___altoft,w
  5019  14F8  00F3               	movwf	___ftpack@exp
  5020  14F9  087C               	movf	___altoft@sign,w
  5021  14FA  00FA               	movwf	??___altoft+1
  5022  14FB  087A               	movf	??___altoft+1,w
  5023  14FC  00F4               	movwf	___ftpack@sign
  5024  14FD  160A  118A  25F7   	fcall	___ftpack
  5025  1500  0870               	movf	?___ftpack,w
  5026  1501  1283               	bcf	3,5	;RP0=0, select bank0
  5027  1502  1303               	bcf	3,6	;RP1=0, select bank0
  5028  1503  00A6               	movwf	?___altoft
  5029  1504  0871               	movf	?___ftpack+1,w
  5030  1505  00A7               	movwf	?___altoft+1
  5031  1506  0872               	movf	?___ftpack+2,w
  5032  1507  00A8               	movwf	?___altoft+2
  5033  1508  0008               	return
  5034  1509                     __end_of___altoft:	
  5035                           
  5036                           	psect	text12
  5037  15F7                     __ptext12:	
  5038 ;; *************** function ___ftpack *****************
  5039 ;; Defined at:
  5040 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;  arg             3    0[COMMON] unsigned um
  5043 ;;  exp             1    3[COMMON] unsigned char 
  5044 ;;  sign            1    4[COMMON] unsigned char 
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;		None
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  3    0[COMMON] float 
  5049 ;; Registers used:
  5050 ;;		wreg, status,2, status,0
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5056 ;;      Params:         5       0       0       0       0
  5057 ;;      Locals:         0       0       0       0       0
  5058 ;;      Temps:          3       0       0       0       0
  5059 ;;      Totals:         8       0       0       0       0
  5060 ;;Total ram usage:        8 bytes
  5061 ;; Hardware stack levels used:    1
  5062 ;; This function calls:
  5063 ;;		Nothing
  5064 ;; This function is called by:
  5065 ;;		___altoft
  5066 ;;		___ftdiv
  5067 ;;		___ftmul
  5068 ;;		___lwtoft
  5069 ;; This function uses a non-reentrant model
  5070 ;;
  5071                           
  5072                           
  5073                           ;psect for function ___ftpack
  5074  15F7                     ___ftpack:	
  5075                           
  5076                           ;incstack = 0
  5077                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5078  15F7  0873               	movf	___ftpack@exp,w
  5079  15F8  1903               	btfsc	3,2
  5080  15F9  2DFF               	goto	l1875
  5081  15FA  0872               	movf	___ftpack@arg+2,w
  5082  15FB  0471               	iorwf	___ftpack@arg+1,w
  5083  15FC  0470               	iorwf	___ftpack@arg,w
  5084  15FD  1D03               	skipz
  5085  15FE  2E12               	goto	l1881
  5086  15FF                     l1875:	
  5087  15FF  3000               	movlw	0
  5088  1600  00F0               	movwf	?___ftpack
  5089  1601  3000               	movlw	0
  5090  1602  00F1               	movwf	?___ftpack+1
  5091  1603  3000               	movlw	0
  5092  1604  00F2               	movwf	?___ftpack+2
  5093  1605  0008               	return
  5094  1606                     l1879:	
  5095  1606  3001               	movlw	1
  5096  1607  00F5               	movwf	??___ftpack
  5097  1608  0875               	movf	??___ftpack,w
  5098  1609  07F3               	addwf	___ftpack@exp,f
  5099  160A  3001               	movlw	1
  5100  160B                     u1965:	
  5101  160B  1003               	clrc
  5102  160C  0CF2               	rrf	___ftpack@arg+2,f
  5103  160D  0CF1               	rrf	___ftpack@arg+1,f
  5104  160E  0CF0               	rrf	___ftpack@arg,f
  5105  160F  3EFF               	addlw	-1
  5106  1610  1D03               	skipz
  5107  1611  2E0B               	goto	u1965
  5108  1612                     l1881:	
  5109  1612  30FE               	movlw	254
  5110  1613  0572               	andwf	___ftpack@arg+2,w
  5111  1614  1903               	btfsc	3,2
  5112  1615  2E2D               	goto	l578
  5113  1616  2E06               	goto	l1879
  5114  1617                     l1883:	
  5115  1617  3001               	movlw	1
  5116  1618  00F5               	movwf	??___ftpack
  5117  1619  0875               	movf	??___ftpack,w
  5118  161A  07F3               	addwf	___ftpack@exp,f
  5119  161B  3001               	movlw	1
  5120  161C  07F0               	addwf	___ftpack@arg,f
  5121  161D  3000               	movlw	0
  5122  161E  1803               	skipnc
  5123  161F  3001               	movlw	1
  5124  1620  07F1               	addwf	___ftpack@arg+1,f
  5125  1621  3000               	movlw	0
  5126  1622  1803               	skipnc
  5127  1623  3001               	movlw	1
  5128  1624  07F2               	addwf	___ftpack@arg+2,f
  5129  1625  3001               	movlw	1
  5130  1626                     u1985:	
  5131  1626  1003               	clrc
  5132  1627  0CF2               	rrf	___ftpack@arg+2,f
  5133  1628  0CF1               	rrf	___ftpack@arg+1,f
  5134  1629  0CF0               	rrf	___ftpack@arg,f
  5135  162A  3EFF               	addlw	-1
  5136  162B  1D03               	skipz
  5137  162C  2E26               	goto	u1985
  5138  162D                     l578:	
  5139  162D  30FF               	movlw	255
  5140  162E  0572               	andwf	___ftpack@arg+2,w
  5141  162F  1903               	btfsc	3,2
  5142  1630  2E3C               	goto	l1891
  5143  1631  2E17               	goto	l1883
  5144  1632                     l1889:	
  5145  1632  3001               	movlw	1
  5146  1633  02F3               	subwf	___ftpack@exp,f
  5147  1634  3001               	movlw	1
  5148  1635                     u2005:	
  5149  1635  1003               	clrc
  5150  1636  0DF0               	rlf	___ftpack@arg,f
  5151  1637  0DF1               	rlf	___ftpack@arg+1,f
  5152  1638  0DF2               	rlf	___ftpack@arg+2,f
  5153  1639  3EFF               	addlw	-1
  5154  163A  1D03               	skipz
  5155  163B  2E35               	goto	u2005
  5156  163C                     l1891:	
  5157  163C  1BF1               	btfsc	___ftpack@arg+1,7
  5158  163D  2E42               	goto	l585
  5159  163E  3002               	movlw	2
  5160  163F  0273               	subwf	___ftpack@exp,w
  5161  1640  1803               	skipnc
  5162  1641  2E32               	goto	l1889
  5163  1642                     l585:	
  5164  1642  1873               	btfsc	___ftpack@exp,0
  5165  1643  2E4A               	goto	l586
  5166  1644  30FF               	movlw	255
  5167  1645  05F0               	andwf	___ftpack@arg,f
  5168  1646  307F               	movlw	127
  5169  1647  05F1               	andwf	___ftpack@arg+1,f
  5170  1648  30FF               	movlw	255
  5171  1649  05F2               	andwf	___ftpack@arg+2,f
  5172  164A                     l586:	
  5173  164A  1003               	clrc
  5174  164B  0CF3               	rrf	___ftpack@exp,f
  5175  164C  0873               	movf	___ftpack@exp,w
  5176  164D  00F5               	movwf	??___ftpack
  5177  164E  01F6               	clrf	??___ftpack+1
  5178  164F  01F7               	clrf	??___ftpack+2
  5179  1650  3010               	movlw	16
  5180  1651                     u2045:	
  5181  1651  1003               	clrc
  5182  1652  0DF5               	rlf	??___ftpack,f
  5183  1653  0DF6               	rlf	??___ftpack+1,f
  5184  1654  0DF7               	rlf	??___ftpack+2,f
  5185  1655  3EFF               	addlw	-1
  5186  1656  1D03               	skipz
  5187  1657  2E51               	goto	u2045
  5188  1658  0875               	movf	??___ftpack,w
  5189  1659  04F0               	iorwf	___ftpack@arg,f
  5190  165A  0876               	movf	??___ftpack+1,w
  5191  165B  04F1               	iorwf	___ftpack@arg+1,f
  5192  165C  0877               	movf	??___ftpack+2,w
  5193  165D  04F2               	iorwf	___ftpack@arg+2,f
  5194  165E  0874               	movf	___ftpack@sign,w
  5195  165F  1903               	btfsc	3,2
  5196  1660  0008               	return
  5197  1661  17F2               	bsf	___ftpack@arg+2,7
  5198  1662  0008               	return
  5199  1663                     __end_of___ftpack:	
  5200                           
  5201                           	psect	text13
  5202  1441                     __ptext13:	
  5203 ;; *************** function ___wmul *****************
  5204 ;; Defined at:
  5205 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;  multiplier      2    0[COMMON] unsigned int 
  5208 ;;  multiplicand    2    2[COMMON] unsigned int 
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;  product         2    4[COMMON] unsigned int 
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  2    0[COMMON] unsigned int 
  5213 ;; Registers used:
  5214 ;;		wreg, status,2, status,0
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5220 ;;      Params:         4       0       0       0       0
  5221 ;;      Locals:         2       0       0       0       0
  5222 ;;      Temps:          0       0       0       0       0
  5223 ;;      Totals:         6       0       0       0       0
  5224 ;;Total ram usage:        6 bytes
  5225 ;; Hardware stack levels used:    1
  5226 ;; This function calls:
  5227 ;;		Nothing
  5228 ;; This function is called by:
  5229 ;;		_lavadoRapido
  5230 ;;		_lavadoLento
  5231 ;;		_lavadoDelicado
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           
  5236                           ;psect for function ___wmul
  5237  1441                     ___wmul:	
  5238                           
  5239                           ;incstack = 0
  5240                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5241  1441  01F4               	clrf	___wmul@product
  5242  1442  01F5               	clrf	___wmul@product+1
  5243  1443                     l2287:	
  5244  1443  1C70               	btfss	___wmul@multiplier,0
  5245  1444  2C4B               	goto	l417
  5246  1445  0872               	movf	___wmul@multiplicand,w
  5247  1446  07F4               	addwf	___wmul@product,f
  5248  1447  1803               	skipnc
  5249  1448  0AF5               	incf	___wmul@product+1,f
  5250  1449  0873               	movf	___wmul@multiplicand+1,w
  5251  144A  07F5               	addwf	___wmul@product+1,f
  5252  144B                     l417:	
  5253  144B  3001               	movlw	1
  5254  144C                     u2905:	
  5255  144C  1003               	clrc
  5256  144D  0DF2               	rlf	___wmul@multiplicand,f
  5257  144E  0DF3               	rlf	___wmul@multiplicand+1,f
  5258  144F  3EFF               	addlw	-1
  5259  1450  1D03               	skipz
  5260  1451  2C4C               	goto	u2905
  5261  1452  3001               	movlw	1
  5262  1453                     u2915:	
  5263  1453  1003               	clrc
  5264  1454  0CF1               	rrf	___wmul@multiplier+1,f
  5265  1455  0CF0               	rrf	___wmul@multiplier,f
  5266  1456  3EFF               	addlw	-1
  5267  1457  1D03               	skipz
  5268  1458  2C53               	goto	u2915
  5269  1459  0870               	movf	___wmul@multiplier,w
  5270  145A  0471               	iorwf	___wmul@multiplier+1,w
  5271  145B  1D03               	btfss	3,2
  5272  145C  2C43               	goto	l2287
  5273  145D  0875               	movf	___wmul@product+1,w
  5274  145E  00F1               	movwf	?___wmul+1
  5275  145F  0874               	movf	___wmul@product,w
  5276  1460  00F0               	movwf	?___wmul
  5277  1461  0008               	return
  5278  1462                     __end_of___wmul:	
  5279                           
  5280                           	psect	text14
  5281  159E                     __ptext14:	
  5282 ;; *************** function ___awdiv *****************
  5283 ;; Defined at:
  5284 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;  divisor         2    0[COMMON] int 
  5287 ;;  dividend        2    2[COMMON] int 
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;  quotient        2    7[COMMON] int 
  5290 ;;  sign            1    6[COMMON] unsigned char 
  5291 ;;  counter         1    5[COMMON] unsigned char 
  5292 ;; Return value:  Size  Location     Type
  5293 ;;                  2    0[COMMON] int 
  5294 ;; Registers used:
  5295 ;;		wreg, status,2, status,0
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5301 ;;      Params:         4       0       0       0       0
  5302 ;;      Locals:         4       0       0       0       0
  5303 ;;      Temps:          1       0       0       0       0
  5304 ;;      Totals:         9       0       0       0       0
  5305 ;;Total ram usage:        9 bytes
  5306 ;; Hardware stack levels used:    1
  5307 ;; This function calls:
  5308 ;;		Nothing
  5309 ;; This function is called by:
  5310 ;;		_lavadoRapido
  5311 ;;		_lavadoLento
  5312 ;;		_lavadoDelicado
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316                           
  5317                           ;psect for function ___awdiv
  5318  159E                     ___awdiv:	
  5319                           
  5320                           ;incstack = 0
  5321                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5322  159E  01F6               	clrf	___awdiv@sign
  5323  159F  1FF1               	btfss	___awdiv@divisor+1,7
  5324  15A0  2DA8               	goto	l2307
  5325  15A1  09F0               	comf	___awdiv@divisor,f
  5326  15A2  09F1               	comf	___awdiv@divisor+1,f
  5327  15A3  0AF0               	incf	___awdiv@divisor,f
  5328  15A4  1903               	skipnz
  5329  15A5  0AF1               	incf	___awdiv@divisor+1,f
  5330  15A6  01F6               	clrf	___awdiv@sign
  5331  15A7  0AF6               	incf	___awdiv@sign,f
  5332  15A8                     l2307:	
  5333  15A8  1FF3               	btfss	___awdiv@dividend+1,7
  5334  15A9  2DB3               	goto	l2313
  5335  15AA  09F2               	comf	___awdiv@dividend,f
  5336  15AB  09F3               	comf	___awdiv@dividend+1,f
  5337  15AC  0AF2               	incf	___awdiv@dividend,f
  5338  15AD  1903               	skipnz
  5339  15AE  0AF3               	incf	___awdiv@dividend+1,f
  5340  15AF  3001               	movlw	1
  5341  15B0  00F4               	movwf	??___awdiv
  5342  15B1  0874               	movf	??___awdiv,w
  5343  15B2  06F6               	xorwf	___awdiv@sign,f
  5344  15B3                     l2313:	
  5345  15B3  01F7               	clrf	___awdiv@quotient
  5346  15B4  01F8               	clrf	___awdiv@quotient+1
  5347  15B5  0870               	movf	___awdiv@divisor,w
  5348  15B6  0471               	iorwf	___awdiv@divisor+1,w
  5349  15B7  1903               	btfsc	3,2
  5350  15B8  2DEA               	goto	l2335
  5351  15B9  01F5               	clrf	___awdiv@counter
  5352  15BA  0AF5               	incf	___awdiv@counter,f
  5353  15BB                     l2323:	
  5354  15BB  1BF1               	btfsc	___awdiv@divisor+1,7
  5355  15BC  2DC9               	goto	l2325
  5356  15BD  3001               	movlw	1
  5357  15BE                     u2965:	
  5358  15BE  1003               	clrc
  5359  15BF  0DF0               	rlf	___awdiv@divisor,f
  5360  15C0  0DF1               	rlf	___awdiv@divisor+1,f
  5361  15C1  3EFF               	addlw	-1
  5362  15C2  1D03               	skipz
  5363  15C3  2DBE               	goto	u2965
  5364  15C4  3001               	movlw	1
  5365  15C5  00F4               	movwf	??___awdiv
  5366  15C6  0874               	movf	??___awdiv,w
  5367  15C7  07F5               	addwf	___awdiv@counter,f
  5368  15C8  2DBB               	goto	l2323
  5369  15C9                     l2325:	
  5370  15C9  3001               	movlw	1
  5371  15CA                     u2985:	
  5372  15CA  1003               	clrc
  5373  15CB  0DF7               	rlf	___awdiv@quotient,f
  5374  15CC  0DF8               	rlf	___awdiv@quotient+1,f
  5375  15CD  3EFF               	addlw	-1
  5376  15CE  1D03               	skipz
  5377  15CF  2DCA               	goto	u2985
  5378  15D0  0871               	movf	___awdiv@divisor+1,w
  5379  15D1  0273               	subwf	___awdiv@dividend+1,w
  5380  15D2  1D03               	skipz
  5381  15D3  2DD6               	goto	u2995
  5382  15D4  0870               	movf	___awdiv@divisor,w
  5383  15D5  0272               	subwf	___awdiv@dividend,w
  5384  15D6                     u2995:	
  5385  15D6  1C03               	skipc
  5386  15D7  2DDF               	goto	l2331
  5387  15D8  0870               	movf	___awdiv@divisor,w
  5388  15D9  02F2               	subwf	___awdiv@dividend,f
  5389  15DA  0871               	movf	___awdiv@divisor+1,w
  5390  15DB  1C03               	skipc
  5391  15DC  03F3               	decf	___awdiv@dividend+1,f
  5392  15DD  02F3               	subwf	___awdiv@dividend+1,f
  5393  15DE  1477               	bsf	___awdiv@quotient,0
  5394  15DF                     l2331:	
  5395  15DF  3001               	movlw	1
  5396  15E0                     u3005:	
  5397  15E0  1003               	clrc
  5398  15E1  0CF1               	rrf	___awdiv@divisor+1,f
  5399  15E2  0CF0               	rrf	___awdiv@divisor,f
  5400  15E3  3EFF               	addlw	-1
  5401  15E4  1D03               	skipz
  5402  15E5  2DE0               	goto	u3005
  5403  15E6  3001               	movlw	1
  5404  15E7  02F5               	subwf	___awdiv@counter,f
  5405  15E8  1D03               	btfss	3,2
  5406  15E9  2DC9               	goto	l2325
  5407  15EA                     l2335:	
  5408  15EA  0876               	movf	___awdiv@sign,w
  5409  15EB  1903               	btfsc	3,2
  5410  15EC  2DF2               	goto	l2339
  5411  15ED  09F7               	comf	___awdiv@quotient,f
  5412  15EE  09F8               	comf	___awdiv@quotient+1,f
  5413  15EF  0AF7               	incf	___awdiv@quotient,f
  5414  15F0  1903               	skipnz
  5415  15F1  0AF8               	incf	___awdiv@quotient+1,f
  5416  15F2                     l2339:	
  5417  15F2  0878               	movf	___awdiv@quotient+1,w
  5418  15F3  00F1               	movwf	?___awdiv+1
  5419  15F4  0877               	movf	___awdiv@quotient,w
  5420  15F5  00F0               	movwf	?___awdiv
  5421  15F6  0008               	return
  5422  15F7                     __end_of___awdiv:	
  5423                           
  5424                           	psect	text15
  5425  1551                     __ptext15:	
  5426 ;; *************** function _PWM_Initialize *****************
  5427 ;; Defined at:
  5428 ;;		line 417 in file "main.c"
  5429 ;; Parameters:    Size  Location     Type
  5430 ;;		None
  5431 ;; Auto vars:     Size  Location     Type
  5432 ;;		None
  5433 ;; Return value:  Size  Location     Type
  5434 ;;                  1    wreg      void 
  5435 ;; Registers used:
  5436 ;;		wreg, status,2, status,0, pclath, cstack
  5437 ;; Tracked objects:
  5438 ;;		On entry : 0/0
  5439 ;;		On exit  : 0/0
  5440 ;;		Unchanged: 0/0
  5441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5442 ;;      Params:         0       0       0       0       0
  5443 ;;      Locals:         0       0       0       0       0
  5444 ;;      Temps:          4       0       0       0       0
  5445 ;;      Totals:         4       0       0       0       0
  5446 ;;Total ram usage:        4 bytes
  5447 ;; Hardware stack levels used:    1
  5448 ;; Hardware stack levels required when called:    1
  5449 ;; This function calls:
  5450 ;;		___aldiv
  5451 ;; This function is called by:
  5452 ;;		_main
  5453 ;; This function uses a non-reentrant model
  5454 ;;
  5455                           
  5456                           
  5457                           ;psect for function _PWM_Initialize
  5458  1551                     _PWM_Initialize:	
  5459                           
  5460                           ;main.c: 418: TRISC = 0X00;
  5461                           
  5462                           ;incstack = 0
  5463                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5464  1551  1683               	bsf	3,5	;RP0=1, select bank1
  5465  1552  1303               	bcf	3,6	;RP1=0, select bank1
  5466  1553  0187               	clrf	7	;volatile
  5467                           
  5468                           ;main.c: 419: CCP1CON = 0X0F;
  5469  1554  300F               	movlw	15
  5470  1555  1283               	bcf	3,5	;RP0=0, select bank0
  5471  1556  1303               	bcf	3,6	;RP1=0, select bank0
  5472  1557  0097               	movwf	23	;volatile
  5473                           
  5474                           ;main.c: 420: PR2 = 0xF9;
  5475  1558  30F9               	movlw	249
  5476  1559  1683               	bsf	3,5	;RP0=1, select bank1
  5477  155A  1303               	bcf	3,6	;RP1=0, select bank1
  5478  155B  0092               	movwf	18	;volatile
  5479                           
  5480                           ;main.c: 421: CCPR1L = 50;
  5481  155C  3032               	movlw	50
  5482  155D  1283               	bcf	3,5	;RP0=0, select bank0
  5483  155E  1303               	bcf	3,6	;RP1=0, select bank0
  5484  155F  0095               	movwf	21	;volatile
  5485                           
  5486                           ;main.c: 422: TMR2ON = 1;
  5487  1560  1512               	bsf	18,2	;volatile
  5488                           
  5489                           ;main.c: 424: PR2 = (4000000/(PWM_freq*4*4)) - 1;
  5490  1561  0864               	movf	_PWM_freq,w
  5491  1562  00F9               	movwf	??_PWM_Initialize
  5492  1563  0865               	movf	_PWM_freq+1,w
  5493  1564  00FA               	movwf	??_PWM_Initialize+1
  5494  1565  0866               	movf	_PWM_freq+2,w
  5495  1566  00FB               	movwf	??_PWM_Initialize+2
  5496  1567  0867               	movf	_PWM_freq+3,w
  5497  1568  00FC               	movwf	??_PWM_Initialize+3
  5498  1569  3002               	movlw	2
  5499  156A                     u3055:	
  5500  156A  1003               	clrc
  5501  156B  0DF9               	rlf	??_PWM_Initialize,f
  5502  156C  0DFA               	rlf	??_PWM_Initialize+1,f
  5503  156D  0DFB               	rlf	??_PWM_Initialize+2,f
  5504  156E  0DFC               	rlf	??_PWM_Initialize+3,f
  5505  156F  3EFF               	addlw	-1
  5506  1570  1D03               	skipz
  5507  1571  2D6A               	goto	u3055
  5508  1572  3002               	movlw	2
  5509  1573                     u3065:	
  5510  1573  1003               	clrc
  5511  1574  0DF9               	rlf	??_PWM_Initialize,f
  5512  1575  0DFA               	rlf	??_PWM_Initialize+1,f
  5513  1576  0DFB               	rlf	??_PWM_Initialize+2,f
  5514  1577  0DFC               	rlf	??_PWM_Initialize+3,f
  5515  1578  3EFF               	addlw	-1
  5516  1579  1D03               	skipz
  5517  157A  2D73               	goto	u3065
  5518  157B  087C               	movf	??_PWM_Initialize+3,w
  5519  157C  00F3               	movwf	___aldiv@divisor+3
  5520  157D  087B               	movf	??_PWM_Initialize+2,w
  5521  157E  00F2               	movwf	___aldiv@divisor+2
  5522  157F  087A               	movf	??_PWM_Initialize+1,w
  5523  1580  00F1               	movwf	___aldiv@divisor+1
  5524  1581  0879               	movf	??_PWM_Initialize,w
  5525  1582  00F0               	movwf	___aldiv@divisor
  5526  1583  3000               	movlw	0
  5527  1584  00F7               	movwf	___aldiv@dividend+3
  5528  1585  303D               	movlw	61
  5529  1586  00F6               	movwf	___aldiv@dividend+2
  5530  1587  3009               	movlw	9
  5531  1588  00F5               	movwf	___aldiv@dividend+1
  5532  1589  3000               	movlw	0
  5533  158A  00F4               	movwf	___aldiv@dividend
  5534  158B  160A  118A  2771   	fcall	___aldiv
  5535  158E  0870               	movf	?___aldiv,w
  5536  158F  3EFF               	addlw	255
  5537  1590  1683               	bsf	3,5	;RP0=1, select bank1
  5538  1591  1303               	bcf	3,6	;RP1=0, select bank1
  5539  1592  0092               	movwf	18	;volatile
  5540                           
  5541                           ;main.c: 425: CCP1M3 = 1; CCP1M2 = 1;
  5542  1593  1283               	bcf	3,5	;RP0=0, select bank0
  5543  1594  1303               	bcf	3,6	;RP1=0, select bank0
  5544  1595  1597               	bsf	23,3	;volatile
  5545  1596  1517               	bsf	23,2	;volatile
  5546                           
  5547                           ;main.c: 426: T2CKPS0 = 1;T2CKPS1 = 0; TMR2ON = 1;
  5548  1597  1412               	bsf	18,0	;volatile
  5549  1598  1092               	bcf	18,1	;volatile
  5550  1599  1512               	bsf	18,2	;volatile
  5551                           
  5552                           ;main.c: 427: TRISC2 = 0;
  5553  159A  1683               	bsf	3,5	;RP0=1, select bank1
  5554  159B  1303               	bcf	3,6	;RP1=0, select bank1
  5555  159C  1107               	bcf	7,2	;volatile
  5556  159D  0008               	return
  5557  159E                     __end_of_PWM_Initialize:	
  5558                           
  5559                           	psect	text16
  5560  1771                     __ptext16:	
  5561 ;; *************** function ___aldiv *****************
  5562 ;; Defined at:
  5563 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;  divisor         4    0[COMMON] long 
  5566 ;;  dividend        4    4[COMMON] long 
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;  quotient        4    2[BANK0 ] long 
  5569 ;;  sign            1    1[BANK0 ] unsigned char 
  5570 ;;  counter         1    0[BANK0 ] unsigned char 
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  4    0[COMMON] long 
  5573 ;; Registers used:
  5574 ;;		wreg, status,2, status,0
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5580 ;;      Params:         8       0       0       0       0
  5581 ;;      Locals:         0       6       0       0       0
  5582 ;;      Temps:          1       0       0       0       0
  5583 ;;      Totals:         9       6       0       0       0
  5584 ;;Total ram usage:       15 bytes
  5585 ;; Hardware stack levels used:    1
  5586 ;; This function calls:
  5587 ;;		Nothing
  5588 ;; This function is called by:
  5589 ;;		_PWM_Initialize
  5590 ;;		_PWM_Duty
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594                           
  5595                           ;psect for function ___aldiv
  5596  1771                     ___aldiv:	
  5597                           
  5598                           ;incstack = 0
  5599                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5600  1771  1283               	bcf	3,5	;RP0=0, select bank0
  5601  1772  1303               	bcf	3,6	;RP1=0, select bank0
  5602  1773  01A1               	clrf	___aldiv@sign
  5603  1774  1FF3               	btfss	___aldiv@divisor+3,7
  5604  1775  2F83               	goto	l472
  5605  1776  09F0               	comf	___aldiv@divisor,f
  5606  1777  09F1               	comf	___aldiv@divisor+1,f
  5607  1778  09F2               	comf	___aldiv@divisor+2,f
  5608  1779  09F3               	comf	___aldiv@divisor+3,f
  5609  177A  0AF0               	incf	___aldiv@divisor,f
  5610  177B  1903               	skipnz
  5611  177C  0AF1               	incf	___aldiv@divisor+1,f
  5612  177D  1903               	skipnz
  5613  177E  0AF2               	incf	___aldiv@divisor+2,f
  5614  177F  1903               	skipnz
  5615  1780  0AF3               	incf	___aldiv@divisor+3,f
  5616  1781  01A1               	clrf	___aldiv@sign
  5617  1782  0AA1               	incf	___aldiv@sign,f
  5618  1783                     l472:	
  5619  1783  1FF7               	btfss	___aldiv@dividend+3,7
  5620  1784  2F94               	goto	l1913
  5621  1785  09F4               	comf	___aldiv@dividend,f
  5622  1786  09F5               	comf	___aldiv@dividend+1,f
  5623  1787  09F6               	comf	___aldiv@dividend+2,f
  5624  1788  09F7               	comf	___aldiv@dividend+3,f
  5625  1789  0AF4               	incf	___aldiv@dividend,f
  5626  178A  1903               	skipnz
  5627  178B  0AF5               	incf	___aldiv@dividend+1,f
  5628  178C  1903               	skipnz
  5629  178D  0AF6               	incf	___aldiv@dividend+2,f
  5630  178E  1903               	skipnz
  5631  178F  0AF7               	incf	___aldiv@dividend+3,f
  5632  1790  3001               	movlw	1
  5633  1791  00F8               	movwf	??___aldiv
  5634  1792  0878               	movf	??___aldiv,w
  5635  1793  06A1               	xorwf	___aldiv@sign,f
  5636  1794                     l1913:	
  5637  1794  3000               	movlw	0
  5638  1795  00A5               	movwf	___aldiv@quotient+3
  5639  1796  3000               	movlw	0
  5640  1797  00A4               	movwf	___aldiv@quotient+2
  5641  1798  3000               	movlw	0
  5642  1799  00A3               	movwf	___aldiv@quotient+1
  5643  179A  3000               	movlw	0
  5644  179B  00A2               	movwf	___aldiv@quotient
  5645  179C  0873               	movf	___aldiv@divisor+3,w
  5646  179D  0472               	iorwf	___aldiv@divisor+2,w
  5647  179E  0471               	iorwf	___aldiv@divisor+1,w
  5648  179F  0470               	iorwf	___aldiv@divisor,w
  5649  17A0  1903               	skipnz
  5650  17A1  2FE9               	goto	l1935
  5651  17A2  01A0               	clrf	___aldiv@counter
  5652  17A3  0AA0               	incf	___aldiv@counter,f
  5653  17A4                     l1921:	
  5654  17A4  1BF3               	btfsc	___aldiv@divisor+3,7
  5655  17A5  2FB4               	goto	l1923
  5656  17A6  3001               	movlw	1
  5657  17A7  00F8               	movwf	??___aldiv
  5658  17A8                     u2095:	
  5659  17A8  1003               	clrc
  5660  17A9  0DF0               	rlf	___aldiv@divisor,f
  5661  17AA  0DF1               	rlf	___aldiv@divisor+1,f
  5662  17AB  0DF2               	rlf	___aldiv@divisor+2,f
  5663  17AC  0DF3               	rlf	___aldiv@divisor+3,f
  5664  17AD  0BF8               	decfsz	??___aldiv,f
  5665  17AE  2FA8               	goto	u2095
  5666  17AF  3001               	movlw	1
  5667  17B0  00F8               	movwf	??___aldiv
  5668  17B1  0878               	movf	??___aldiv,w
  5669  17B2  07A0               	addwf	___aldiv@counter,f
  5670  17B3  2FA4               	goto	l1921
  5671  17B4                     l1923:	
  5672  17B4  3001               	movlw	1
  5673  17B5  00F8               	movwf	??___aldiv
  5674  17B6                     u2115:	
  5675  17B6  1003               	clrc
  5676  17B7  0DA2               	rlf	___aldiv@quotient,f
  5677  17B8  0DA3               	rlf	___aldiv@quotient+1,f
  5678  17B9  0DA4               	rlf	___aldiv@quotient+2,f
  5679  17BA  0DA5               	rlf	___aldiv@quotient+3,f
  5680  17BB  0BF8               	decfsz	??___aldiv,f
  5681  17BC  2FB6               	goto	u2115
  5682  17BD  0873               	movf	___aldiv@divisor+3,w
  5683  17BE  0277               	subwf	___aldiv@dividend+3,w
  5684  17BF  1D03               	skipz
  5685  17C0  2FCB               	goto	u2125
  5686  17C1  0872               	movf	___aldiv@divisor+2,w
  5687  17C2  0276               	subwf	___aldiv@dividend+2,w
  5688  17C3  1D03               	skipz
  5689  17C4  2FCB               	goto	u2125
  5690  17C5  0871               	movf	___aldiv@divisor+1,w
  5691  17C6  0275               	subwf	___aldiv@dividend+1,w
  5692  17C7  1D03               	skipz
  5693  17C8  2FCB               	goto	u2125
  5694  17C9  0870               	movf	___aldiv@divisor,w
  5695  17CA  0274               	subwf	___aldiv@dividend,w
  5696  17CB                     u2125:	
  5697  17CB  1C03               	skipc
  5698  17CC  2FDC               	goto	l1931
  5699  17CD  0870               	movf	___aldiv@divisor,w
  5700  17CE  02F4               	subwf	___aldiv@dividend,f
  5701  17CF  0871               	movf	___aldiv@divisor+1,w
  5702  17D0  1C03               	skipc
  5703  17D1  0F71               	incfsz	___aldiv@divisor+1,w
  5704  17D2  02F5               	subwf	___aldiv@dividend+1,f
  5705  17D3  0872               	movf	___aldiv@divisor+2,w
  5706  17D4  1C03               	skipc
  5707  17D5  0F72               	incfsz	___aldiv@divisor+2,w
  5708  17D6  02F6               	subwf	___aldiv@dividend+2,f
  5709  17D7  0873               	movf	___aldiv@divisor+3,w
  5710  17D8  1C03               	skipc
  5711  17D9  0F73               	incfsz	___aldiv@divisor+3,w
  5712  17DA  02F7               	subwf	___aldiv@dividend+3,f
  5713  17DB  1422               	bsf	___aldiv@quotient,0
  5714  17DC                     l1931:	
  5715  17DC  3001               	movlw	1
  5716  17DD                     u2135:	
  5717  17DD  1003               	clrc
  5718  17DE  0CF3               	rrf	___aldiv@divisor+3,f
  5719  17DF  0CF2               	rrf	___aldiv@divisor+2,f
  5720  17E0  0CF1               	rrf	___aldiv@divisor+1,f
  5721  17E1  0CF0               	rrf	___aldiv@divisor,f
  5722  17E2  3EFF               	addlw	-1
  5723  17E3  1D03               	skipz
  5724  17E4  2FDD               	goto	u2135
  5725  17E5  3001               	movlw	1
  5726  17E6  02A0               	subwf	___aldiv@counter,f
  5727  17E7  1D03               	btfss	3,2
  5728  17E8  2FB4               	goto	l1923
  5729  17E9                     l1935:	
  5730  17E9  0821               	movf	___aldiv@sign,w
  5731  17EA  1903               	btfsc	3,2
  5732  17EB  2FF7               	goto	l1939
  5733  17EC  09A2               	comf	___aldiv@quotient,f
  5734  17ED  09A3               	comf	___aldiv@quotient+1,f
  5735  17EE  09A4               	comf	___aldiv@quotient+2,f
  5736  17EF  09A5               	comf	___aldiv@quotient+3,f
  5737  17F0  0AA2               	incf	___aldiv@quotient,f
  5738  17F1  1903               	skipnz
  5739  17F2  0AA3               	incf	___aldiv@quotient+1,f
  5740  17F3  1903               	skipnz
  5741  17F4  0AA4               	incf	___aldiv@quotient+2,f
  5742  17F5  1903               	skipnz
  5743  17F6  0AA5               	incf	___aldiv@quotient+3,f
  5744  17F7                     l1939:	
  5745  17F7  0825               	movf	___aldiv@quotient+3,w
  5746  17F8  00F3               	movwf	?___aldiv+3
  5747  17F9  0824               	movf	___aldiv@quotient+2,w
  5748  17FA  00F2               	movwf	?___aldiv+2
  5749  17FB  0823               	movf	___aldiv@quotient+1,w
  5750  17FC  00F1               	movwf	?___aldiv+1
  5751  17FD  0822               	movf	___aldiv@quotient,w
  5752  17FE  00F0               	movwf	?___aldiv
  5753  17FF  0008               	return
  5754  1800                     __end_of___aldiv:	
  5755                           
  5756                           	psect	text17
  5757  096C                     __ptext17:	
  5758 ;; *************** function _Lcd_Init *****************
  5759 ;; Defined at:
  5760 ;;		line 17 in file "lcd_hd44780.c"
  5761 ;; Parameters:    Size  Location     Type
  5762 ;;		None
  5763 ;; Auto vars:     Size  Location     Type
  5764 ;;  data            1    5[COMMON] unsigned char 
  5765 ;; Return value:  Size  Location     Type
  5766 ;;                  1    wreg      void 
  5767 ;; Registers used:
  5768 ;;		wreg, status,2, status,0, pclath, cstack
  5769 ;; Tracked objects:
  5770 ;;		On entry : 0/0
  5771 ;;		On exit  : 0/0
  5772 ;;		Unchanged: 0/0
  5773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5774 ;;      Params:         0       0       0       0       0
  5775 ;;      Locals:         1       0       0       0       0
  5776 ;;      Temps:          2       0       0       0       0
  5777 ;;      Totals:         3       0       0       0       0
  5778 ;;Total ram usage:        3 bytes
  5779 ;; Hardware stack levels used:    1
  5780 ;; Hardware stack levels required when called:    1
  5781 ;; This function calls:
  5782 ;;		_Lcd_Command
  5783 ;; This function is called by:
  5784 ;;		_main
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           
  5789                           ;psect for function _Lcd_Init
  5790  096C                     _Lcd_Init:	
  5791                           
  5792                           ;lcd_hd44780.c: 18: unsigned char data;
  5793                           ;lcd_hd44780.c: 19: TRISCbits.TRISC0 = 0; TRISCbits.TRISC6 = 0; TRISCbits.TRISC7 = 0; TR
      +                          ISCbits.TRISC3 = 0; TRISCbits.TRISC4 = 0; TRISCbits.TRISC5 = 0;
  5794                           
  5795                           ;incstack = 0
  5796                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  5797  096C  1683               	bsf	3,5	;RP0=1, select bank1
  5798  096D  1303               	bcf	3,6	;RP1=0, select bank1
  5799  096E  1007               	bcf	7,0	;volatile
  5800  096F  1307               	bcf	7,6	;volatile
  5801  0970  1387               	bcf	7,7	;volatile
  5802  0971  1187               	bcf	7,3	;volatile
  5803  0972  1207               	bcf	7,4	;volatile
  5804  0973  1287               	bcf	7,5	;volatile
  5805                           
  5806                           ;lcd_hd44780.c: 20: PORTCbits.RC0 = 0; PORTCbits.RC6 = 0; PORTCbits.RC7 = 0; PORTCbits.R
      +                          C3 = 0; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  5807  0974  1283               	bcf	3,5	;RP0=0, select bank0
  5808  0975  1303               	bcf	3,6	;RP1=0, select bank0
  5809  0976  1007               	bcf	7,0	;volatile
  5810  0977  1307               	bcf	7,6	;volatile
  5811  0978  1387               	bcf	7,7	;volatile
  5812  0979  1187               	bcf	7,3	;volatile
  5813  097A  1207               	bcf	7,4	;volatile
  5814  097B  1287               	bcf	7,5	;volatile
  5815                           
  5816                           ;lcd_hd44780.c: 21: _delay((unsigned long)((5500)*(4000000/4000000.0)));_delay((unsigned
      +                           long)((5500)*(4000000/4000000.0)));_delay((unsigned long)((5500)*(4000000/4000000.0)));
  5817  097C  3008               	movlw	8
  5818  097D  00F4               	movwf	??_Lcd_Init+1
  5819  097E  3023               	movlw	35
  5820  097F  00F3               	movwf	??_Lcd_Init
  5821  0980                     u4017:	
  5822  0980  0BF3               	decfsz	??_Lcd_Init,f
  5823  0981  2980               	goto	u4017
  5824  0982  0BF4               	decfsz	??_Lcd_Init+1,f
  5825  0983  2980               	goto	u4017
  5826  0984  3008               	movlw	8
  5827  0985  00F4               	movwf	??_Lcd_Init+1
  5828  0986  3023               	movlw	35
  5829  0987  00F3               	movwf	??_Lcd_Init
  5830  0988                     u4027:	
  5831  0988  0BF3               	decfsz	??_Lcd_Init,f
  5832  0989  2988               	goto	u4027
  5833  098A  0BF4               	decfsz	??_Lcd_Init+1,f
  5834  098B  2988               	goto	u4027
  5835  098C  3008               	movlw	8
  5836  098D  00F4               	movwf	??_Lcd_Init+1
  5837  098E  3023               	movlw	35
  5838  098F  00F3               	movwf	??_Lcd_Init
  5839  0990                     u4037:	
  5840  0990  0BF3               	decfsz	??_Lcd_Init,f
  5841  0991  2990               	goto	u4037
  5842  0992  0BF4               	decfsz	??_Lcd_Init+1,f
  5843  0993  2990               	goto	u4037
  5844                           
  5845                           ;lcd_hd44780.c: 22: _delay((unsigned long)((5500)*(4000000/4000000.0)));_delay((unsigned
      +                           long)((5500)*(4000000/4000000.0)));_delay((unsigned long)((5500)*(4000000/4000000.0)));
  5846  0994  3008               	movlw	8
  5847  0995  00F4               	movwf	??_Lcd_Init+1
  5848  0996  3023               	movlw	35
  5849  0997  00F3               	movwf	??_Lcd_Init
  5850  0998                     u4047:	
  5851  0998  0BF3               	decfsz	??_Lcd_Init,f
  5852  0999  2998               	goto	u4047
  5853  099A  0BF4               	decfsz	??_Lcd_Init+1,f
  5854  099B  2998               	goto	u4047
  5855  099C  3008               	movlw	8
  5856  099D  00F4               	movwf	??_Lcd_Init+1
  5857  099E  3023               	movlw	35
  5858  099F  00F3               	movwf	??_Lcd_Init
  5859  09A0                     u4057:	
  5860  09A0  0BF3               	decfsz	??_Lcd_Init,f
  5861  09A1  29A0               	goto	u4057
  5862  09A2  0BF4               	decfsz	??_Lcd_Init+1,f
  5863  09A3  29A0               	goto	u4057
  5864  09A4  3008               	movlw	8
  5865  09A5  00F4               	movwf	??_Lcd_Init+1
  5866  09A6  3023               	movlw	35
  5867  09A7  00F3               	movwf	??_Lcd_Init
  5868  09A8                     u4067:	
  5869  09A8  0BF3               	decfsz	??_Lcd_Init,f
  5870  09A9  29A8               	goto	u4067
  5871  09AA  0BF4               	decfsz	??_Lcd_Init+1,f
  5872  09AB  29A8               	goto	u4067
  5873                           
  5874                           ;lcd_hd44780.c: 24: for(data = 1; data < 4; data ++)
  5875  09AC  01F5               	clrf	Lcd_Init@data
  5876  09AD  0AF5               	incf	Lcd_Init@data,f
  5877  09AE  3004               	movlw	4
  5878  09AF  0275               	subwf	Lcd_Init@data,w
  5879  09B0  1803               	btfsc	3,0
  5880  09B1  29DB               	goto	l262
  5881  09B2                     l261:	
  5882                           
  5883                           ;lcd_hd44780.c: 25: {
  5884                           ;lcd_hd44780.c: 26: PORTCbits.RC0 = 0; PORTCbits.RC6 = 0; PORTCbits.RC7 = 1; PORTCbits.R
      +                          C3 = 1; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  5885  09B2  1283               	bcf	3,5	;RP0=0, select bank0
  5886  09B3  1303               	bcf	3,6	;RP1=0, select bank0
  5887  09B4  1007               	bcf	7,0	;volatile
  5888  09B5  1307               	bcf	7,6	;volatile
  5889  09B6  1787               	bsf	7,7	;volatile
  5890  09B7  1587               	bsf	7,3	;volatile
  5891  09B8  1207               	bcf	7,4	;volatile
  5892  09B9  1287               	bcf	7,5	;volatile
  5893                           
  5894                           ;lcd_hd44780.c: 27: PORTCbits.RC0 = 0; PORTCbits.RC6 = 0; PORTCbits.RC7 = 1; PORTCbits.R
      +                          C3 = 1; PORTCbits.RC4 = 1; PORTCbits.RC5 = 0;
  5895  09BA  1007               	bcf	7,0	;volatile
  5896  09BB  1307               	bcf	7,6	;volatile
  5897  09BC  1787               	bsf	7,7	;volatile
  5898  09BD  1587               	bsf	7,3	;volatile
  5899  09BE  1607               	bsf	7,4	;volatile
  5900  09BF  1287               	bcf	7,5	;volatile
  5901                           
  5902                           ;lcd_hd44780.c: 28: _delay((unsigned long)((5)*(4000000/4000000.0)));
  5903  09C0  29C1               	nop2	;2 cycle nop
  5904  09C1  29C2               	nop2	;2 cycle nop
  5905  09C2  0000               	nop
  5906                           
  5907                           ;lcd_hd44780.c: 29: PORTCbits.RC0 = 0; PORTCbits.RC6 = 0; PORTCbits.RC7 = 1; PORTCbits.R
      +                          C3 = 1; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  5908  09C3  1283               	bcf	3,5	;RP0=0, select bank0
  5909  09C4  1303               	bcf	3,6	;RP1=0, select bank0
  5910  09C5  1007               	bcf	7,0	;volatile
  5911  09C6  1307               	bcf	7,6	;volatile
  5912  09C7  1787               	bsf	7,7	;volatile
  5913  09C8  1587               	bsf	7,3	;volatile
  5914  09C9  1207               	bcf	7,4	;volatile
  5915  09CA  1287               	bcf	7,5	;volatile
  5916                           
  5917                           ;lcd_hd44780.c: 30: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  5918  09CB  3008               	movlw	8
  5919  09CC  00F4               	movwf	??_Lcd_Init+1
  5920  09CD  3023               	movlw	35
  5921  09CE  00F3               	movwf	??_Lcd_Init
  5922  09CF                     u4077:	
  5923  09CF  0BF3               	decfsz	??_Lcd_Init,f
  5924  09D0  29CF               	goto	u4077
  5925  09D1  0BF4               	decfsz	??_Lcd_Init+1,f
  5926  09D2  29CF               	goto	u4077
  5927  09D3  3001               	movlw	1
  5928  09D4  00F3               	movwf	??_Lcd_Init
  5929  09D5  0873               	movf	??_Lcd_Init,w
  5930  09D6  07F5               	addwf	Lcd_Init@data,f
  5931  09D7  3004               	movlw	4
  5932  09D8  0275               	subwf	Lcd_Init@data,w
  5933  09D9  1C03               	skipc
  5934  09DA  29B2               	goto	l261
  5935  09DB                     l262:	
  5936                           
  5937                           ;lcd_hd44780.c: 31: }
  5938                           ;lcd_hd44780.c: 32: PORTCbits.RC0 = 0; PORTCbits.RC6 = 0; PORTCbits.RC7 = 1; PORTCbits.R
      +                          C3 = 0; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  5939  09DB  1283               	bcf	3,5	;RP0=0, select bank0
  5940  09DC  1303               	bcf	3,6	;RP1=0, select bank0
  5941  09DD  1007               	bcf	7,0	;volatile
  5942  09DE  1307               	bcf	7,6	;volatile
  5943  09DF  1787               	bsf	7,7	;volatile
  5944  09E0  1187               	bcf	7,3	;volatile
  5945  09E1  1207               	bcf	7,4	;volatile
  5946  09E2  1287               	bcf	7,5	;volatile
  5947                           
  5948                           ;lcd_hd44780.c: 33: PORTCbits.RC0 = 0; PORTCbits.RC6 = 0; PORTCbits.RC7 = 1; PORTCbits.R
      +                          C3 = 0; PORTCbits.RC4 = 1; PORTCbits.RC5 = 0;
  5949  09E3  1007               	bcf	7,0	;volatile
  5950  09E4  1307               	bcf	7,6	;volatile
  5951  09E5  1787               	bsf	7,7	;volatile
  5952  09E6  1187               	bcf	7,3	;volatile
  5953  09E7  1607               	bsf	7,4	;volatile
  5954  09E8  1287               	bcf	7,5	;volatile
  5955                           
  5956                           ;lcd_hd44780.c: 34: _delay((unsigned long)((5)*(4000000/4000000.0)));
  5957  09E9  29EA               	nop2	;2 cycle nop
  5958  09EA  29EB               	nop2	;2 cycle nop
  5959  09EB  0000               	nop
  5960                           
  5961                           ;lcd_hd44780.c: 35: PORTCbits.RC0 = 0; PORTCbits.RC6 = 0; PORTCbits.RC7 = 1; PORTCbits.R
      +                          C3 = 0; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  5962  09EC  1283               	bcf	3,5	;RP0=0, select bank0
  5963  09ED  1303               	bcf	3,6	;RP1=0, select bank0
  5964  09EE  1007               	bcf	7,0	;volatile
  5965  09EF  1307               	bcf	7,6	;volatile
  5966  09F0  1787               	bsf	7,7	;volatile
  5967  09F1  1187               	bcf	7,3	;volatile
  5968  09F2  1207               	bcf	7,4	;volatile
  5969  09F3  1287               	bcf	7,5	;volatile
  5970                           
  5971                           ;lcd_hd44780.c: 36: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  5972  09F4  3008               	movlw	8
  5973  09F5  00F4               	movwf	??_Lcd_Init+1
  5974  09F6  3023               	movlw	35
  5975  09F7  00F3               	movwf	??_Lcd_Init
  5976  09F8                     u4087:	
  5977  09F8  0BF3               	decfsz	??_Lcd_Init,f
  5978  09F9  29F8               	goto	u4087
  5979  09FA  0BF4               	decfsz	??_Lcd_Init+1,f
  5980  09FB  29F8               	goto	u4087
  5981                           
  5982                           ;lcd_hd44780.c: 37: data = 40; Lcd_Command(data);
  5983  09FC  3028               	movlw	40
  5984  09FD  00F3               	movwf	??_Lcd_Init
  5985  09FE  0873               	movf	??_Lcd_Init,w
  5986  09FF  00F5               	movwf	Lcd_Init@data
  5987  0A00  0875               	movf	Lcd_Init@data,w
  5988  0A01  120A  158A  20CD  120A  158A  	fcall	_Lcd_Command
  5989                           
  5990                           ;lcd_hd44780.c: 38: data = 16; Lcd_Command(data);
  5991  0A06  3010               	movlw	16
  5992  0A07  00F3               	movwf	??_Lcd_Init
  5993  0A08  0873               	movf	??_Lcd_Init,w
  5994  0A09  00F5               	movwf	Lcd_Init@data
  5995  0A0A  0875               	movf	Lcd_Init@data,w
  5996  0A0B  120A  158A  20CD  120A  158A  	fcall	_Lcd_Command
  5997                           
  5998                           ;lcd_hd44780.c: 39: data = 1; Lcd_Command(data);
  5999  0A10  01F5               	clrf	Lcd_Init@data
  6000  0A11  0AF5               	incf	Lcd_Init@data,f
  6001  0A12  0875               	movf	Lcd_Init@data,w
  6002  0A13  120A  158A  20CD  120A  158A  	fcall	_Lcd_Command
  6003                           
  6004                           ;lcd_hd44780.c: 40: data = 15; Lcd_Command(data);
  6005  0A18  300F               	movlw	15
  6006  0A19  00F3               	movwf	??_Lcd_Init
  6007  0A1A  0873               	movf	??_Lcd_Init,w
  6008  0A1B  00F5               	movwf	Lcd_Init@data
  6009  0A1C  0875               	movf	Lcd_Init@data,w
  6010  0A1D  120A  158A  20CD   	fcall	_Lcd_Command
  6011  0A20  0008               	return
  6012  0A21                     __end_of_Lcd_Init:	
  6013                           
  6014                           	psect	text18
  6015  0C94                     __ptext18:	
  6016 ;; *************** function _ImprimirMenuPrincipal *****************
  6017 ;; Defined at:
  6018 ;;		line 456 in file "main.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  casilla         2    9[COMMON] int 
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;		None
  6023 ;; Return value:  Size  Location     Type
  6024 ;;                  1    wreg      void 
  6025 ;; Registers used:
  6026 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6027 ;; Tracked objects:
  6028 ;;		On entry : 0/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6032 ;;      Params:         2       0       0       0       0
  6033 ;;      Locals:         0       0       0       0       0
  6034 ;;      Temps:          0       0       0       0       0
  6035 ;;      Totals:         2       0       0       0       0
  6036 ;;Total ram usage:        2 bytes
  6037 ;; Hardware stack levels used:    1
  6038 ;; Hardware stack levels required when called:    2
  6039 ;; This function calls:
  6040 ;;		_Lcd_Command
  6041 ;;		_Lcd_Text
  6042 ;; This function is called by:
  6043 ;;		_main
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           
  6047                           
  6048                           ;psect for function _ImprimirMenuPrincipal
  6049  0C94                     _ImprimirMenuPrincipal:	
  6050                           
  6051                           ;main.c: 457: Lcd_Command(1);
  6052                           
  6053                           ;incstack = 0
  6054                           ; Regs used in _ImprimirMenuPrincipal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  6055  0C94  3001               	movlw	1
  6056  0C95  120A  158A  20CD  120A  158A  	fcall	_Lcd_Command
  6057                           
  6058                           ;main.c: 458: if(casilla == 0){
  6059  0C9A  0879               	movf	ImprimirMenuPrincipal@casilla,w
  6060  0C9B  047A               	iorwf	ImprimirMenuPrincipal@casilla+1,w
  6061  0C9C  1D03               	btfss	3,2
  6062  0C9D  2CDF               	goto	l2421
  6063                           
  6064                           ;main.c: 459: Lcd_Text(1, 1, "-Lavado Normal");
  6065  0C9E  01F3               	clrf	Lcd_Text@x
  6066  0C9F  0AF3               	incf	Lcd_Text@x,f
  6067  0CA0  300A               	movlw	low (STR_53| (0+32768))
  6068  0CA1  00F4               	movwf	Lcd_Text@buffer
  6069  0CA2  3091               	movlw	high (STR_53| (0+32768))
  6070  0CA3  00F5               	movwf	Lcd_Text@buffer+1
  6071  0CA4  3001               	movlw	1
  6072  0CA5  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  6073                           
  6074                           ;main.c: 460: Lcd_Text(1, 1, "Lavado Rapido");
  6075  0CAA  01F3               	clrf	Lcd_Text@x
  6076  0CAB  0AF3               	incf	Lcd_Text@x,f
  6077  0CAC  301A               	movlw	low ((STR_59+1)| (0+32768))
  6078  0CAD  00F4               	movwf	Lcd_Text@buffer
  6079  0CAE  3091               	movlw	high ((STR_59+1)| (0+32768))
  6080  0CAF  00F5               	movwf	Lcd_Text@buffer+1
  6081  0CB0  3001               	movlw	1
  6082  0CB1  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  6083                           
  6084                           ;main.c: 461: Lcd_Text(2, 1, "Lavado Lento");
  6085  0CB6  01F3               	clrf	Lcd_Text@x
  6086  0CB7  0AF3               	incf	Lcd_Text@x,f
  6087  0CB8  3029               	movlw	low ((STR_65+1)| (0+32768))
  6088  0CB9  00F4               	movwf	Lcd_Text@buffer
  6089  0CBA  3091               	movlw	high ((STR_65+1)| (0+32768))
  6090  0CBB  00F5               	movwf	Lcd_Text@buffer+1
  6091  0CBC  3002               	movlw	2
  6092  0CBD  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  6093                           
  6094                           ;main.c: 462: Lcd_Text(3, 1, "Lavado Delicado");
  6095  0CC2  01F3               	clrf	Lcd_Text@x
  6096  0CC3  0AF3               	incf	Lcd_Text@x,f
  6097  0CC4  30EB               	movlw	low ((STR_71+1)| (0+32768))
  6098  0CC5  00F4               	movwf	Lcd_Text@buffer
  6099  0CC6  3090               	movlw	high ((STR_71+1)| (0+32768))
  6100  0CC7  00F5               	movwf	Lcd_Text@buffer+1
  6101  0CC8  3003               	movlw	3
  6102  0CC9  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  6103                           
  6104                           ;main.c: 463: Lcd_Text(4, 1, "Acerca de");
  6105  0CCE  01F3               	clrf	Lcd_Text@x
  6106  0CCF  0AF3               	incf	Lcd_Text@x,f
  6107  0CD0  3037               	movlw	low ((STR_77+1)| (0+32768))
  6108  0CD1  00F4               	movwf	Lcd_Text@buffer
  6109  0CD2  3091               	movlw	high ((STR_77+1)| (0+32768))
  6110  0CD3  00F5               	movwf	Lcd_Text@buffer+1
  6111  0CD4  3004               	movlw	4
  6112  0CD5  160A  118A  2509   	fcall	_Lcd_Text
  6113                           
  6114                           ;main.c: 464: tiempo = 59;
  6115  0CD8  303B               	movlw	59
  6116  0CD9  1283               	bcf	3,5	;RP0=0, select bank0
  6117  0CDA  1303               	bcf	3,6	;RP1=0, select bank0
  6118  0CDB  00E2               	movwf	_tiempo
  6119  0CDC  3000               	movlw	0
  6120  0CDD  00E3               	movwf	_tiempo+1
  6121                           
  6122                           ;main.c: 465: }else if(casilla == 1){
  6123  0CDE  0008               	return
  6124  0CDF                     l2421:	
  6125  0CDF  0379               	decf	ImprimirMenuPrincipal@casilla,w
  6126  0CE0  047A               	iorwf	ImprimirMenuPrincipal@casilla+1,w
  6127  0CE1  1D03               	btfss	3,2
  6128  0CE2  2D24               	goto	l2427
  6129                           
  6130                           ;main.c: 466: Lcd_Text(1, 1, "Lavado Normal");
  6131  0CE3  01F3               	clrf	Lcd_Text@x
  6132  0CE4  0AF3               	incf	Lcd_Text@x,f
  6133  0CE5  300B               	movlw	low ((STR_53+1)| (0+32768))
  6134  0CE6  00F4               	movwf	Lcd_Text@buffer
  6135  0CE7  3091               	movlw	high ((STR_53+1)| (0+32768))
  6136  0CE8  00F5               	movwf	Lcd_Text@buffer+1
  6137  0CE9  3001               	movlw	1
  6138  0CEA  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  6139                           
  6140                           ;main.c: 467: Lcd_Text(1, 1, "-Lavado Rapido");
  6141  0CEF  01F3               	clrf	Lcd_Text@x
  6142  0CF0  0AF3               	incf	Lcd_Text@x,f
  6143  0CF1  3019               	movlw	low (STR_59| (0+32768))
  6144  0CF2  00F4               	movwf	Lcd_Text@buffer
  6145  0CF3  3091               	movlw	high (STR_59| (0+32768))
  6146  0CF4  00F5               	movwf	Lcd_Text@buffer+1
  6147  0CF5  3001               	movlw	1
  6148  0CF6  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  6149                           
  6150                           ;main.c: 468: Lcd_Text(2, 1, "Lavado Lento");
  6151  0CFB  01F3               	clrf	Lcd_Text@x
  6152  0CFC  0AF3               	incf	Lcd_Text@x,f
  6153  0CFD  3029               	movlw	low ((STR_65+1)| (0+32768))
  6154  0CFE  00F4               	movwf	Lcd_Text@buffer
  6155  0CFF  3091               	movlw	high ((STR_65+1)| (0+32768))
  6156  0D00  00F5               	movwf	Lcd_Text@buffer+1
  6157  0D01  3002               	movlw	2
  6158  0D02  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  6159                           
  6160                           ;main.c: 469: Lcd_Text(3, 1, "Lavado Delicado");
  6161  0D07  01F3               	clrf	Lcd_Text@x
  6162  0D08  0AF3               	incf	Lcd_Text@x,f
  6163  0D09  30EB               	movlw	low ((STR_71+1)| (0+32768))
  6164  0D0A  00F4               	movwf	Lcd_Text@buffer
  6165  0D0B  3090               	movlw	high ((STR_71+1)| (0+32768))
  6166  0D0C  00F5               	movwf	Lcd_Text@buffer+1
  6167  0D0D  3003               	movlw	3
  6168  0D0E  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  6169                           
  6170                           ;main.c: 470: Lcd_Text(4, 1, "Acerca de");
  6171  0D13  01F3               	clrf	Lcd_Text@x
  6172  0D14  0AF3               	incf	Lcd_Text@x,f
  6173  0D15  3037               	movlw	low ((STR_77+1)| (0+32768))
  6174  0D16  00F4               	movwf	Lcd_Text@buffer
  6175  0D17  3091               	movlw	high ((STR_77+1)| (0+32768))
  6176  0D18  00F5               	movwf	Lcd_Text@buffer+1
  6177  0D19  3004               	movlw	4
  6178  0D1A  160A  118A  2509   	fcall	_Lcd_Text
  6179                           
  6180                           ;main.c: 471: tiempo = 89;
  6181  0D1D  3059               	movlw	89
  6182  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  6183  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  6184  0D20  00E2               	movwf	_tiempo
  6185  0D21  3000               	movlw	0
  6186  0D22  00E3               	movwf	_tiempo+1
  6187                           
  6188                           ;main.c: 472: }else if(casilla == 2){
  6189  0D23  0008               	return
  6190  0D24                     l2427:	
  6191  0D24  3002               	movlw	2
  6192  0D25  0679               	xorwf	ImprimirMenuPrincipal@casilla,w
  6193  0D26  047A               	iorwf	ImprimirMenuPrincipal@casilla+1,w
  6194  0D27  1D03               	btfss	3,2
  6195  0D28  2D6A               	goto	l2433
  6196                           
  6197                           ;main.c: 473: Lcd_Text(1, 1, "Lavado Normal");
  6198  0D29  01F3               	clrf	Lcd_Text@x
  6199  0D2A  0AF3               	incf	Lcd_Text@x,f
  6200  0D2B  300B               	movlw	low ((STR_53+1)| (0+32768))
  6201  0D2C  00F4               	movwf	Lcd_Text@buffer
  6202  0D2D  3091               	movlw	high ((STR_53+1)| (0+32768))
  6203  0D2E  00F5               	movwf	Lcd_Text@buffer+1
  6204  0D2F  3001               	movlw	1
  6205  0D30  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  6206                           
  6207                           ;main.c: 474: Lcd_Text(1, 1, "Lavado Rapido");
  6208  0D35  01F3               	clrf	Lcd_Text@x
  6209  0D36  0AF3               	incf	Lcd_Text@x,f
  6210  0D37  301A               	movlw	low ((STR_59+1)| (0+32768))
  6211  0D38  00F4               	movwf	Lcd_Text@buffer
  6212  0D39  3091               	movlw	high ((STR_59+1)| (0+32768))
  6213  0D3A  00F5               	movwf	Lcd_Text@buffer+1
  6214  0D3B  3001               	movlw	1
  6215  0D3C  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  6216                           
  6217                           ;main.c: 475: Lcd_Text(2, 1, "-Lavado Lento");
  6218  0D41  01F3               	clrf	Lcd_Text@x
  6219  0D42  0AF3               	incf	Lcd_Text@x,f
  6220  0D43  3028               	movlw	low (STR_65| (0+32768))
  6221  0D44  00F4               	movwf	Lcd_Text@buffer
  6222  0D45  3091               	movlw	high (STR_65| (0+32768))
  6223  0D46  00F5               	movwf	Lcd_Text@buffer+1
  6224  0D47  3002               	movlw	2
  6225  0D48  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  6226                           
  6227                           ;main.c: 476: Lcd_Text(3, 1, "Lavado Delicado");
  6228  0D4D  01F3               	clrf	Lcd_Text@x
  6229  0D4E  0AF3               	incf	Lcd_Text@x,f
  6230  0D4F  30EB               	movlw	low ((STR_71+1)| (0+32768))
  6231  0D50  00F4               	movwf	Lcd_Text@buffer
  6232  0D51  3090               	movlw	high ((STR_71+1)| (0+32768))
  6233  0D52  00F5               	movwf	Lcd_Text@buffer+1
  6234  0D53  3003               	movlw	3
  6235  0D54  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  6236                           
  6237                           ;main.c: 477: Lcd_Text(4, 1, "Acerca de");
  6238  0D59  01F3               	clrf	Lcd_Text@x
  6239  0D5A  0AF3               	incf	Lcd_Text@x,f
  6240  0D5B  3037               	movlw	low ((STR_77+1)| (0+32768))
  6241  0D5C  00F4               	movwf	Lcd_Text@buffer
  6242  0D5D  3091               	movlw	high ((STR_77+1)| (0+32768))
  6243  0D5E  00F5               	movwf	Lcd_Text@buffer+1
  6244  0D5F  3004               	movlw	4
  6245  0D60  160A  118A  2509   	fcall	_Lcd_Text
  6246                           
  6247                           ;main.c: 478: tiempo = 70;
  6248  0D63  3046               	movlw	70
  6249  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  6250  0D65  1303               	bcf	3,6	;RP1=0, select bank0
  6251  0D66  00E2               	movwf	_tiempo
  6252  0D67  3000               	movlw	0
  6253  0D68  00E3               	movwf	_tiempo+1
  6254                           
  6255                           ;main.c: 479: }else if(casilla == 3){
  6256  0D69  0008               	return
  6257  0D6A                     l2433:	
  6258  0D6A  3003               	movlw	3
  6259  0D6B  0679               	xorwf	ImprimirMenuPrincipal@casilla,w
  6260  0D6C  047A               	iorwf	ImprimirMenuPrincipal@casilla+1,w
  6261  0D6D  1D03               	btfss	3,2
  6262  0D6E  2DAA               	goto	l2437
  6263                           
  6264                           ;main.c: 480: Lcd_Text(1, 1, "Lavado Normal");
  6265  0D6F  01F3               	clrf	Lcd_Text@x
  6266  0D70  0AF3               	incf	Lcd_Text@x,f
  6267  0D71  300B               	movlw	low ((STR_53+1)| (0+32768))
  6268  0D72  00F4               	movwf	Lcd_Text@buffer
  6269  0D73  3091               	movlw	high ((STR_53+1)| (0+32768))
  6270  0D74  00F5               	movwf	Lcd_Text@buffer+1
  6271  0D75  3001               	movlw	1
  6272  0D76  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  6273                           
  6274                           ;main.c: 481: Lcd_Text(1, 1, "Lavado Rapido");
  6275  0D7B  01F3               	clrf	Lcd_Text@x
  6276  0D7C  0AF3               	incf	Lcd_Text@x,f
  6277  0D7D  301A               	movlw	low ((STR_59+1)| (0+32768))
  6278  0D7E  00F4               	movwf	Lcd_Text@buffer
  6279  0D7F  3091               	movlw	high ((STR_59+1)| (0+32768))
  6280  0D80  00F5               	movwf	Lcd_Text@buffer+1
  6281  0D81  3001               	movlw	1
  6282  0D82  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  6283                           
  6284                           ;main.c: 482: Lcd_Text(2, 1, "Lavado Lento");
  6285  0D87  01F3               	clrf	Lcd_Text@x
  6286  0D88  0AF3               	incf	Lcd_Text@x,f
  6287  0D89  3029               	movlw	low ((STR_65+1)| (0+32768))
  6288  0D8A  00F4               	movwf	Lcd_Text@buffer
  6289  0D8B  3091               	movlw	high ((STR_65+1)| (0+32768))
  6290  0D8C  00F5               	movwf	Lcd_Text@buffer+1
  6291  0D8D  3002               	movlw	2
  6292  0D8E  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  6293                           
  6294                           ;main.c: 483: Lcd_Text(3, 1, "-Lavado Delicado");
  6295  0D93  01F3               	clrf	Lcd_Text@x
  6296  0D94  0AF3               	incf	Lcd_Text@x,f
  6297  0D95  30EA               	movlw	low (STR_71| (0+32768))
  6298  0D96  00F4               	movwf	Lcd_Text@buffer
  6299  0D97  3090               	movlw	high (STR_71| (0+32768))
  6300  0D98  00F5               	movwf	Lcd_Text@buffer+1
  6301  0D99  3003               	movlw	3
  6302  0D9A  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  6303                           
  6304                           ;main.c: 484: Lcd_Text(4, 1, "Acerca de");
  6305  0D9F  01F3               	clrf	Lcd_Text@x
  6306  0DA0  0AF3               	incf	Lcd_Text@x,f
  6307  0DA1  3037               	movlw	low ((STR_77+1)| (0+32768))
  6308  0DA2  00F4               	movwf	Lcd_Text@buffer
  6309  0DA3  3091               	movlw	high ((STR_77+1)| (0+32768))
  6310  0DA4  00F5               	movwf	Lcd_Text@buffer+1
  6311  0DA5  3004               	movlw	4
  6312  0DA6  160A  118A  2509   	fcall	_Lcd_Text
  6313                           
  6314                           ;main.c: 485: }else if(casilla == 4){
  6315  0DA9  0008               	return
  6316  0DAA                     l2437:	
  6317  0DAA  3004               	movlw	4
  6318  0DAB  0679               	xorwf	ImprimirMenuPrincipal@casilla,w
  6319  0DAC  047A               	iorwf	ImprimirMenuPrincipal@casilla+1,w
  6320  0DAD  1D03               	btfss	3,2
  6321  0DAE  0008               	return
  6322                           
  6323                           ;main.c: 486: Lcd_Text(1, 1, "Lavado Normal");
  6324  0DAF  01F3               	clrf	Lcd_Text@x
  6325  0DB0  0AF3               	incf	Lcd_Text@x,f
  6326  0DB1  300B               	movlw	low ((STR_53+1)| (0+32768))
  6327  0DB2  00F4               	movwf	Lcd_Text@buffer
  6328  0DB3  3091               	movlw	high ((STR_53+1)| (0+32768))
  6329  0DB4  00F5               	movwf	Lcd_Text@buffer+1
  6330  0DB5  3001               	movlw	1
  6331  0DB6  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  6332                           
  6333                           ;main.c: 487: Lcd_Text(1, 1, "Lavado Rapido");
  6334  0DBB  01F3               	clrf	Lcd_Text@x
  6335  0DBC  0AF3               	incf	Lcd_Text@x,f
  6336  0DBD  301A               	movlw	low ((STR_59+1)| (0+32768))
  6337  0DBE  00F4               	movwf	Lcd_Text@buffer
  6338  0DBF  3091               	movlw	high ((STR_59+1)| (0+32768))
  6339  0DC0  00F5               	movwf	Lcd_Text@buffer+1
  6340  0DC1  3001               	movlw	1
  6341  0DC2  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  6342                           
  6343                           ;main.c: 488: Lcd_Text(2, 1, "Lavado Lento");
  6344  0DC7  01F3               	clrf	Lcd_Text@x
  6345  0DC8  0AF3               	incf	Lcd_Text@x,f
  6346  0DC9  3029               	movlw	low ((STR_65+1)| (0+32768))
  6347  0DCA  00F4               	movwf	Lcd_Text@buffer
  6348  0DCB  3091               	movlw	high ((STR_65+1)| (0+32768))
  6349  0DCC  00F5               	movwf	Lcd_Text@buffer+1
  6350  0DCD  3002               	movlw	2
  6351  0DCE  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  6352                           
  6353                           ;main.c: 489: Lcd_Text(3, 1, "Lavado Delicado");
  6354  0DD3  01F3               	clrf	Lcd_Text@x
  6355  0DD4  0AF3               	incf	Lcd_Text@x,f
  6356  0DD5  30EB               	movlw	low ((STR_71+1)| (0+32768))
  6357  0DD6  00F4               	movwf	Lcd_Text@buffer
  6358  0DD7  3090               	movlw	high ((STR_71+1)| (0+32768))
  6359  0DD8  00F5               	movwf	Lcd_Text@buffer+1
  6360  0DD9  3003               	movlw	3
  6361  0DDA  160A  118A  2509  120A  158A  	fcall	_Lcd_Text
  6362                           
  6363                           ;main.c: 490: Lcd_Text(4, 1, "-Acerca de");
  6364  0DDF  01F3               	clrf	Lcd_Text@x
  6365  0DE0  0AF3               	incf	Lcd_Text@x,f
  6366  0DE1  3036               	movlw	low (STR_77| (0+32768))
  6367  0DE2  00F4               	movwf	Lcd_Text@buffer
  6368  0DE3  3091               	movlw	high (STR_77| (0+32768))
  6369  0DE4  00F5               	movwf	Lcd_Text@buffer+1
  6370  0DE5  3004               	movlw	4
  6371  0DE6  160A  118A  2509   	fcall	_Lcd_Text
  6372  0DE9  0008               	return
  6373  0DEA                     __end_of_ImprimirMenuPrincipal:	
  6374                           
  6375                           	psect	text19
  6376  1663                     __ptext19:	
  6377 ;; *************** function _ImprimirMenuLavado *****************
  6378 ;; Defined at:
  6379 ;;		line 439 in file "main.c"
  6380 ;; Parameters:    Size  Location     Type
  6381 ;;  casilla         2   18[BANK0 ] int 
  6382 ;; Auto vars:     Size  Location     Type
  6383 ;;  aux             5   20[BANK0 ] unsigned char [5]
  6384 ;; Return value:  Size  Location     Type
  6385 ;;                  1    wreg      void 
  6386 ;; Registers used:
  6387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6388 ;; Tracked objects:
  6389 ;;		On entry : 0/0
  6390 ;;		On exit  : 0/0
  6391 ;;		Unchanged: 0/0
  6392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6393 ;;      Params:         0       2       0       0       0
  6394 ;;      Locals:         0       5       0       0       0
  6395 ;;      Temps:          0       0       0       0       0
  6396 ;;      Totals:         0       7       0       0       0
  6397 ;;Total ram usage:        7 bytes
  6398 ;; Hardware stack levels used:    1
  6399 ;; Hardware stack levels required when called:    2
  6400 ;; This function calls:
  6401 ;;		_Lcd_Command
  6402 ;;		_Lcd_Text
  6403 ;;		_sprintf
  6404 ;; This function is called by:
  6405 ;;		_main
  6406 ;; This function uses a non-reentrant model
  6407 ;;
  6408                           
  6409                           
  6410                           ;psect for function _ImprimirMenuLavado
  6411  1663                     _ImprimirMenuLavado:	
  6412                           
  6413                           ;main.c: 440: char aux[5];
  6414                           ;main.c: 441: sprintf(aux,"%d minutos", tiempo);
  6415                           
  6416                           ;incstack = 0
  6417                           ; Regs used in _ImprimirMenuLavado: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6418  1663  3041               	movlw	low (STR_4| (0+32768))
  6419  1664  1283               	bcf	3,5	;RP0=0, select bank0
  6420  1665  1303               	bcf	3,6	;RP1=0, select bank0
  6421  1666  00A0               	movwf	sprintf@f
  6422  1667  3091               	movlw	high (STR_4| (0+32768))
  6423  1668  00A1               	movwf	sprintf@f+1
  6424  1669  0863               	movf	_tiempo+1,w
  6425  166A  00A3               	movwf	?_sprintf+3
  6426  166B  0862               	movf	_tiempo,w
  6427  166C  00A2               	movwf	?_sprintf+2
  6428  166D  3034               	movlw	(low (ImprimirMenuLavado@aux| 0))& (0+255)
  6429  166E  120A  158A  23AC  160A  118A  	fcall	_sprintf
  6430                           
  6431                           ;main.c: 442: Lcd_Command(1);
  6432  1673  3001               	movlw	1
  6433  1674  120A  158A  20CD  160A  118A  	fcall	_Lcd_Command
  6434                           
  6435                           ;main.c: 443: if(casilla == 0){
  6436  1679  1283               	bcf	3,5	;RP0=0, select bank0
  6437  167A  1303               	bcf	3,6	;RP1=0, select bank0
  6438  167B  0832               	movf	ImprimirMenuLavado@casilla,w
  6439  167C  0433               	iorwf	ImprimirMenuLavado@casilla+1,w
  6440  167D  1D03               	btfss	3,2
  6441  167E  2EAE               	goto	l2459
  6442                           
  6443                           ;main.c: 444: Lcd_Text(1, 1, "El lavado dura");
  6444  167F  01F3               	clrf	Lcd_Text@x
  6445  1680  0AF3               	incf	Lcd_Text@x,f
  6446  1681  30FB               	movlw	low (STR_47| (0+32768))
  6447  1682  00F4               	movwf	Lcd_Text@buffer
  6448  1683  3090               	movlw	high (STR_47| (0+32768))
  6449  1684  00F5               	movwf	Lcd_Text@buffer+1
  6450  1685  3001               	movlw	1
  6451  1686  160A  118A  2509  160A  118A  	fcall	_Lcd_Text
  6452                           
  6453                           ;main.c: 445: Lcd_Text(2, 1, aux);
  6454  168B  01F3               	clrf	Lcd_Text@x
  6455  168C  0AF3               	incf	Lcd_Text@x,f
  6456  168D  3034               	movlw	(low (ImprimirMenuLavado@aux| 0))& (0+255)
  6457  168E  00F4               	movwf	Lcd_Text@buffer
  6458  168F  3000               	movlw	0
  6459  1690  00F5               	movwf	Lcd_Text@buffer+1
  6460  1691  3002               	movlw	2
  6461  1692  160A  118A  2509  160A  118A  	fcall	_Lcd_Text
  6462                           
  6463                           ;main.c: 446: Lcd_Text(3, 1, "-Iniciar");
  6464  1697  01F3               	clrf	Lcd_Text@x
  6465  1698  0AF3               	incf	Lcd_Text@x,f
  6466  1699  304C               	movlw	low (STR_48| (0+32768))
  6467  169A  00F4               	movwf	Lcd_Text@buffer
  6468  169B  3091               	movlw	high (STR_48| (0+32768))
  6469  169C  00F5               	movwf	Lcd_Text@buffer+1
  6470  169D  3003               	movlw	3
  6471  169E  160A  118A  2509  160A  118A  	fcall	_Lcd_Text
  6472                           
  6473                           ;main.c: 447: Lcd_Text(4, 1, "Salir");
  6474  16A3  01F3               	clrf	Lcd_Text@x
  6475  16A4  0AF3               	incf	Lcd_Text@x,f
  6476  16A5  3056               	movlw	low ((STR_52+1)| (0+32768))
  6477  16A6  00F4               	movwf	Lcd_Text@buffer
  6478  16A7  3091               	movlw	high ((STR_52+1)| (0+32768))
  6479  16A8  00F5               	movwf	Lcd_Text@buffer+1
  6480  16A9  3004               	movlw	4
  6481  16AA  160A  118A  2509   	fcall	_Lcd_Text
  6482                           
  6483                           ;main.c: 448: }else if(casilla == 1){
  6484  16AD  0008               	return
  6485  16AE                     l2459:	
  6486  16AE  1283               	bcf	3,5	;RP0=0, select bank0
  6487  16AF  1303               	bcf	3,6	;RP1=0, select bank0
  6488  16B0  0332               	decf	ImprimirMenuLavado@casilla,w
  6489  16B1  0433               	iorwf	ImprimirMenuLavado@casilla+1,w
  6490  16B2  1D03               	btfss	3,2
  6491  16B3  0008               	return
  6492                           
  6493                           ;main.c: 449: Lcd_Text(1, 1, "El lavado dura");
  6494  16B4  01F3               	clrf	Lcd_Text@x
  6495  16B5  0AF3               	incf	Lcd_Text@x,f
  6496  16B6  30FB               	movlw	low (STR_47| (0+32768))
  6497  16B7  00F4               	movwf	Lcd_Text@buffer
  6498  16B8  3090               	movlw	high (STR_47| (0+32768))
  6499  16B9  00F5               	movwf	Lcd_Text@buffer+1
  6500  16BA  3001               	movlw	1
  6501  16BB  160A  118A  2509  160A  118A  	fcall	_Lcd_Text
  6502                           
  6503                           ;main.c: 450: Lcd_Text(2, 1, aux);
  6504  16C0  01F3               	clrf	Lcd_Text@x
  6505  16C1  0AF3               	incf	Lcd_Text@x,f
  6506  16C2  3034               	movlw	(low (ImprimirMenuLavado@aux| 0))& (0+255)
  6507  16C3  00F4               	movwf	Lcd_Text@buffer
  6508  16C4  3000               	movlw	0
  6509  16C5  00F5               	movwf	Lcd_Text@buffer+1
  6510  16C6  3002               	movlw	2
  6511  16C7  160A  118A  2509  160A  118A  	fcall	_Lcd_Text
  6512                           
  6513                           ;main.c: 451: Lcd_Text(3, 1, "Iniciar");
  6514  16CC  01F3               	clrf	Lcd_Text@x
  6515  16CD  0AF3               	incf	Lcd_Text@x,f
  6516  16CE  304D               	movlw	low ((STR_48+1)| (0+32768))
  6517  16CF  00F4               	movwf	Lcd_Text@buffer
  6518  16D0  3091               	movlw	high ((STR_48+1)| (0+32768))
  6519  16D1  00F5               	movwf	Lcd_Text@buffer+1
  6520  16D2  3003               	movlw	3
  6521  16D3  160A  118A  2509  160A  118A  	fcall	_Lcd_Text
  6522                           
  6523                           ;main.c: 452: Lcd_Text(4, 1, "-Salir");
  6524  16D8  01F3               	clrf	Lcd_Text@x
  6525  16D9  0AF3               	incf	Lcd_Text@x,f
  6526  16DA  3055               	movlw	low (STR_52| (0+32768))
  6527  16DB  00F4               	movwf	Lcd_Text@buffer
  6528  16DC  3091               	movlw	high (STR_52| (0+32768))
  6529  16DD  00F5               	movwf	Lcd_Text@buffer+1
  6530  16DE  3004               	movlw	4
  6531  16DF  160A  118A  2509   	fcall	_Lcd_Text
  6532  16E2  0008               	return
  6533  16E3                     __end_of_ImprimirMenuLavado:	
  6534                           
  6535                           	psect	text20
  6536  0BAC                     __ptext20:	
  6537 ;; *************** function _sprintf *****************
  6538 ;; Defined at:
  6539 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;  sp              1    wreg     PTR unsigned char 
  6542 ;;		 -> ImprimirMenuLavado@aux(5), aux(20), main@aux(20), 
  6543 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  6544 ;;		 -> STR_46(11), STR_34(17), STR_33(17), STR_21(17), 
  6545 ;;		 -> STR_20(17), STR_8(17), STR_4(11), 
  6546 ;; Auto vars:     Size  Location     Type
  6547 ;;  sp              1   16[BANK0 ] PTR unsigned char 
  6548 ;;		 -> ImprimirMenuLavado@aux(5), aux(20), main@aux(20), 
  6549 ;;  tmpval          4    0        struct .
  6550 ;;  val             2   14[BANK0 ] unsigned int 
  6551 ;;  cp              2    0        PTR const unsigned char 
  6552 ;;  len             2    0        unsigned int 
  6553 ;;  c               1   17[BANK0 ] char 
  6554 ;;  prec            1   13[BANK0 ] char 
  6555 ;;  flag            1   12[BANK0 ] unsigned char 
  6556 ;;  ap              1   11[BANK0 ] PTR void [1]
  6557 ;;		 -> ?_sprintf(2), 
  6558 ;; Return value:  Size  Location     Type
  6559 ;;                  2    0[BANK0 ] int 
  6560 ;; Registers used:
  6561 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/0
  6564 ;;		On exit  : 0/0
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6567 ;;      Params:         0       8       0       0       0
  6568 ;;      Locals:         0       7       0       0       0
  6569 ;;      Temps:          0       3       0       0       0
  6570 ;;      Totals:         0      18       0       0       0
  6571 ;;Total ram usage:       18 bytes
  6572 ;; Hardware stack levels used:    1
  6573 ;; Hardware stack levels required when called:    1
  6574 ;; This function calls:
  6575 ;;		___lwdiv
  6576 ;;		___lwmod
  6577 ;; This function is called by:
  6578 ;;		_main
  6579 ;;		_lavadoRapido
  6580 ;;		_lavadoLento
  6581 ;;		_lavadoDelicado
  6582 ;;		_ImprimirMenuLavado
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           
  6587                           ;psect for function _sprintf
  6588  0BAC                     _sprintf:	
  6589                           
  6590                           ;incstack = 0
  6591                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6592                           ;sprintf@sp stored from wreg
  6593  0BAC  1283               	bcf	3,5	;RP0=0, select bank0
  6594  0BAD  1303               	bcf	3,6	;RP1=0, select bank0
  6595  0BAE  00B0               	movwf	sprintf@sp
  6596                           
  6597                           ;doprnt.c: 494: va_list ap;
  6598                           ;doprnt.c: 499: signed char c;
  6599                           ;doprnt.c: 506: signed char prec;
  6600                           ;doprnt.c: 508: unsigned char flag;
  6601                           ;doprnt.c: 523: union {
  6602                           ;doprnt.c: 524: unsigned long vd;
  6603                           ;doprnt.c: 525: double integ;
  6604                           ;doprnt.c: 526: } tmpval;
  6605                           ;doprnt.c: 528: unsigned int val;
  6606                           ;doprnt.c: 529: unsigned len;
  6607                           ;doprnt.c: 530: const char * cp;
  6608                           ;doprnt.c: 533: *ap = __va_start();
  6609  0BAF  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  6610  0BB0  00A8               	movwf	??_sprintf
  6611  0BB1  0828               	movf	??_sprintf,w
  6612  0BB2  00AB               	movwf	sprintf@ap
  6613  0BB3                     l2267:	
  6614                           ;doprnt.c: 536: while(c = *f++) {
  6615                           
  6616  0BB3  0821               	movf	sprintf@f+1,w
  6617  0BB4  00A9               	movwf	??_sprintf+1
  6618  0BB5  0820               	movf	sprintf@f,w
  6619  0BB6  00A8               	movwf	??_sprintf
  6620  0BB7  0AA0               	incf	sprintf@f,f
  6621  0BB8  1903               	skipnz
  6622  0BB9  0AA1               	incf	sprintf@f+1,f
  6623  0BBA  0829               	movf	??_sprintf+1,w
  6624  0BBB  00FF               	movwf	127
  6625  0BBC  0828               	movf	??_sprintf,w
  6626  0BBD  0084               	movwf	4
  6627  0BBE  160A  118A  2000  120A  158A  	fcall	stringtab
  6628  0BC3  00AA               	movwf	??_sprintf+2
  6629  0BC4  082A               	movf	??_sprintf+2,w
  6630  0BC5  00B1               	movwf	sprintf@c
  6631  0BC6  0831               	movf	sprintf@c,w
  6632  0BC7  1903               	btfsc	3,2
  6633  0BC8  2C8F               	goto	l2269
  6634                           
  6635                           ;doprnt.c: 538: if(c != '%')
  6636  0BC9  3025               	movlw	37
  6637  0BCA  0631               	xorwf	sprintf@c,w
  6638  0BCB  1903               	btfsc	3,2
  6639  0BCC  2BD9               	goto	l2223
  6640                           
  6641                           ;doprnt.c: 540: {
  6642                           ;doprnt.c: 541: ((*sp++ = (c)));
  6643  0BCD  0831               	movf	sprintf@c,w
  6644  0BCE  00A8               	movwf	??_sprintf
  6645  0BCF  0830               	movf	sprintf@sp,w
  6646  0BD0  0084               	movwf	4
  6647  0BD1  0828               	movf	??_sprintf,w
  6648  0BD2  1383               	bcf	3,7	;select IRP bank0
  6649  0BD3  0080               	movwf	0
  6650  0BD4  3001               	movlw	1
  6651  0BD5  00A8               	movwf	??_sprintf
  6652  0BD6  0828               	movf	??_sprintf,w
  6653  0BD7  07B0               	addwf	sprintf@sp,f
  6654                           
  6655                           ;doprnt.c: 542: continue;
  6656  0BD8  2BB3               	goto	l2267
  6657  0BD9                     l2223:	
  6658                           
  6659                           ;doprnt.c: 543: }
  6660                           ;doprnt.c: 548: flag = 0;
  6661  0BD9  01AC               	clrf	sprintf@flag
  6662                           
  6663                           ;doprnt.c: 822: }
  6664                           
  6665                           ;doprnt.c: 813: continue;
  6666                           
  6667                           ;doprnt.c: 802: default:
  6668                           
  6669                           ;doprnt.c: 698: case 'i':
  6670                           ;doprnt.c: 699: break;
  6671                           
  6672                           ;doprnt.c: 697: case 'd':
  6673                           
  6674                           ;doprnt.c: 638: goto alldone;
  6675                           
  6676                           ;doprnt.c: 637: case 0:
  6677                           
  6678                           ;doprnt.c: 635: switch(c = *f++) {
  6679  0BDA  0821               	movf	sprintf@f+1,w
  6680  0BDB  00A9               	movwf	??_sprintf+1
  6681  0BDC  0820               	movf	sprintf@f,w
  6682  0BDD  00A8               	movwf	??_sprintf
  6683  0BDE  0AA0               	incf	sprintf@f,f
  6684  0BDF  1903               	skipnz
  6685  0BE0  0AA1               	incf	sprintf@f+1,f
  6686  0BE1  0829               	movf	??_sprintf+1,w
  6687  0BE2  00FF               	movwf	127
  6688  0BE3  0828               	movf	??_sprintf,w
  6689  0BE4  0084               	movwf	4
  6690  0BE5  160A  118A  2000  120A  158A  	fcall	stringtab
  6691  0BEA  00B1               	movwf	sprintf@c
  6692                           
  6693                           ; Switch size 1, requested type "space"
  6694                           ; Number of cases is 3, Range of values is 0 to 105
  6695                           ; switch strategies available:
  6696                           ; Name         Instructions Cycles
  6697                           ; simple_byte           10     6 (average)
  6698                           ; jumptable            260     6 (fixed)
  6699                           ;	Chosen strategy is simple_byte
  6700  0BEB  3A00               	xorlw	0	; case 0
  6701  0BEC  1903               	skipnz
  6702  0BED  2C8F               	goto	l2269
  6703  0BEE  3A64               	xorlw	100	; case 100
  6704  0BEF  1903               	skipnz
  6705  0BF0  2BF5               	goto	l2229
  6706  0BF1  3A0D               	xorlw	13	; case 105
  6707  0BF2  1903               	skipnz
  6708  0BF3  2BF5               	goto	l2229
  6709  0BF4  2BB3               	goto	l2267
  6710  0BF5                     l2229:	
  6711                           
  6712                           ;doprnt.c: 1253: {
  6713                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  6714  0BF5  082B               	movf	sprintf@ap,w
  6715  0BF6  0084               	movwf	4
  6716  0BF7  1383               	bcf	3,7	;select IRP bank0
  6717  0BF8  0800               	movf	0,w
  6718  0BF9  00AE               	movwf	sprintf@val
  6719  0BFA  0A84               	incf	4,f
  6720  0BFB  0800               	movf	0,w
  6721  0BFC  00AF               	movwf	sprintf@val+1
  6722  0BFD  3002               	movlw	2
  6723  0BFE  00A8               	movwf	??_sprintf
  6724  0BFF  0828               	movf	??_sprintf,w
  6725  0C00  07AB               	addwf	sprintf@ap,f
  6726                           
  6727                           ;doprnt.c: 1261: if((int)val < 0) {
  6728  0C01  1FAF               	btfss	sprintf@val+1,7
  6729  0C02  2C0C               	goto	l2239
  6730                           
  6731                           ;doprnt.c: 1262: flag |= 0x03;
  6732  0C03  3003               	movlw	3
  6733  0C04  00A8               	movwf	??_sprintf
  6734  0C05  0828               	movf	??_sprintf,w
  6735  0C06  04AC               	iorwf	sprintf@flag,f
  6736                           
  6737                           ;doprnt.c: 1263: val = -val;
  6738  0C07  09AE               	comf	sprintf@val,f
  6739  0C08  09AF               	comf	sprintf@val+1,f
  6740  0C09  0AAE               	incf	sprintf@val,f
  6741  0C0A  1903               	skipnz
  6742  0C0B  0AAF               	incf	sprintf@val+1,f
  6743  0C0C                     l2239:	
  6744                           
  6745                           ;doprnt.c: 1264: }
  6746                           ;doprnt.c: 1266: }
  6747                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6748  0C0C  01B1               	clrf	sprintf@c
  6749  0C0D  0AB1               	incf	sprintf@c,f
  6750  0C0E  3005               	movlw	5
  6751  0C0F  0631               	xorwf	sprintf@c,w
  6752  0C10  1903               	btfsc	3,2
  6753  0C11  2C37               	goto	l2251
  6754  0C12                     l2245:	
  6755                           
  6756                           ;doprnt.c: 1306: if(val < dpowers[c])
  6757  0C12  0831               	movf	sprintf@c,w
  6758  0C13  00A8               	movwf	??_sprintf
  6759  0C14  0728               	addwf	??_sprintf,w
  6760  0C15  3E12               	addlw	low (_dpowers| (0+32768))
  6761  0C16  0084               	movwf	4
  6762  0C17  3090               	movlw	high (_dpowers| (0+32768))
  6763  0C18  1803               	skipnc
  6764  0C19  3E01               	addlw	1
  6765  0C1A  00FF               	movwf	127
  6766  0C1B  160A  118A  2000  120A  158A  	fcall	stringtab
  6767  0C20  00A9               	movwf	??_sprintf+1
  6768  0C21  160A  118A  2000  120A  158A  	fcall	stringtab
  6769  0C26  00AA               	movwf	??_sprintf+2
  6770  0C27  082A               	movf	??_sprintf+2,w
  6771  0C28  022F               	subwf	sprintf@val+1,w
  6772  0C29  1D03               	skipz
  6773  0C2A  2C2D               	goto	u2845
  6774  0C2B  0829               	movf	??_sprintf+1,w
  6775  0C2C  022E               	subwf	sprintf@val,w
  6776  0C2D                     u2845:	
  6777  0C2D  1C03               	btfss	3,0
  6778  0C2E  2C37               	goto	l2251
  6779                           
  6780                           ;doprnt.c: 1307: break;
  6781  0C2F  3001               	movlw	1
  6782  0C30  00A8               	movwf	??_sprintf
  6783  0C31  0828               	movf	??_sprintf,w
  6784  0C32  07B1               	addwf	sprintf@c,f
  6785  0C33  3005               	movlw	5
  6786  0C34  0631               	xorwf	sprintf@c,w
  6787  0C35  1D03               	btfss	3,2
  6788  0C36  2C12               	goto	l2245
  6789  0C37                     l2251:	
  6790                           
  6791                           ;doprnt.c: 1422: {
  6792                           ;doprnt.c: 1438: if(flag & 0x03)
  6793  0C37  082C               	movf	sprintf@flag,w
  6794  0C38  3903               	andlw	3
  6795  0C39  1903               	btfsc	3,2
  6796  0C3A  2C46               	goto	l2257
  6797                           
  6798                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  6799  0C3B  302D               	movlw	45
  6800  0C3C  00A8               	movwf	??_sprintf
  6801  0C3D  0830               	movf	sprintf@sp,w
  6802  0C3E  0084               	movwf	4
  6803  0C3F  0828               	movf	??_sprintf,w
  6804  0C40  1383               	bcf	3,7	;select IRP bank0
  6805  0C41  0080               	movwf	0
  6806  0C42  3001               	movlw	1
  6807  0C43  00A8               	movwf	??_sprintf
  6808  0C44  0828               	movf	??_sprintf,w
  6809  0C45  07B0               	addwf	sprintf@sp,f
  6810  0C46                     l2257:	
  6811                           
  6812                           ;doprnt.c: 1469: }
  6813                           ;doprnt.c: 1472: prec = c;
  6814  0C46  0831               	movf	sprintf@c,w
  6815  0C47  00A8               	movwf	??_sprintf
  6816  0C48  0828               	movf	??_sprintf,w
  6817  0C49  00AD               	movwf	sprintf@prec
  6818  0C4A                     l2265:	
  6819                           ;doprnt.c: 1474: while(prec--) {
  6820                           
  6821  0C4A  30FF               	movlw	255
  6822  0C4B  00A8               	movwf	??_sprintf
  6823  0C4C  0828               	movf	??_sprintf,w
  6824  0C4D  07AD               	addwf	sprintf@prec,f
  6825  0C4E  0A2D               	incf	sprintf@prec,w
  6826  0C4F  1903               	btfsc	3,2
  6827  0C50  2BB3               	goto	l2267
  6828                           
  6829                           ;doprnt.c: 1478: {
  6830                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  6831  0C51  300A               	movlw	10
  6832  0C52  00F8               	movwf	___lwmod@divisor
  6833  0C53  3000               	movlw	0
  6834  0C54  00F9               	movwf	___lwmod@divisor+1
  6835  0C55  082D               	movf	sprintf@prec,w
  6836  0C56  00A8               	movwf	??_sprintf
  6837  0C57  0728               	addwf	??_sprintf,w
  6838  0C58  3E12               	addlw	low (_dpowers| (0+32768))
  6839  0C59  0084               	movwf	4
  6840  0C5A  3090               	movlw	high (_dpowers| (0+32768))
  6841  0C5B  1803               	skipnc
  6842  0C5C  3E01               	addlw	1
  6843  0C5D  00FF               	movwf	127
  6844  0C5E  160A  118A  2000  120A  158A  	fcall	stringtab
  6845  0C63  00F0               	movwf	___lwdiv@divisor
  6846  0C64  160A  118A  2000  120A  158A  	fcall	stringtab
  6847  0C69  00F1               	movwf	___lwdiv@divisor+1
  6848  0C6A  082F               	movf	sprintf@val+1,w
  6849  0C6B  00F3               	movwf	___lwdiv@dividend+1
  6850  0C6C  082E               	movf	sprintf@val,w
  6851  0C6D  00F2               	movwf	___lwdiv@dividend
  6852  0C6E  160A  118A  248B  120A  158A  	fcall	___lwdiv
  6853  0C73  0871               	movf	?___lwdiv+1,w
  6854  0C74  00FB               	movwf	___lwmod@dividend+1
  6855  0C75  0870               	movf	?___lwdiv,w
  6856  0C76  00FA               	movwf	___lwmod@dividend
  6857  0C77  120A  158A  2002  120A  158A  	fcall	___lwmod
  6858  0C7C  0878               	movf	?___lwmod,w
  6859  0C7D  3E30               	addlw	48
  6860  0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  6861  0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  6862  0C80  00A9               	movwf	??_sprintf+1
  6863  0C81  0829               	movf	??_sprintf+1,w
  6864  0C82  00B1               	movwf	sprintf@c
  6865                           
  6866                           ;doprnt.c: 1523: }
  6867                           ;doprnt.c: 1524: ((*sp++ = (c)));
  6868  0C83  0831               	movf	sprintf@c,w
  6869  0C84  00A8               	movwf	??_sprintf
  6870  0C85  0830               	movf	sprintf@sp,w
  6871  0C86  0084               	movwf	4
  6872  0C87  0828               	movf	??_sprintf,w
  6873  0C88  1383               	bcf	3,7	;select IRP bank0
  6874  0C89  0080               	movwf	0
  6875  0C8A  3001               	movlw	1
  6876  0C8B  00A8               	movwf	??_sprintf
  6877  0C8C  0828               	movf	??_sprintf,w
  6878  0C8D  07B0               	addwf	sprintf@sp,f
  6879  0C8E  2C4A               	goto	l2265
  6880  0C8F                     l2269:	
  6881                           ;doprnt.c: 1525: }
  6882                           ;doprnt.c: 1533: }
  6883                           ;doprnt.c: 1535: alldone:
  6884                           
  6885                           
  6886                           ;doprnt.c: 1538: *sp = 0;
  6887  0C8F  0830               	movf	sprintf@sp,w
  6888  0C90  0084               	movwf	4
  6889  0C91  1383               	bcf	3,7	;select IRP bank0
  6890  0C92  0180               	clrf	0
  6891  0C93  0008               	return
  6892  0C94                     __end_of_sprintf:	
  6893                           ;doprnt.c: 1540: return 0;
  6894                           ;	Return value of _sprintf is never used
  6895                           
  6896                           
  6897                           	psect	text21
  6898  0802                     __ptext21:	
  6899 ;; *************** function ___lwmod *****************
  6900 ;; Defined at:
  6901 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;  divisor         2    8[COMMON] unsigned int 
  6904 ;;  dividend        2   10[COMMON] unsigned int 
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;  counter         1   13[COMMON] unsigned char 
  6907 ;; Return value:  Size  Location     Type
  6908 ;;                  2    8[COMMON] unsigned int 
  6909 ;; Registers used:
  6910 ;;		wreg, status,2, status,0
  6911 ;; Tracked objects:
  6912 ;;		On entry : 0/0
  6913 ;;		On exit  : 0/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6916 ;;      Params:         4       0       0       0       0
  6917 ;;      Locals:         1       0       0       0       0
  6918 ;;      Temps:          1       0       0       0       0
  6919 ;;      Totals:         6       0       0       0       0
  6920 ;;Total ram usage:        6 bytes
  6921 ;; Hardware stack levels used:    1
  6922 ;; This function calls:
  6923 ;;		Nothing
  6924 ;; This function is called by:
  6925 ;;		_sprintf
  6926 ;; This function uses a non-reentrant model
  6927 ;;
  6928                           
  6929                           
  6930                           ;psect for function ___lwmod
  6931  0802                     ___lwmod:	
  6932                           
  6933                           ;incstack = 0
  6934                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6935  0802  0878               	movf	___lwmod@divisor,w
  6936  0803  0479               	iorwf	___lwmod@divisor+1,w
  6937  0804  1903               	btfsc	3,2
  6938  0805  282F               	goto	l2189
  6939  0806  01FD               	clrf	___lwmod@counter
  6940  0807  0AFD               	incf	___lwmod@counter,f
  6941  0808                     l2179:	
  6942  0808  1BF9               	btfsc	___lwmod@divisor+1,7
  6943  0809  2816               	goto	l2181
  6944  080A  3001               	movlw	1
  6945  080B                     u2755:	
  6946  080B  1003               	clrc
  6947  080C  0DF8               	rlf	___lwmod@divisor,f
  6948  080D  0DF9               	rlf	___lwmod@divisor+1,f
  6949  080E  3EFF               	addlw	-1
  6950  080F  1D03               	skipz
  6951  0810  280B               	goto	u2755
  6952  0811  3001               	movlw	1
  6953  0812  00FC               	movwf	??___lwmod
  6954  0813  087C               	movf	??___lwmod,w
  6955  0814  07FD               	addwf	___lwmod@counter,f
  6956  0815  2808               	goto	l2179
  6957  0816                     l2181:	
  6958  0816  0879               	movf	___lwmod@divisor+1,w
  6959  0817  027B               	subwf	___lwmod@dividend+1,w
  6960  0818  1D03               	skipz
  6961  0819  281C               	goto	u2775
  6962  081A  0878               	movf	___lwmod@divisor,w
  6963  081B  027A               	subwf	___lwmod@dividend,w
  6964  081C                     u2775:	
  6965  081C  1C03               	skipc
  6966  081D  2824               	goto	l2185
  6967  081E  0878               	movf	___lwmod@divisor,w
  6968  081F  02FA               	subwf	___lwmod@dividend,f
  6969  0820  0879               	movf	___lwmod@divisor+1,w
  6970  0821  1C03               	skipc
  6971  0822  03FB               	decf	___lwmod@dividend+1,f
  6972  0823  02FB               	subwf	___lwmod@dividend+1,f
  6973  0824                     l2185:	
  6974  0824  3001               	movlw	1
  6975  0825                     u2785:	
  6976  0825  1003               	clrc
  6977  0826  0CF9               	rrf	___lwmod@divisor+1,f
  6978  0827  0CF8               	rrf	___lwmod@divisor,f
  6979  0828  3EFF               	addlw	-1
  6980  0829  1D03               	skipz
  6981  082A  2825               	goto	u2785
  6982  082B  3001               	movlw	1
  6983  082C  02FD               	subwf	___lwmod@counter,f
  6984  082D  1D03               	btfss	3,2
  6985  082E  2816               	goto	l2181
  6986  082F                     l2189:	
  6987  082F  087B               	movf	___lwmod@dividend+1,w
  6988  0830  00F9               	movwf	?___lwmod+1
  6989  0831  087A               	movf	___lwmod@dividend,w
  6990  0832  00F8               	movwf	?___lwmod
  6991  0833  0008               	return
  6992  0834                     __end_of___lwmod:	
  6993                           
  6994                           	psect	text22
  6995  148B                     __ptext22:	
  6996 ;; *************** function ___lwdiv *****************
  6997 ;; Defined at:
  6998 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  6999 ;; Parameters:    Size  Location     Type
  7000 ;;  divisor         2    0[COMMON] unsigned int 
  7001 ;;  dividend        2    2[COMMON] unsigned int 
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;  quotient        2    5[COMMON] unsigned int 
  7004 ;;  counter         1    7[COMMON] unsigned char 
  7005 ;; Return value:  Size  Location     Type
  7006 ;;                  2    0[COMMON] unsigned int 
  7007 ;; Registers used:
  7008 ;;		wreg, status,2, status,0
  7009 ;; Tracked objects:
  7010 ;;		On entry : 0/0
  7011 ;;		On exit  : 0/0
  7012 ;;		Unchanged: 0/0
  7013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7014 ;;      Params:         4       0       0       0       0
  7015 ;;      Locals:         3       0       0       0       0
  7016 ;;      Temps:          1       0       0       0       0
  7017 ;;      Totals:         8       0       0       0       0
  7018 ;;Total ram usage:        8 bytes
  7019 ;; Hardware stack levels used:    1
  7020 ;; This function calls:
  7021 ;;		Nothing
  7022 ;; This function is called by:
  7023 ;;		_sprintf
  7024 ;; This function uses a non-reentrant model
  7025 ;;
  7026                           
  7027                           
  7028                           ;psect for function ___lwdiv
  7029  148B                     ___lwdiv:	
  7030                           
  7031                           ;incstack = 0
  7032                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7033  148B  01F5               	clrf	___lwdiv@quotient
  7034  148C  01F6               	clrf	___lwdiv@quotient+1
  7035  148D  0870               	movf	___lwdiv@divisor,w
  7036  148E  0471               	iorwf	___lwdiv@divisor+1,w
  7037  148F  1903               	btfsc	3,2
  7038  1490  2CC2               	goto	l2167
  7039  1491  01F7               	clrf	___lwdiv@counter
  7040  1492  0AF7               	incf	___lwdiv@counter,f
  7041  1493                     l2155:	
  7042  1493  1BF1               	btfsc	___lwdiv@divisor+1,7
  7043  1494  2CA1               	goto	l2157
  7044  1495  3001               	movlw	1
  7045  1496                     u2685:	
  7046  1496  1003               	clrc
  7047  1497  0DF0               	rlf	___lwdiv@divisor,f
  7048  1498  0DF1               	rlf	___lwdiv@divisor+1,f
  7049  1499  3EFF               	addlw	-1
  7050  149A  1D03               	skipz
  7051  149B  2C96               	goto	u2685
  7052  149C  3001               	movlw	1
  7053  149D  00F4               	movwf	??___lwdiv
  7054  149E  0874               	movf	??___lwdiv,w
  7055  149F  07F7               	addwf	___lwdiv@counter,f
  7056  14A0  2C93               	goto	l2155
  7057  14A1                     l2157:	
  7058  14A1  3001               	movlw	1
  7059  14A2                     u2705:	
  7060  14A2  1003               	clrc
  7061  14A3  0DF5               	rlf	___lwdiv@quotient,f
  7062  14A4  0DF6               	rlf	___lwdiv@quotient+1,f
  7063  14A5  3EFF               	addlw	-1
  7064  14A6  1D03               	skipz
  7065  14A7  2CA2               	goto	u2705
  7066  14A8  0871               	movf	___lwdiv@divisor+1,w
  7067  14A9  0273               	subwf	___lwdiv@dividend+1,w
  7068  14AA  1D03               	skipz
  7069  14AB  2CAE               	goto	u2715
  7070  14AC  0870               	movf	___lwdiv@divisor,w
  7071  14AD  0272               	subwf	___lwdiv@dividend,w
  7072  14AE                     u2715:	
  7073  14AE  1C03               	skipc
  7074  14AF  2CB7               	goto	l2163
  7075  14B0  0870               	movf	___lwdiv@divisor,w
  7076  14B1  02F2               	subwf	___lwdiv@dividend,f
  7077  14B2  0871               	movf	___lwdiv@divisor+1,w
  7078  14B3  1C03               	skipc
  7079  14B4  03F3               	decf	___lwdiv@dividend+1,f
  7080  14B5  02F3               	subwf	___lwdiv@dividend+1,f
  7081  14B6  1475               	bsf	___lwdiv@quotient,0
  7082  14B7                     l2163:	
  7083  14B7  3001               	movlw	1
  7084  14B8                     u2725:	
  7085  14B8  1003               	clrc
  7086  14B9  0CF1               	rrf	___lwdiv@divisor+1,f
  7087  14BA  0CF0               	rrf	___lwdiv@divisor,f
  7088  14BB  3EFF               	addlw	-1
  7089  14BC  1D03               	skipz
  7090  14BD  2CB8               	goto	u2725
  7091  14BE  3001               	movlw	1
  7092  14BF  02F7               	subwf	___lwdiv@counter,f
  7093  14C0  1D03               	btfss	3,2
  7094  14C1  2CA1               	goto	l2157
  7095  14C2                     l2167:	
  7096  14C2  0876               	movf	___lwdiv@quotient+1,w
  7097  14C3  00F1               	movwf	?___lwdiv+1
  7098  14C4  0875               	movf	___lwdiv@quotient,w
  7099  14C5  00F0               	movwf	?___lwdiv
  7100  14C6  0008               	return
  7101  14C7                     __end_of___lwdiv:	
  7102                           
  7103                           	psect	text23
  7104  1509                     __ptext23:	
  7105 ;; *************** function _Lcd_Text *****************
  7106 ;; Defined at:
  7107 ;;		line 74 in file "lcd_hd44780.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;  y               1    wreg     unsigned char 
  7110 ;;  x               1    3[COMMON] unsigned char 
  7111 ;;  buffer          2    4[COMMON] PTR unsigned char 
  7112 ;;		 -> STR_77(11), STR_76(16), STR_75(13), STR_74(14), 
  7113 ;;		 -> STR_73(14), STR_72(10), STR_71(17), STR_70(13), 
  7114 ;;		 -> STR_69(14), STR_68(14), STR_67(10), STR_66(16), 
  7115 ;;		 -> STR_65(14), STR_64(14), STR_63(14), STR_62(10), 
  7116 ;;		 -> STR_61(16), STR_60(13), STR_59(15), STR_58(14), 
  7117 ;;		 -> STR_57(10), STR_56(16), STR_55(13), STR_54(14), 
  7118 ;;		 -> STR_53(15), STR_52(7), STR_51(8), STR_50(15), 
  7119 ;;		 -> STR_49(6), STR_48(9), STR_47(15), ImprimirMenuLavado@aux(5), 
  7120 ;;		 -> STR_45(2), STR_44(2), STR_43(21), STR_42(21), 
  7121 ;;		 -> STR_41(21), STR_40(21), STR_39(21), STR_38(21), 
  7122 ;;		 -> STR_37(21), STR_36(21), STR_35(21), STR_32(2), 
  7123 ;;		 -> STR_31(2), STR_30(21), STR_29(21), STR_28(21), 
  7124 ;;		 -> STR_27(21), STR_26(21), STR_25(21), STR_24(21), 
  7125 ;;		 -> STR_23(21), STR_22(21), STR_19(2), STR_18(2), 
  7126 ;;		 -> STR_17(21), STR_16(21), STR_15(21), STR_14(21), 
  7127 ;;		 -> STR_13(21), STR_12(21), STR_11(21), STR_10(21), 
  7128 ;;		 -> STR_9(21), aux(20), STR_7(21), STR_6(21), 
  7129 ;;		 -> STR_5(21), main@aux(20), STR_3(21), STR_2(21), 
  7130 ;;		 -> STR_1(21), 
  7131 ;; Auto vars:     Size  Location     Type
  7132 ;;  y               1    7[COMMON] unsigned char 
  7133 ;;  data            1    8[COMMON] unsigned char 
  7134 ;; Return value:  Size  Location     Type
  7135 ;;                  1    wreg      void 
  7136 ;; Registers used:
  7137 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7138 ;; Tracked objects:
  7139 ;;		On entry : 0/0
  7140 ;;		On exit  : 0/0
  7141 ;;		Unchanged: 0/0
  7142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7143 ;;      Params:         3       0       0       0       0
  7144 ;;      Locals:         2       0       0       0       0
  7145 ;;      Temps:          1       0       0       0       0
  7146 ;;      Totals:         6       0       0       0       0
  7147 ;;Total ram usage:        6 bytes
  7148 ;; Hardware stack levels used:    1
  7149 ;; Hardware stack levels required when called:    1
  7150 ;; This function calls:
  7151 ;;		_Lcd_CharCP
  7152 ;;		_Lcd_Command
  7153 ;; This function is called by:
  7154 ;;		_main
  7155 ;;		_lavadoRapido
  7156 ;;		_lavadoLento
  7157 ;;		_lavadoDelicado
  7158 ;;		_ImprimirMenuLavado
  7159 ;;		_ImprimirMenuPrincipal
  7160 ;; This function uses a non-reentrant model
  7161 ;;
  7162                           
  7163                           
  7164                           ;psect for function _Lcd_Text
  7165  1509                     _Lcd_Text:	
  7166                           
  7167                           ;incstack = 0
  7168                           ; Regs used in _Lcd_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7169                           ;Lcd_Text@y stored from wreg
  7170  1509  00F7               	movwf	Lcd_Text@y
  7171                           
  7172                           ;lcd_hd44780.c: 75: unsigned char data;
  7173                           ;lcd_hd44780.c: 76: switch(y){
  7174  150A  2D1A               	goto	l2205
  7175  150B                     l2195:	
  7176                           ;lcd_hd44780.c: 77: case 1: data = (unsigned char)(127 + x); break;
  7177                           
  7178  150B  0873               	movf	Lcd_Text@x,w
  7179  150C  3E7F               	addlw	127
  7180  150D  2D16               	goto	L14
  7181  150E                     l2197:	
  7182                           ;lcd_hd44780.c: 78: case 2: data = (unsigned char)(191 + x); break;
  7183                           
  7184  150E  0873               	movf	Lcd_Text@x,w
  7185  150F  3EBF               	addlw	191
  7186  1510  2D16               	goto	L14
  7187  1511                     l2199:	
  7188                           ;lcd_hd44780.c: 79: case 3: data = (unsigned char)(147 + x); break;
  7189                           
  7190  1511  0873               	movf	Lcd_Text@x,w
  7191  1512  3E93               	addlw	147
  7192  1513  2D16               	goto	L14
  7193  1514                     l2201:	
  7194                           ;lcd_hd44780.c: 80: case 4: data = (unsigned char)(211 + x); break;
  7195                           
  7196  1514  0873               	movf	Lcd_Text@x,w
  7197  1515  3ED3               	addlw	211
  7198  1516                     L14:	
  7199  1516  00F6               	movwf	??_Lcd_Text
  7200  1517  0876               	movf	??_Lcd_Text,w
  7201  1518  00F8               	movwf	Lcd_Text@data
  7202                           
  7203                           ;lcd_hd44780.c: 81: default: break;}
  7204  1519  2D28               	goto	l2207
  7205  151A                     l2205:	
  7206  151A  0877               	movf	Lcd_Text@y,w
  7207                           
  7208                           ; Switch size 1, requested type "space"
  7209                           ; Number of cases is 4, Range of values is 1 to 4
  7210                           ; switch strategies available:
  7211                           ; Name         Instructions Cycles
  7212                           ; simple_byte           13     7 (average)
  7213                           ; direct_byte           23    11 (fixed)
  7214                           ; jumptable            263     9 (fixed)
  7215                           ;	Chosen strategy is simple_byte
  7216  151B  3A01               	xorlw	1	; case 1
  7217  151C  1903               	skipnz
  7218  151D  2D0B               	goto	l2195
  7219  151E  3A03               	xorlw	3	; case 2
  7220  151F  1903               	skipnz
  7221  1520  2D0E               	goto	l2197
  7222  1521  3A01               	xorlw	1	; case 3
  7223  1522  1903               	skipnz
  7224  1523  2D11               	goto	l2199
  7225  1524  3A07               	xorlw	7	; case 4
  7226  1525  1903               	skipnz
  7227  1526  2D14               	goto	l2201
  7228  1527  2D28               	goto	l2207
  7229  1528                     l2207:	
  7230                           
  7231                           ;lcd_hd44780.c: 82: Lcd_Command(data);
  7232  1528  0878               	movf	Lcd_Text@data,w
  7233  1529  120A  158A  20CD  160A  118A  	fcall	_Lcd_Command
  7234  152E                     l2213:	
  7235                           ;lcd_hd44780.c: 83: while(*buffer)
  7236                           
  7237  152E  0875               	movf	Lcd_Text@buffer+1,w
  7238  152F  1283               	bcf	3,5	;RP0=0, select bank0
  7239  1530  1303               	bcf	3,6	;RP1=0, select bank0
  7240  1531  00FF               	movwf	127
  7241  1532  0874               	movf	Lcd_Text@buffer,w
  7242  1533  0084               	movwf	4
  7243  1534  160A  118A  2000  160A  118A  	fcall	stringtab
  7244  1539  3A00               	xorlw	0
  7245  153A  1903               	btfsc	3,2
  7246  153B  0008               	return
  7247                           
  7248                           ;lcd_hd44780.c: 84: {
  7249                           ;lcd_hd44780.c: 85: Lcd_CharCP(*buffer);
  7250  153C  0875               	movf	Lcd_Text@buffer+1,w
  7251  153D  1283               	bcf	3,5	;RP0=0, select bank0
  7252  153E  1303               	bcf	3,6	;RP1=0, select bank0
  7253  153F  00FF               	movwf	127
  7254  1540  0874               	movf	Lcd_Text@buffer,w
  7255  1541  0084               	movwf	4
  7256  1542  160A  118A  2000  160A  118A  	fcall	stringtab
  7257  1547  120A  118A  2005  160A  118A  	fcall	_Lcd_CharCP
  7258                           
  7259                           ;lcd_hd44780.c: 86: buffer++;
  7260  154C  3001               	movlw	1
  7261  154D  07F4               	addwf	Lcd_Text@buffer,f
  7262  154E  1803               	skipnc
  7263  154F  0AF5               	incf	Lcd_Text@buffer+1,f
  7264  1550  2D2E               	goto	l2213
  7265  1551                     __end_of_Lcd_Text:	
  7266                           ;lcd_hd44780.c: 87: }
  7267                           ;lcd_hd44780.c: 88: return;
  7268                           
  7269                           
  7270                           	psect	text24
  7271  08CD                     __ptext24:	
  7272 ;; *************** function _Lcd_Command *****************
  7273 ;; Defined at:
  7274 ;;		line 130 in file "lcd_hd44780.c"
  7275 ;; Parameters:    Size  Location     Type
  7276 ;;  command         1    wreg     unsigned char 
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;  command         1    2[COMMON] unsigned char 
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  1    wreg      void 
  7281 ;; Registers used:
  7282 ;;		wreg, status,2, status,0
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7288 ;;      Params:         0       0       0       0       0
  7289 ;;      Locals:         1       0       0       0       0
  7290 ;;      Temps:          2       0       0       0       0
  7291 ;;      Totals:         3       0       0       0       0
  7292 ;;Total ram usage:        3 bytes
  7293 ;; Hardware stack levels used:    1
  7294 ;; This function calls:
  7295 ;;		Nothing
  7296 ;; This function is called by:
  7297 ;;		_main
  7298 ;;		_lavadoRapido
  7299 ;;		_lavadoLento
  7300 ;;		_lavadoDelicado
  7301 ;;		_ImprimirMenuLavado
  7302 ;;		_ImprimirMenuPrincipal
  7303 ;;		_Lcd_Init
  7304 ;;		_Lcd_Text
  7305 ;;		_Lcd_ConstText
  7306 ;;		_Lcd_WriteChar
  7307 ;; This function uses a non-reentrant model
  7308 ;;
  7309                           
  7310                           
  7311                           ;psect for function _Lcd_Command
  7312  08CD                     _Lcd_Command:	
  7313                           
  7314                           ;incstack = 0
  7315                           ; Regs used in _Lcd_Command: [wreg+status,2+status,0]
  7316                           ;Lcd_Command@command stored from wreg
  7317  08CD  00F2               	movwf	Lcd_Command@command
  7318                           
  7319                           ;lcd_hd44780.c: 131: PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  7320  08CE  1283               	bcf	3,5	;RP0=0, select bank0
  7321  08CF  1303               	bcf	3,6	;RP1=0, select bank0
  7322  08D0  1207               	bcf	7,4	;volatile
  7323  08D1  1287               	bcf	7,5	;volatile
  7324                           
  7325                           ;lcd_hd44780.c: 132: PORTCbits.RC0 = (unsigned char)((command & 0b10000000)>>7); PORTCbi
      +                          ts.RC6 = (unsigned char)((command & 0b01000000)>>6);
  7326  08D2  0872               	movf	Lcd_Command@command,w
  7327  08D3  00F0               	movwf	??_Lcd_Command
  7328  08D4  3007               	movlw	7
  7329  08D5                     u2515:	
  7330  08D5  1003               	clrc
  7331  08D6  0CF0               	rrf	??_Lcd_Command,f
  7332  08D7  3EFF               	addlw	-1
  7333  08D8  1D03               	skipz
  7334  08D9  28D5               	goto	u2515
  7335  08DA  3001               	movlw	1
  7336  08DB  0570               	andwf	??_Lcd_Command,w
  7337  08DC  00F1               	movwf	??_Lcd_Command+1
  7338  08DD  0807               	movf	7,w	;volatile
  7339  08DE  0671               	xorwf	??_Lcd_Command+1,w
  7340  08DF  39FE               	andlw	-2
  7341  08E0  0671               	xorwf	??_Lcd_Command+1,w
  7342  08E1  0087               	movwf	7	;volatile
  7343  08E2  0872               	movf	Lcd_Command@command,w
  7344  08E3  00F0               	movwf	??_Lcd_Command
  7345  08E4  3006               	movlw	6
  7346  08E5                     u2525:	
  7347  08E5  1003               	clrc
  7348  08E6  0CF0               	rrf	??_Lcd_Command,f
  7349  08E7  3EFF               	addlw	-1
  7350  08E8  1D03               	skipz
  7351  08E9  28E5               	goto	u2525
  7352  08EA  0870               	movf	??_Lcd_Command,w
  7353  08EB  3901               	andlw	1
  7354  08EC  00F1               	movwf	??_Lcd_Command+1
  7355  08ED  0EF1               	swapf	??_Lcd_Command+1,f
  7356  08EE  0DF1               	rlf	??_Lcd_Command+1,f
  7357  08EF  0DF1               	rlf	??_Lcd_Command+1,f
  7358  08F0  0807               	movf	7,w	;volatile
  7359  08F1  0671               	xorwf	??_Lcd_Command+1,w
  7360  08F2  39BF               	andlw	-65
  7361  08F3  0671               	xorwf	??_Lcd_Command+1,w
  7362  08F4  0087               	movwf	7	;volatile
  7363                           
  7364                           ;lcd_hd44780.c: 133: PORTCbits.RC7 = (unsigned char)((command & 0b00100000)>>5); PORTCbi
      +                          ts.RC3 = (unsigned char)((command & 0b00010000)>>4);
  7365  08F5  0872               	movf	Lcd_Command@command,w
  7366  08F6  00F0               	movwf	??_Lcd_Command
  7367  08F7  3005               	movlw	5
  7368  08F8                     u2535:	
  7369  08F8  1003               	clrc
  7370  08F9  0CF0               	rrf	??_Lcd_Command,f
  7371  08FA  3EFF               	addlw	-1
  7372  08FB  1D03               	skipz
  7373  08FC  28F8               	goto	u2535
  7374  08FD  0870               	movf	??_Lcd_Command,w
  7375  08FE  3901               	andlw	1
  7376  08FF  00F1               	movwf	??_Lcd_Command+1
  7377  0900  0CF1               	rrf	??_Lcd_Command+1,f
  7378  0901  0CF1               	rrf	??_Lcd_Command+1,f
  7379  0902  0807               	movf	7,w	;volatile
  7380  0903  0671               	xorwf	??_Lcd_Command+1,w
  7381  0904  397F               	andlw	-129
  7382  0905  0671               	xorwf	??_Lcd_Command+1,w
  7383  0906  0087               	movwf	7	;volatile
  7384  0907  0872               	movf	Lcd_Command@command,w
  7385  0908  00F0               	movwf	??_Lcd_Command
  7386  0909  3004               	movlw	4
  7387  090A                     u2545:	
  7388  090A  1003               	clrc
  7389  090B  0CF0               	rrf	??_Lcd_Command,f
  7390  090C  3EFF               	addlw	-1
  7391  090D  1D03               	skipz
  7392  090E  290A               	goto	u2545
  7393  090F  0870               	movf	??_Lcd_Command,w
  7394  0910  3901               	andlw	1
  7395  0911  00F1               	movwf	??_Lcd_Command+1
  7396  0912  0DF1               	rlf	??_Lcd_Command+1,f
  7397  0913  0DF1               	rlf	??_Lcd_Command+1,f
  7398  0914  0DF1               	rlf	??_Lcd_Command+1,f
  7399  0915  0807               	movf	7,w	;volatile
  7400  0916  0671               	xorwf	??_Lcd_Command+1,w
  7401  0917  39F7               	andlw	-9
  7402  0918  0671               	xorwf	??_Lcd_Command+1,w
  7403  0919  0087               	movwf	7	;volatile
  7404                           
  7405                           ;lcd_hd44780.c: 135: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)))
      +                          ; PORTCbits.RC4 = 0;
  7406  091A  1607               	bsf	7,4	;volatile
  7407  091B  291C               	nop2	;2 cycle nop
  7408  091C  291D               	nop2	;2 cycle nop
  7409  091D  0000               	nop
  7410  091E  1283               	bcf	3,5	;RP0=0, select bank0
  7411  091F  1303               	bcf	3,6	;RP1=0, select bank0
  7412  0920  1207               	bcf	7,4	;volatile
  7413                           
  7414                           ;lcd_hd44780.c: 136: PORTCbits.RC0 = (unsigned char)((command & 0b00001000)>>3); PORTCbi
      +                          ts.RC6 = (unsigned char)((command & 0b00000100)>>2);
  7415  0921  0872               	movf	Lcd_Command@command,w
  7416  0922  00F0               	movwf	??_Lcd_Command
  7417  0923  3003               	movlw	3
  7418  0924                     u2555:	
  7419  0924  1003               	clrc
  7420  0925  0CF0               	rrf	??_Lcd_Command,f
  7421  0926  3EFF               	addlw	-1
  7422  0927  1D03               	skipz
  7423  0928  2924               	goto	u2555
  7424  0929  3001               	movlw	1
  7425  092A  0570               	andwf	??_Lcd_Command,w
  7426  092B  00F1               	movwf	??_Lcd_Command+1
  7427  092C  0807               	movf	7,w	;volatile
  7428  092D  0671               	xorwf	??_Lcd_Command+1,w
  7429  092E  39FE               	andlw	-2
  7430  092F  0671               	xorwf	??_Lcd_Command+1,w
  7431  0930  0087               	movwf	7	;volatile
  7432  0931  0872               	movf	Lcd_Command@command,w
  7433  0932  00F0               	movwf	??_Lcd_Command
  7434  0933  3002               	movlw	2
  7435  0934                     u2565:	
  7436  0934  1003               	clrc
  7437  0935  0CF0               	rrf	??_Lcd_Command,f
  7438  0936  3EFF               	addlw	-1
  7439  0937  1D03               	skipz
  7440  0938  2934               	goto	u2565
  7441  0939  0870               	movf	??_Lcd_Command,w
  7442  093A  3901               	andlw	1
  7443  093B  00F1               	movwf	??_Lcd_Command+1
  7444  093C  0EF1               	swapf	??_Lcd_Command+1,f
  7445  093D  0DF1               	rlf	??_Lcd_Command+1,f
  7446  093E  0DF1               	rlf	??_Lcd_Command+1,f
  7447  093F  0807               	movf	7,w	;volatile
  7448  0940  0671               	xorwf	??_Lcd_Command+1,w
  7449  0941  39BF               	andlw	-65
  7450  0942  0671               	xorwf	??_Lcd_Command+1,w
  7451  0943  0087               	movwf	7	;volatile
  7452                           
  7453                           ;lcd_hd44780.c: 137: PORTCbits.RC7 = (unsigned char)((command & 0b00000010)>>1); PORTCbi
      +                          ts.RC3 = (unsigned char)((command & 0b00000001));
  7454  0944  0872               	movf	Lcd_Command@command,w
  7455  0945  00F0               	movwf	??_Lcd_Command
  7456  0946  1003               	clrc
  7457  0947  0C70               	rrf	??_Lcd_Command,w
  7458  0948  3901               	andlw	1
  7459  0949  00F1               	movwf	??_Lcd_Command+1
  7460  094A  0CF1               	rrf	??_Lcd_Command+1,f
  7461  094B  0CF1               	rrf	??_Lcd_Command+1,f
  7462  094C  0807               	movf	7,w	;volatile
  7463  094D  0671               	xorwf	??_Lcd_Command+1,w
  7464  094E  397F               	andlw	-129
  7465  094F  0671               	xorwf	??_Lcd_Command+1,w
  7466  0950  0087               	movwf	7	;volatile
  7467  0951  0872               	movf	Lcd_Command@command,w
  7468  0952  3901               	andlw	1
  7469  0953  00F0               	movwf	??_Lcd_Command
  7470  0954  0DF0               	rlf	??_Lcd_Command,f
  7471  0955  0DF0               	rlf	??_Lcd_Command,f
  7472  0956  0DF0               	rlf	??_Lcd_Command,f
  7473  0957  0807               	movf	7,w	;volatile
  7474  0958  0670               	xorwf	??_Lcd_Command,w
  7475  0959  39F7               	andlw	-9
  7476  095A  0670               	xorwf	??_Lcd_Command,w
  7477  095B  0087               	movwf	7	;volatile
  7478                           
  7479                           ;lcd_hd44780.c: 139: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)))
      +                          ; PORTCbits.RC4 = 0;
  7480  095C  1607               	bsf	7,4	;volatile
  7481  095D  295E               	nop2	;2 cycle nop
  7482  095E  295F               	nop2	;2 cycle nop
  7483  095F  0000               	nop
  7484  0960  1283               	bcf	3,5	;RP0=0, select bank0
  7485  0961  1303               	bcf	3,6	;RP1=0, select bank0
  7486  0962  1207               	bcf	7,4	;volatile
  7487                           
  7488                           ;lcd_hd44780.c: 140: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7489  0963  3008               	movlw	8
  7490  0964  00F1               	movwf	??_Lcd_Command+1
  7491  0965  3023               	movlw	35
  7492  0966  00F0               	movwf	??_Lcd_Command
  7493  0967                     u4097:	
  7494  0967  0BF0               	decfsz	??_Lcd_Command,f
  7495  0968  2967               	goto	u4097
  7496  0969  0BF1               	decfsz	??_Lcd_Command+1,f
  7497  096A  2967               	goto	u4097
  7498  096B  0008               	return
  7499  096C                     __end_of_Lcd_Command:	
  7500                           
  7501                           	psect	text25
  7502  0005                     __ptext25:	
  7503 ;; *************** function _Lcd_CharCP *****************
  7504 ;; Defined at:
  7505 ;;		line 113 in file "lcd_hd44780.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;  c               1    wreg     unsigned char 
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;  c               1    2[COMMON] unsigned char 
  7510 ;; Return value:  Size  Location     Type
  7511 ;;                  1    wreg      void 
  7512 ;; Registers used:
  7513 ;;		wreg, status,2, status,0
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7519 ;;      Params:         0       0       0       0       0
  7520 ;;      Locals:         1       0       0       0       0
  7521 ;;      Temps:          2       0       0       0       0
  7522 ;;      Totals:         3       0       0       0       0
  7523 ;;Total ram usage:        3 bytes
  7524 ;; Hardware stack levels used:    1
  7525 ;; This function calls:
  7526 ;;		Nothing
  7527 ;; This function is called by:
  7528 ;;		_Lcd_Text
  7529 ;;		_Lcd_ConstText
  7530 ;;		_Lcd_WriteChar
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           
  7535                           ;psect for function _Lcd_CharCP
  7536  0005                     _Lcd_CharCP:	
  7537                           
  7538                           ;incstack = 0
  7539                           ; Regs used in _Lcd_CharCP: [wreg+status,2+status,0]
  7540                           ;Lcd_CharCP@c stored from wreg
  7541  0005  00F2               	movwf	Lcd_CharCP@c
  7542                           
  7543                           ;lcd_hd44780.c: 114: PORTCbits.RC4 = 0; PORTCbits.RC5 = 1;
  7544  0006  1283               	bcf	3,5	;RP0=0, select bank0
  7545  0007  1303               	bcf	3,6	;RP1=0, select bank0
  7546  0008  1207               	bcf	7,4	;volatile
  7547  0009  1687               	bsf	7,5	;volatile
  7548                           
  7549                           ;lcd_hd44780.c: 115: PORTCbits.RC0 = (unsigned char)((c & 0b10000000)>>7); PORTCbits.RC6
      +                           = (unsigned char)((c & 0b01000000)>>6);
  7550  000A  0872               	movf	Lcd_CharCP@c,w
  7551  000B  00F0               	movwf	??_Lcd_CharCP
  7552  000C  3007               	movlw	7
  7553  000D                     u2615:	
  7554  000D  1003               	clrc
  7555  000E  0CF0               	rrf	??_Lcd_CharCP,f
  7556  000F  3EFF               	addlw	-1
  7557  0010  1D03               	skipz
  7558  0011  280D               	goto	u2615
  7559  0012  3001               	movlw	1
  7560  0013  0570               	andwf	??_Lcd_CharCP,w
  7561  0014  00F1               	movwf	??_Lcd_CharCP+1
  7562  0015  0807               	movf	7,w	;volatile
  7563  0016  0671               	xorwf	??_Lcd_CharCP+1,w
  7564  0017  39FE               	andlw	-2
  7565  0018  0671               	xorwf	??_Lcd_CharCP+1,w
  7566  0019  0087               	movwf	7	;volatile
  7567  001A  0872               	movf	Lcd_CharCP@c,w
  7568  001B  00F0               	movwf	??_Lcd_CharCP
  7569  001C  3006               	movlw	6
  7570  001D                     u2625:	
  7571  001D  1003               	clrc
  7572  001E  0CF0               	rrf	??_Lcd_CharCP,f
  7573  001F  3EFF               	addlw	-1
  7574  0020  1D03               	skipz
  7575  0021  281D               	goto	u2625
  7576  0022  0870               	movf	??_Lcd_CharCP,w
  7577  0023  3901               	andlw	1
  7578  0024  00F1               	movwf	??_Lcd_CharCP+1
  7579  0025  0EF1               	swapf	??_Lcd_CharCP+1,f
  7580  0026  0DF1               	rlf	??_Lcd_CharCP+1,f
  7581  0027  0DF1               	rlf	??_Lcd_CharCP+1,f
  7582  0028  0807               	movf	7,w	;volatile
  7583  0029  0671               	xorwf	??_Lcd_CharCP+1,w
  7584  002A  39BF               	andlw	-65
  7585  002B  0671               	xorwf	??_Lcd_CharCP+1,w
  7586  002C  0087               	movwf	7	;volatile
  7587                           
  7588                           ;lcd_hd44780.c: 116: PORTCbits.RC7 = (unsigned char)((c & 0b00100000)>>5); PORTCbits.RC3
      +                           = (unsigned char)((c & 0b00010000)>>4);
  7589  002D  0872               	movf	Lcd_CharCP@c,w
  7590  002E  00F0               	movwf	??_Lcd_CharCP
  7591  002F  3005               	movlw	5
  7592  0030                     u2635:	
  7593  0030  1003               	clrc
  7594  0031  0CF0               	rrf	??_Lcd_CharCP,f
  7595  0032  3EFF               	addlw	-1
  7596  0033  1D03               	skipz
  7597  0034  2830               	goto	u2635
  7598  0035  0870               	movf	??_Lcd_CharCP,w
  7599  0036  3901               	andlw	1
  7600  0037  00F1               	movwf	??_Lcd_CharCP+1
  7601  0038  0CF1               	rrf	??_Lcd_CharCP+1,f
  7602  0039  0CF1               	rrf	??_Lcd_CharCP+1,f
  7603  003A  0807               	movf	7,w	;volatile
  7604  003B  0671               	xorwf	??_Lcd_CharCP+1,w
  7605  003C  397F               	andlw	-129
  7606  003D  0671               	xorwf	??_Lcd_CharCP+1,w
  7607  003E  0087               	movwf	7	;volatile
  7608  003F  0872               	movf	Lcd_CharCP@c,w
  7609  0040  00F0               	movwf	??_Lcd_CharCP
  7610  0041  3004               	movlw	4
  7611  0042                     u2645:	
  7612  0042  1003               	clrc
  7613  0043  0CF0               	rrf	??_Lcd_CharCP,f
  7614  0044  3EFF               	addlw	-1
  7615  0045  1D03               	skipz
  7616  0046  2842               	goto	u2645
  7617  0047  0870               	movf	??_Lcd_CharCP,w
  7618  0048  3901               	andlw	1
  7619  0049  00F1               	movwf	??_Lcd_CharCP+1
  7620  004A  0DF1               	rlf	??_Lcd_CharCP+1,f
  7621  004B  0DF1               	rlf	??_Lcd_CharCP+1,f
  7622  004C  0DF1               	rlf	??_Lcd_CharCP+1,f
  7623  004D  0807               	movf	7,w	;volatile
  7624  004E  0671               	xorwf	??_Lcd_CharCP+1,w
  7625  004F  39F7               	andlw	-9
  7626  0050  0671               	xorwf	??_Lcd_CharCP+1,w
  7627  0051  0087               	movwf	7	;volatile
  7628                           
  7629                           ;lcd_hd44780.c: 118: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)))
      +                          ; PORTCbits.RC4 = 0;
  7630  0052  1607               	bsf	7,4	;volatile
  7631  0053  2854               	nop2	;2 cycle nop
  7632  0054  2855               	nop2	;2 cycle nop
  7633  0055  0000               	nop
  7634  0056  1283               	bcf	3,5	;RP0=0, select bank0
  7635  0057  1303               	bcf	3,6	;RP1=0, select bank0
  7636  0058  1207               	bcf	7,4	;volatile
  7637                           
  7638                           ;lcd_hd44780.c: 119: PORTCbits.RC0 = (unsigned char)((c & 0b00001000)>>3); PORTCbits.RC6
      +                           = (unsigned char)((c & 0b00000100)>>2);
  7639  0059  0872               	movf	Lcd_CharCP@c,w
  7640  005A  00F0               	movwf	??_Lcd_CharCP
  7641  005B  3003               	movlw	3
  7642  005C                     u2655:	
  7643  005C  1003               	clrc
  7644  005D  0CF0               	rrf	??_Lcd_CharCP,f
  7645  005E  3EFF               	addlw	-1
  7646  005F  1D03               	skipz
  7647  0060  285C               	goto	u2655
  7648  0061  3001               	movlw	1
  7649  0062  0570               	andwf	??_Lcd_CharCP,w
  7650  0063  00F1               	movwf	??_Lcd_CharCP+1
  7651  0064  0807               	movf	7,w	;volatile
  7652  0065  0671               	xorwf	??_Lcd_CharCP+1,w
  7653  0066  39FE               	andlw	-2
  7654  0067  0671               	xorwf	??_Lcd_CharCP+1,w
  7655  0068  0087               	movwf	7	;volatile
  7656  0069  0872               	movf	Lcd_CharCP@c,w
  7657  006A  00F0               	movwf	??_Lcd_CharCP
  7658  006B  3002               	movlw	2
  7659  006C                     u2665:	
  7660  006C  1003               	clrc
  7661  006D  0CF0               	rrf	??_Lcd_CharCP,f
  7662  006E  3EFF               	addlw	-1
  7663  006F  1D03               	skipz
  7664  0070  286C               	goto	u2665
  7665  0071  0870               	movf	??_Lcd_CharCP,w
  7666  0072  3901               	andlw	1
  7667  0073  00F1               	movwf	??_Lcd_CharCP+1
  7668  0074  0EF1               	swapf	??_Lcd_CharCP+1,f
  7669  0075  0DF1               	rlf	??_Lcd_CharCP+1,f
  7670  0076  0DF1               	rlf	??_Lcd_CharCP+1,f
  7671  0077  0807               	movf	7,w	;volatile
  7672  0078  0671               	xorwf	??_Lcd_CharCP+1,w
  7673  0079  39BF               	andlw	-65
  7674  007A  0671               	xorwf	??_Lcd_CharCP+1,w
  7675  007B  0087               	movwf	7	;volatile
  7676                           
  7677                           ;lcd_hd44780.c: 120: PORTCbits.RC7 = (unsigned char)((c & 0b00000010)>>1); PORTCbits.RC3
      +                           = (unsigned char)((c & 0b00000001));
  7678  007C  0872               	movf	Lcd_CharCP@c,w
  7679  007D  00F0               	movwf	??_Lcd_CharCP
  7680  007E  1003               	clrc
  7681  007F  0C70               	rrf	??_Lcd_CharCP,w
  7682  0080  3901               	andlw	1
  7683  0081  00F1               	movwf	??_Lcd_CharCP+1
  7684  0082  0CF1               	rrf	??_Lcd_CharCP+1,f
  7685  0083  0CF1               	rrf	??_Lcd_CharCP+1,f
  7686  0084  0807               	movf	7,w	;volatile
  7687  0085  0671               	xorwf	??_Lcd_CharCP+1,w
  7688  0086  397F               	andlw	-129
  7689  0087  0671               	xorwf	??_Lcd_CharCP+1,w
  7690  0088  0087               	movwf	7	;volatile
  7691  0089  0872               	movf	Lcd_CharCP@c,w
  7692  008A  3901               	andlw	1
  7693  008B  00F0               	movwf	??_Lcd_CharCP
  7694  008C  0DF0               	rlf	??_Lcd_CharCP,f
  7695  008D  0DF0               	rlf	??_Lcd_CharCP,f
  7696  008E  0DF0               	rlf	??_Lcd_CharCP,f
  7697  008F  0807               	movf	7,w	;volatile
  7698  0090  0670               	xorwf	??_Lcd_CharCP,w
  7699  0091  39F7               	andlw	-9
  7700  0092  0670               	xorwf	??_Lcd_CharCP,w
  7701  0093  0087               	movwf	7	;volatile
  7702                           
  7703                           ;lcd_hd44780.c: 122: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)))
      +                          ; PORTCbits.RC4 = 0;
  7704  0094  1607               	bsf	7,4	;volatile
  7705  0095  2896               	nop2	;2 cycle nop
  7706  0096  2897               	nop2	;2 cycle nop
  7707  0097  0000               	nop
  7708  0098  1283               	bcf	3,5	;RP0=0, select bank0
  7709  0099  1303               	bcf	3,6	;RP1=0, select bank0
  7710  009A  1207               	bcf	7,4	;volatile
  7711                           
  7712                           ;lcd_hd44780.c: 123: _delay((unsigned long)((5)*(4000000/4000000.0))); _delay((unsigned 
      +                          long)((5500)*(4000000/4000000.0)));
  7713  009B  289C               	nop2	;2 cycle nop
  7714  009C  289D               	nop2	;2 cycle nop
  7715  009D  0000               	nop
  7716  009E  3008               	movlw	8
  7717  009F  00F1               	movwf	??_Lcd_CharCP+1
  7718  00A0  3023               	movlw	35
  7719  00A1  00F0               	movwf	??_Lcd_CharCP
  7720  00A2                     u4107:	
  7721  00A2  0BF0               	decfsz	??_Lcd_CharCP,f
  7722  00A3  28A2               	goto	u4107
  7723  00A4  0BF1               	decfsz	??_Lcd_CharCP+1,f
  7724  00A5  28A2               	goto	u4107
  7725  00A6  0008               	return
  7726  00A7                     __end_of_Lcd_CharCP:	
  7727                           
  7728                           	psect	text26
  7729  141D                     __ptext26:	
  7730 ;; *************** function _Digital_Initialize *****************
  7731 ;; Defined at:
  7732 ;;		line 378 in file "main.c"
  7733 ;; Parameters:    Size  Location     Type
  7734 ;;		None
  7735 ;; Auto vars:     Size  Location     Type
  7736 ;;		None
  7737 ;; Return value:  Size  Location     Type
  7738 ;;                  1    wreg      void 
  7739 ;; Registers used:
  7740 ;;		wreg
  7741 ;; Tracked objects:
  7742 ;;		On entry : 0/0
  7743 ;;		On exit  : 0/0
  7744 ;;		Unchanged: 0/0
  7745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7746 ;;      Params:         0       0       0       0       0
  7747 ;;      Locals:         0       0       0       0       0
  7748 ;;      Temps:          0       0       0       0       0
  7749 ;;      Totals:         0       0       0       0       0
  7750 ;;Total ram usage:        0 bytes
  7751 ;; Hardware stack levels used:    1
  7752 ;; This function calls:
  7753 ;;		Nothing
  7754 ;; This function is called by:
  7755 ;;		_main
  7756 ;; This function uses a non-reentrant model
  7757 ;;
  7758                           
  7759                           
  7760                           ;psect for function _Digital_Initialize
  7761  141D                     _Digital_Initialize:	
  7762                           
  7763                           ;main.c: 380: TRISBbits.TRISB0 = 1;
  7764                           
  7765                           ;incstack = 0
  7766                           ; Regs used in _Digital_Initialize: [wreg]
  7767  141D  1683               	bsf	3,5	;RP0=1, select bank1
  7768  141E  1303               	bcf	3,6	;RP1=0, select bank1
  7769  141F  1406               	bsf	6,0	;volatile
  7770                           
  7771                           ;main.c: 381: TRISBbits.TRISB1 = 1;
  7772  1420  1486               	bsf	6,1	;volatile
  7773                           
  7774                           ;main.c: 382: TRISBbits.TRISB2 = 1;
  7775  1421  1506               	bsf	6,2	;volatile
  7776                           
  7777                           ;main.c: 383: TRISBbits.TRISB3 = 1;
  7778  1422  1586               	bsf	6,3	;volatile
  7779                           
  7780                           ;main.c: 386: ADCON1 = 7;
  7781  1423  3007               	movlw	7
  7782  1424  009F               	movwf	31	;volatile
  7783                           
  7784                           ;main.c: 387: TRISAbits.TRISA0 = 0;
  7785  1425  1005               	bcf	5,0	;volatile
  7786                           
  7787                           ;main.c: 388: TRISAbits.TRISA1 = 0;
  7788  1426  1085               	bcf	5,1	;volatile
  7789                           
  7790                           ;main.c: 389: TRISAbits.TRISA2 = 0;
  7791  1427  1105               	bcf	5,2	;volatile
  7792                           
  7793                           ;main.c: 390: TRISAbits.TRISA3 = 0;
  7794  1428  1185               	bcf	5,3	;volatile
  7795                           
  7796                           ;main.c: 393: TRISDbits.TRISD0 = 0;
  7797  1429  1008               	bcf	8,0	;volatile
  7798                           
  7799                           ;main.c: 394: TRISDbits.TRISD1 = 0;
  7800  142A  1088               	bcf	8,1	;volatile
  7801                           
  7802                           ;main.c: 397: TRISAbits.TRISA5 = 0;
  7803  142B  1285               	bcf	5,5	;volatile
  7804  142C  0008               	return
  7805  142D                     __end_of_Digital_Initialize:	
  7806                           
  7807                           	psect	text27
  7808  1462                     __ptext27:	
  7809 ;; *************** function _ADC_Read *****************
  7810 ;; Defined at:
  7811 ;;		line 407 in file "main.c"
  7812 ;; Parameters:    Size  Location     Type
  7813 ;;  channel         1    wreg     unsigned char 
  7814 ;; Auto vars:     Size  Location     Type
  7815 ;;  channel         1    4[COMMON] unsigned char 
  7816 ;; Return value:  Size  Location     Type
  7817 ;;                  2    0[COMMON] unsigned int 
  7818 ;; Registers used:
  7819 ;;		wreg, status,2, status,0
  7820 ;; Tracked objects:
  7821 ;;		On entry : 0/0
  7822 ;;		On exit  : 0/0
  7823 ;;		Unchanged: 0/0
  7824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7825 ;;      Params:         2       0       0       0       0
  7826 ;;      Locals:         1       0       0       0       0
  7827 ;;      Temps:          2       0       0       0       0
  7828 ;;      Totals:         5       0       0       0       0
  7829 ;;Total ram usage:        5 bytes
  7830 ;; Hardware stack levels used:    1
  7831 ;; This function calls:
  7832 ;;		Nothing
  7833 ;; This function is called by:
  7834 ;;		_main
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838                           
  7839                           ;psect for function _ADC_Read
  7840  1462                     _ADC_Read:	
  7841                           
  7842                           ;incstack = 0
  7843                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  7844                           ;ADC_Read@channel stored from wreg
  7845  1462  00F4               	movwf	ADC_Read@channel
  7846                           
  7847                           ;main.c: 409: ADCON0 &= 0x11000101;
  7848  1463  3001               	movlw	1
  7849  1464  00F2               	movwf	??_ADC_Read
  7850  1465  0872               	movf	??_ADC_Read,w
  7851  1466  1283               	bcf	3,5	;RP0=0, select bank0
  7852  1467  1303               	bcf	3,6	;RP1=0, select bank0
  7853  1468  059F               	andwf	31,f	;volatile
  7854                           
  7855                           ;main.c: 410: ADCON0 |= channel<<3;
  7856  1469  0874               	movf	ADC_Read@channel,w
  7857  146A  00F2               	movwf	??_ADC_Read
  7858  146B  3002               	movlw	2
  7859  146C                     u3125:	
  7860  146C  1003               	clrc
  7861  146D  0DF2               	rlf	??_ADC_Read,f
  7862  146E  3EFF               	addlw	-1
  7863  146F  1D03               	skipz
  7864  1470  2C6C               	goto	u3125
  7865  1471  1003               	clrc
  7866  1472  0D72               	rlf	??_ADC_Read,w
  7867  1473  00F3               	movwf	??_ADC_Read+1
  7868  1474  0873               	movf	??_ADC_Read+1,w
  7869  1475  049F               	iorwf	31,f	;volatile
  7870                           
  7871                           ;main.c: 411: _delay((unsigned long)((2)*(4000000/4000.0)));
  7872  1476  3003               	movlw	3
  7873  1477  00F3               	movwf	??_ADC_Read+1
  7874  1478  3097               	movlw	151
  7875  1479  00F2               	movwf	??_ADC_Read
  7876  147A                     u4117:	
  7877  147A  0BF2               	decfsz	??_ADC_Read,f
  7878  147B  2C7A               	goto	u4117
  7879  147C  0BF3               	decfsz	??_ADC_Read+1,f
  7880  147D  2C7A               	goto	u4117
  7881  147E  2C7F               	nop2
  7882                           
  7883                           ;main.c: 412: GO_nDONE = 1;
  7884  147F  1283               	bcf	3,5	;RP0=0, select bank0
  7885  1480  1303               	bcf	3,6	;RP1=0, select bank0
  7886  1481  151F               	bsf	31,2	;volatile
  7887  1482                     l220:	
  7888                           ;main.c: 413: while(GO_nDONE);
  7889                           
  7890  1482  191F               	btfsc	31,2	;volatile
  7891  1483  2C82               	goto	l220
  7892                           
  7893                           ;main.c: 414: return ((ADRESH<<8)+ADRESL);
  7894  1484  081E               	movf	30,w	;volatile
  7895  1485  00F1               	movwf	?_ADC_Read+1
  7896  1486  1683               	bsf	3,5	;RP0=1, select bank1
  7897  1487  1303               	bcf	3,6	;RP1=0, select bank1
  7898  1488  081E               	movf	30,w	;volatile
  7899  1489  00F0               	movwf	?_ADC_Read
  7900  148A  0008               	return
  7901  148B                     __end_of_ADC_Read:	
  7902                           
  7903                           	psect	text28
  7904  13F8                     __ptext28:	
  7905 ;; *************** function _ADC_Initialize *****************
  7906 ;; Defined at:
  7907 ;;		line 400 in file "main.c"
  7908 ;; Parameters:    Size  Location     Type
  7909 ;;		None
  7910 ;; Auto vars:     Size  Location     Type
  7911 ;;		None
  7912 ;; Return value:  Size  Location     Type
  7913 ;;                  1    wreg      void 
  7914 ;; Registers used:
  7915 ;;		None
  7916 ;; Tracked objects:
  7917 ;;		On entry : 0/0
  7918 ;;		On exit  : 0/0
  7919 ;;		Unchanged: 0/0
  7920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7921 ;;      Params:         0       0       0       0       0
  7922 ;;      Locals:         0       0       0       0       0
  7923 ;;      Temps:          0       0       0       0       0
  7924 ;;      Totals:         0       0       0       0       0
  7925 ;;Total ram usage:        0 bytes
  7926 ;; Hardware stack levels used:    1
  7927 ;; This function calls:
  7928 ;;		Nothing
  7929 ;; This function is called by:
  7930 ;;		_main
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934                           
  7935                           ;psect for function _ADC_Initialize
  7936  13F8                     _ADC_Initialize:	
  7937                           
  7938                           ;main.c: 401: ADCON0bits.ADCS0 = 1;
  7939                           
  7940                           ;incstack = 0
  7941                           ; Regs used in _ADC_Initialize: []
  7942  13F8  1283               	bcf	3,5	;RP0=0, select bank0
  7943  13F9  1303               	bcf	3,6	;RP1=0, select bank0
  7944  13FA  171F               	bsf	31,6	;volatile
  7945                           
  7946                           ;main.c: 402: ADCON0bits.ADON = 1;
  7947  13FB  141F               	bsf	31,0	;volatile
  7948                           
  7949                           ;main.c: 403: ADCON1bits.ADFM = 1;
  7950  13FC  1683               	bsf	3,5	;RP0=1, select bank1
  7951  13FD  1303               	bcf	3,6	;RP1=0, select bank1
  7952  13FE  179F               	bsf	31,7	;volatile
  7953                           
  7954                           ;main.c: 404: ADCON1bits.ADCS2 = 1;
  7955  13FF  171F               	bsf	31,6	;volatile
  7956  1400  0008               	return
  7957  1401                     __end_of_ADC_Initialize:	
  7958  007E                     btemp	set	126	;btemp
  7959  007E                     wtemp0	set	126


Data Sizes:
    Strings     324
    Constant    10
    Data        5
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     64      72
    BANK1            80     26      47
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_46(CODE[11]), STR_34(CODE[17]), STR_33(CODE[17]), STR_21(CODE[17]), 
		 -> STR_20(CODE[17]), STR_8(CODE[17]), STR_4(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> ImprimirMenuLavado@aux(BANK0[5]), aux(BANK1[20]), main@aux(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Text@buffer	PTR unsigned char  size(2) Largest target is 21
		 -> STR_77(CODE[11]), STR_76(CODE[16]), STR_75(CODE[13]), STR_74(CODE[14]), 
		 -> STR_73(CODE[14]), STR_72(CODE[10]), STR_71(CODE[17]), STR_70(CODE[13]), 
		 -> STR_69(CODE[14]), STR_68(CODE[14]), STR_67(CODE[10]), STR_66(CODE[16]), 
		 -> STR_65(CODE[14]), STR_64(CODE[14]), STR_63(CODE[14]), STR_62(CODE[10]), 
		 -> STR_61(CODE[16]), STR_60(CODE[13]), STR_59(CODE[15]), STR_58(CODE[14]), 
		 -> STR_57(CODE[10]), STR_56(CODE[16]), STR_55(CODE[13]), STR_54(CODE[14]), 
		 -> STR_53(CODE[15]), STR_52(CODE[7]), STR_51(CODE[8]), STR_50(CODE[15]), 
		 -> STR_49(CODE[6]), STR_48(CODE[9]), STR_47(CODE[15]), ImprimirMenuLavado@aux(BANK0[5]), 
		 -> STR_45(CODE[2]), STR_44(CODE[2]), STR_43(CODE[21]), STR_42(CODE[21]), 
		 -> STR_41(CODE[21]), STR_40(CODE[21]), STR_39(CODE[21]), STR_38(CODE[21]), 
		 -> STR_37(CODE[21]), STR_36(CODE[21]), STR_35(CODE[21]), STR_32(CODE[2]), 
		 -> STR_31(CODE[2]), STR_30(CODE[21]), STR_29(CODE[21]), STR_28(CODE[21]), 
		 -> STR_27(CODE[21]), STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[21]), 
		 -> STR_23(CODE[21]), STR_22(CODE[21]), STR_19(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), aux(BANK1[20]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), main@aux(BANK1[20]), STR_3(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 


Critical Paths under _main in COMMON

    _PWM_Duty->___altoft
    ___lwtoft->___ftpack
    ___fttol->___altoft
    ___ftmul->___altoft
    ___ftdiv->___lwtoft
    ___altoft->___aldiv
    _PWM_Initialize->___aldiv
    _Lcd_Init->_Lcd_Command
    _ImprimirMenuPrincipal->_Lcd_Text
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Text->_Lcd_CharCP
    _Lcd_Text->_Lcd_Command

Critical Paths under _main in BANK0

    _main->_lavadoDelicado
    _main->_lavadoLento
    _main->_lavadoRapido
    _lavadoRapido->_normal
    _lavadoRapido->_reversa
    _lavadoLento->_normal
    _lavadoLento->_reversa
    _lavadoDelicado->_normal
    _lavadoDelicado->_reversa
    _reversa->_PWM_Duty
    _normal->_PWM_Duty
    _PWM_Duty->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___altoft->___aldiv
    _PWM_Initialize->___aldiv
    _ImprimirMenuLavado->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0  163396
                                             61 BANK0      3     3      0
                                              0 BANK1     26    26      0
                     _ADC_Initialize
                           _ADC_Read
                 _Digital_Initialize
                 _ImprimirMenuLavado
              _ImprimirMenuPrincipal
                        _Lcd_Command
                           _Lcd_Init
                           _Lcd_Text
                           _PWM_Duty
                     _PWM_Initialize
                     _lavadoDelicado
                        _lavadoLento
                       _lavadoRapido
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _lavadoRapido                                         7     7      0   38565
                                             54 BANK0      7     7      0
                        _Lcd_Command
                           _Lcd_Text
                            ___awdiv
                             ___wmul
                             _normal
                            _reversa
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _lavadoLento                                          7     7      0   38631
                                             54 BANK0      7     7      0
                        _Lcd_Command
                           _Lcd_Text
                            ___awdiv
                             ___wmul
                             _normal
                            _reversa
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _lavadoDelicado                                       7     7      0   38631
                                             54 BANK0      7     7      0
                        _Lcd_Command
                           _Lcd_Text
                            ___awdiv
                             ___wmul
                             _normal
                            _reversa
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _reversa                                              2     0      2   11373
                                             52 BANK0      2     0      2
                           _PWM_Duty
 ---------------------------------------------------------------------------------
 (2) _normal                                               2     0      2   11373
                                             52 BANK0      2     0      2
                           _PWM_Duty
 ---------------------------------------------------------------------------------
 (3) _PWM_Duty                                             6     4      2   10583
                                             46 BANK0      6     4      2
                            ___aldiv
                           ___altoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2156
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     316
                                             32 BANK0     14    10      4
                            ___aldiv (ARG)
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2524
                                             16 BANK0     16    10      6
                            ___aldiv (ARG)
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6    2478
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    2272
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2070
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1116
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    2220
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _PWM_Initialize                                       4     4      0     556
                                              9 COMMON     4     4      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     556
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0     314
                                              3 COMMON     3     3      0
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (1) _ImprimirMenuPrincipal                                2     0      2   10867
                                              9 COMMON     2     0      2
                        _Lcd_Command
                           _Lcd_Text
 ---------------------------------------------------------------------------------
 (1) _ImprimirMenuLavado                                   7     5      2   12461
                                             18 BANK0      7     5      2
                        _Lcd_Command
                           _Lcd_Text
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             26    18      8    1712
                                              0 BANK0     18    10      8
                            ___awdiv (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Text                                             6     3      3   10261
                                              3 COMMON     6     3      3
                         _Lcd_CharCP
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (3) _Lcd_Command                                          3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_CharCP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Digital_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ADC_Read
   _Digital_Initialize
   _ImprimirMenuLavado
     _Lcd_Command
     _Lcd_Text
       _Lcd_CharCP
       _Lcd_Command
     _sprintf
       ___awdiv (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
       ___wmul (ARG)
   _ImprimirMenuPrincipal
     _Lcd_Command
     _Lcd_Text
       _Lcd_CharCP
       _Lcd_Command
   _Lcd_Command
   _Lcd_Init
     _Lcd_Command
   _Lcd_Text
     _Lcd_CharCP
     _Lcd_Command
   _PWM_Duty
     ___aldiv
     ___altoft
       ___aldiv (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___aldiv (ARG)
       ___altoft (ARG)
         ___aldiv (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___aldiv (ARG)
       ___altoft (ARG)
         ___aldiv (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___aldiv (ARG)
         ___altoft (ARG)
           ___aldiv (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _PWM_Initialize
     ___aldiv
   _lavadoDelicado
     _Lcd_Command
     _Lcd_Text
       _Lcd_CharCP
       _Lcd_Command
     ___awdiv
     ___wmul
     _normal
       _PWM_Duty
         ___aldiv
         ___altoft
           ___aldiv (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___aldiv (ARG)
           ___altoft (ARG)
             ___aldiv (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           ___aldiv (ARG)
           ___altoft (ARG)
             ___aldiv (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___aldiv (ARG)
             ___altoft (ARG)
               ___aldiv (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft
           ___ftpack
     _reversa
       _PWM_Duty
         ___aldiv
         ___altoft
           ___aldiv (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___aldiv (ARG)
           ___altoft (ARG)
             ___aldiv (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           ___aldiv (ARG)
           ___altoft (ARG)
             ___aldiv (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___aldiv (ARG)
             ___altoft (ARG)
               ___aldiv (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft
           ___ftpack
     _sprintf
       ___awdiv (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
       ___wmul (ARG)
   _lavadoLento
     _Lcd_Command
     _Lcd_Text
       _Lcd_CharCP
       _Lcd_Command
     ___awdiv
     ___wmul
     _normal
       _PWM_Duty
         ___aldiv
         ___altoft
           ___aldiv (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___aldiv (ARG)
           ___altoft (ARG)
             ___aldiv (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           ___aldiv (ARG)
           ___altoft (ARG)
             ___aldiv (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___aldiv (ARG)
             ___altoft (ARG)
               ___aldiv (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft
           ___ftpack
     _reversa
       _PWM_Duty
         ___aldiv
         ___altoft
           ___aldiv (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___aldiv (ARG)
           ___altoft (ARG)
             ___aldiv (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           ___aldiv (ARG)
           ___altoft (ARG)
             ___aldiv (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___aldiv (ARG)
             ___altoft (ARG)
               ___aldiv (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft
           ___ftpack
     _sprintf
       ___awdiv (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
       ___wmul (ARG)
   _lavadoRapido
     _Lcd_Command
     _Lcd_Text
       _Lcd_CharCP
       _Lcd_Command
     ___awdiv
     ___wmul
     _normal
       _PWM_Duty
         ___aldiv
         ___altoft
           ___aldiv (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___aldiv (ARG)
           ___altoft (ARG)
             ___aldiv (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           ___aldiv (ARG)
           ___altoft (ARG)
             ___aldiv (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___aldiv (ARG)
             ___altoft (ARG)
               ___aldiv (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft
           ___ftpack
     _reversa
       _PWM_Duty
         ___aldiv
         ___altoft
           ___aldiv (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___aldiv (ARG)
           ___altoft (ARG)
             ___aldiv (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           ___aldiv (ARG)
           ___altoft (ARG)
             ___aldiv (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___aldiv (ARG)
             ___altoft (ARG)
               ___aldiv (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft
           ___ftpack
     _sprintf
       ___awdiv (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
       ___wmul (ARG)
   _sprintf
     ___awdiv (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
     ___wmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1A      2F       7       58.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     40      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      85      12        0.0%
ABS                  0      0      85       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Dec 09 11:47:06 2020

                  ___altoft@exp 007B                               pc 0002         __size_of_PWM_Initialize 004D  
                   __CFG_CP$OFF 0000                   ___altoft@sign 007C                              l97 05C8  
                  ___awdiv@sign 0076                              fsr 0004             ___wmul@multiplicand 0072  
                   __CFG_LVP$ON 0000                             l110 06AC                             l103 0658  
                           l220 1482                             l116 070E                             l109 069E  
                           l128 0793                             l161 04FE                             l139 0F95  
                           l261 09B2                             l262 09DB                             l417 144B  
                           l185 029D                             l472 1783                             l585 1642  
                           l586 164A                             l578 162D                             l669 1757  
                           _PR2 0092                    __CFG_CPD$OFF 0000                             _aux 00BA  
                           fsr0 0004                             indf 0000                    __CFG_FOSC$XT 0000  
               lavadoDelicado@i 005B             __end_of_Lcd_Command 096C         __size_of_lavadoDelicado 0261  
                  ___ftdiv@cntr 002A                    ___ftdiv@sign 002F                            l2013 0B07  
                          l2007 0AF1                            l2201 1514                            l2041 0B7E  
                          l2025 0B46                            l2121 08BF                            l2213 152E  
                          l2205 151A                            l2037 0B6E                            l2029 0B56  
                          l2207 1528                            l2223 0BD9                            l2313 15B3  
                          l2057 16FD                            l2163 14B7                            l2155 1493  
                          l2251 0C37                            l2331 15DF                            l2323 15BB  
                          l2307 15A8                            l2083 174C                            l2075 172F  
                          l2157 14A1                            l2181 0816                            l2245 0C12  
                          l2229 0BF5                            l2421 0CDF                            l2325 15C9  
                          l2085 175A                            l2077 173F                            l2167 14C2  
                          l2239 0C0C                            l2335 15EA                            l2511 0F0C  
                          l2185 0824                            l2265 0C4A                            l2257 0C46  
                          l2433 0D6A                            l2089 1768                            l2505 0EEB  
                          l2195 150B                            l2179 0808                            l2267 0BB3  
                          l2427 0D24                            l2339 15F2                            l2603 0454  
                          l2523 0F48                            l2197 150E                            l2189 082F  
                          l2269 0C8F                            l2437 0DAA                            l2701 01F3  
                          l2621 04B1                            l2517 0F27                            l2199 1511  
                          l2287 1443                            l2615 0490                            l1921 17A4  
                          l1913 1794                            l2713 022F                            l2609 0475  
                          l2529 0F68                            l2459 16AE                            l1931 17DC  
                          l1923 17B4                            l2707 0214                            l2627 04D1  
                          l2571 0332                            l2725 0270                            l2493 0EAF  
                          l2477 0E14                            l2813 0668                            l2805 063D  
                          l1935 17E9                            l2719 0250                            l2591 0418  
                          l2487 0E98                            l2903 07C2                            l2831 06A4  
                          l1881 1612                            l1953 14DD                            l2585 0401  
                          l2577 0390                            l2841 06DE                            l2817 067D  
                          l2809 0650                            l1939 17F7                            l1891 163C  
                          l1883 1617                            l1875 15FF                            l1955 14EF  
                          l1971 0A4F                            l2683 01A0                            l2675 012F  
                          l2499 0ED0                            l2835 06BA                            l2819 068C  
                          l1965 0A39                            l2669 00D1                            l2597 0439  
                          l1879 1606                            l2695 01D8                            l2871 0767  
                          l2839 06CF                            l1889 1632                            l1993 0AB3  
                          l1985 0A94                            l2689 01B7                            l2881 0783  
                          l2857 0734                            l2787 05EA                            l2893 07A8  
                          l2877 077A                            l2887 0796                            l2899 07B7  
                          STR_1 105B                            STR_2 1031                            STR_3 10AF  
                          STR_4 1141                            STR_5 105B                            STR_6 1031  
                          STR_7 109A                            STR_8 10D9                            STR_9 1070  
                          u2005 1635                            u2115 17B6                            u2125 17CB  
                          u3005 15E0                            u2045 1651                            u2135 17DD  
                          u2215 0A61                            u2225 0A73                            u2305 0B25  
                          u2235 0A95                            u3125 146C                            u2245 0AA6  
                          u2095 17A8                            u3055 156A                            u2175 14E2  
                          u2255 0AB4                            u2335 0B57                            u4007 02F8  
                          u4017 0980                            u3065 1573                            u2345 0B5F  
                          u2425 1704                            u4107 00A2                            u2515 08D5  
                          u4027 0988                            u4117 147A                            u2525 08E5  
                          u4037 0990                            u3165 0E12                            u2615 000D  
                          u2535 08F8                            u4047 0998                            u2295 0B13  
                          u2455 1730                            u3415 00CF                            u3255 0F93  
                          u2625 001D                            u2545 090A                            u2705 14A2  
                          u4057 09A0                            u2385 0B7F                            u3425 00FC  
                          u3265 0FBA                            u2635 0030                            u2555 0924  
                          u2715 14AE                            u4067 09A8                            u2395 0B87  
                          u3515 029B                            u2645 0042                            u2565 0934  
                          u2725 14B8                            u4077 09CF                            u2485 174E  
                          u3525 02C2                            u3285 0330                            u2590 08BC  
                          u2655 005C                            u4087 09F8                            u3295 035D  
                          u2665 006C                            u4097 0967                            u2905 144C  
                          u2585 0872                            u3385 04FC                            u2755 080B  
                          u2915 1453                            u3395 0523                            u2685 1496  
                          u2845 0C2D                            u1965 160B                            u3565 0635  
                          u2775 081C                            u2785 0825                            u1985 1626  
                          u3585 0648                            u3907 06D7                            u2965 15BE  
                          u3917 071A                            u3927 0F70                            u2985 15CA  
                          u3937 0FD3                            u2995 15D6                            u3947 0FF0  
                          u3957 04E5                            u3877 0580                            u3967 053C  
                          u3887 05D4                            u3977 0559                            u3897 0685  
                          u3987 0284                            u3997 02DB                    ?_lavadoLento 0070  
                  __CFG_WRT$OFF 0000                            _main 0569                    ___ftpack@arg 0070  
                  ___ftpack@exp 0073                            btemp 007E                __end_of_ADC_Read 148B  
                          start 0000                    ___ftmul@cntr 003E                    ___ftmul@sign 003F  
                    _Lcd_CharCP 0005                    ___fttol@exp1 004D                    ___fttol@lval 0049  
            _Digital_Initialize 141D                 __end_of___aldiv 1800                           ?_main 0070  
                         _CCP1X 00BD                           _CCP1Y 00BC                 __end_of___awdiv 15F7  
                         STR_10 1070                           STR_11 101C                           STR_12 101C  
                         STR_20 10D9                           STR_21 10D9                           STR_13 1046  
                         STR_14 1046                           STR_22 1070                           STR_30 1085  
                         STR_23 1070                           STR_31 115C                           STR_15 10C4  
                         STR_24 101C                           STR_40 1046                           STR_16 10C4  
                         STR_32 115E                           STR_25 101C                           STR_41 10C4  
                         STR_33 10D9                           STR_17 1085                   __CFG_WDTE$OFF 0000  
                         STR_26 1046                           STR_42 10C4                           STR_34 10D9  
                         STR_50 10FB                           STR_18 115C                           STR_27 1046  
                         STR_35 1070                           STR_43 1085                           STR_51 114D  
                         STR_19 115E                           STR_36 1070                           STR_28 10C4  
                         STR_44 115C                           STR_60 1129                           STR_52 1155  
                         STR_37 101C                           STR_29 10C4                           STR_45 115E  
                         STR_61 10EB                           STR_53 110A                           STR_38 101C  
                         STR_62 1137                           STR_54 111A                           STR_70 1129  
                         STR_46 1141                           STR_39 1046                           STR_63 110B  
                         STR_55 1129                           STR_47 10FB                           STR_71 10EA  
                         STR_72 1137                           STR_56 10EB                           STR_64 111A  
                         STR_48 114C                           STR_57 1137                           STR_73 110B  
                         STR_49 1156                           STR_65 1128                           STR_58 110B  
                         STR_66 10EB                           STR_74 111A                           STR_67 1137  
                         STR_75 1129                           STR_59 1119                           STR_68 110B  
                         STR_76 10EB                           STR_69 111A                           STR_77 1136  
               __end_of___ftdiv 0AD9                 __end_of___ftmul 0BAC                 ___awdiv@divisor 0070  
               __end_of___fttol 1771                 __end_of___lwdiv 14C7                 __end_of___lwmod 0834  
               ___awdiv@counter 0075                           _TRISC 0087              _ImprimirMenuLavado 1663  
           ?_Digital_Initialize 0070                   __CFG_PWRTE$ON 0000                   ?_lavadoRapido 0070  
               __end_of_dpowers 101C                   ___ftpack@sign 0074             ?_ImprimirMenuLavado 0032  
                __CFG_BOREN$OFF 0000                           pclath 000A                __end_of_PWM_Duty 08CD  
               __end_of_reversa 141D                           status 0003                           wtemp0 007E  
               __end_of_sprintf 0C94            ??_Digital_Initialize 0070                __end_of_Lcd_Init 0A21  
              __end_of_Lcd_Text 1551                 __initialization 07CF                    __end_of_main 07CF  
          ??_ImprimirMenuLavado 007E                     _Lcd_Command 08CD                          ??_main 005D  
                 ___fttol@sign1 0048                  ??_lavadoRapido 0056                          _ADCON0 001F  
                        _ADCON1 009F                          _CCP1M2 00BA                          _CCP1M3 00BB  
              __end_of___altoft 1509                          _ADRESH 001E                          _ADRESL 009E  
                        _CCPR1L 0015                ___awdiv@dividend 0072                __end_of___ftpack 1663  
              __end_of___lwtoft 1441                          _TMR2ON 0092                  Lcd_Text@buffer 0074  
                        _TRISC2 043A         ??_ImprimirMenuPrincipal 007B                     ?_Lcd_CharCP 0070  
                     ??___aldiv 0078                          ___wmul 1441                       ??___awdiv 0074  
                _PWM_Initialize 1551                       ??___ftdiv 0026                       ??___ftmul 0036  
                     ??___fttol 0044                       ??___lwdiv 0074                       ??___lwmod 007C  
               ADC_Read@channel 0074                          _estado 00CE                ___awdiv@quotient 0077  
                        _normal 1401                          _tiempo 0062                          main@op 00B6  
              lavadoLento@i_373 0059           ___ftmul@f3_as_product 003B                       ?_ADC_Read 0070  
                     ??_reversa 007D                    PWM_Duty@duty 004E                  _lavadoDelicado 00A7  
                     ??_sprintf 0028       ImprimirMenuLavado@casilla 0032              Lcd_Command@command 0072  
       __end_of__initialization 07FC                      ___altoft@c 0026            __size_of_lavadoLento 0261  
                    ___ftdiv@f1 0023                      ___ftdiv@f2 0020                      ___ftdiv@f3 002B  
                  lavadoLento@i 005B                      ___ftmul@f1 0030                      ___ftmul@f2 0033  
        __end_of_PWM_Initialize 159E                      ___fttol@f1 0040                  __pcstackCOMMON 0070  
                  __pidataBANK0 13EC                    __pidataBANK1 0004                      ___lwtoft@c 0078  
                     ?_PWM_Duty 004E                      ??_ADC_Read 0072          __end_of_lavadoDelicado 0308  
                     ?_Lcd_Init 0070                       ?_Lcd_Text 0073             __size_of_Lcd_CharCP 00A2  
                    __pbssBANK0 0060                      __pbssBANK1 00BA            __end_of_lavadoRapido 1000  
               ?_PWM_Initialize 0070                      __pmaintext 0569                         ?___wmul 0070  
                       _CCP1CON 0017                       ?___altoft 0026                       ?___ftpack 0070  
                       ?_normal 0054                      ??_PWM_Duty 0050         __size_of_ADC_Initialize 0009  
                       _T2CKPS0 0090                         _T2CKPS1 0091                       ?___lwtoft 0078  
               ?_lavadoDelicado 0070                      ??_Lcd_Init 0073                      ??_Lcd_Text 0076  
                    __stringtab 1000                         ___aldiv 1771                         ___awdiv 159E  
                       ___ftdiv 0A21                 __size_of___wmul 0021                         ___ftmul 0AD9  
                       ___fttol 16E3                         ___lwdiv 148B                         ___lwmod 0802  
                    ??___altoft 0079                      ??___ftpack 0075                    ?_Lcd_Command 0070  
                       __ptext1 0DEA                         __ptext2 0308                         __ptext3 00A7  
                       __ptext4 140F                         __ptext5 1401                         __ptext6 0834  
                       __ptext7 142D                         __ptext8 16E3                         __ptext9 0AD9  
               __size_of_normal 000E                      ??___lwtoft 007B                         _dpowers 1012  
              ___aldiv@dividend 0074                         _reversa 140F                         main@adc 00B4  
                       main@aux 00A0                         _sprintf 0BAC                         clrloop0 13F1  
          end_of_initialization 07FC     __size_of_Digital_Initialize 0010  __size_of_ImprimirMenuPrincipal 0156  
 __end_of_ImprimirMenuPrincipal 0DEA                    ??_Lcd_CharCP 0070                ___aldiv@quotient 0022  
                     Lcd_Text@x 0073                       Lcd_Text@y 0077                    __pstringtext 1000  
   __size_of_ImprimirMenuLavado 0080                       _PORTAbits 0005                       _PORTBbits 0006  
                     _PORTCbits 0007             main@opcionPrincipal 00B8                       _PORTDbits 0008  
                     _TRISAbits 0085                       _TRISBbits 0086                       _TRISCbits 0087  
                     _TRISDbits 0088               __size_of_ADC_Read 0029             lavadoDelicado@i_389 0059  
            __end_of_Lcd_CharCP 00A7           __size_of_lavadoRapido 0216                     ___ftdiv@exp 002E  
                   ___ftmul@exp 003A                   lavadoRapido@i 005B                  __end_of___wmul 1462  
                _ADC_Initialize 13F8                  __end_of_normal 140F               lavadoRapido@i_357 0059  
           start_initialization 07CF               __size_of_PWM_Duty 0099                    _lavadoRapido 0DEA  
             __size_of_Lcd_Init 00B5                   ??_lavadoLento 0056               __size_of_Lcd_Text 0048  
              ??_PWM_Initialize 0079                        ??___wmul 0074          __end_of_ADC_Initialize 1401  
                   __pdataBANK0 0064                     __pdataBANK1 00CE                ??_lavadoDelicado 0056  
                      ??_normal 007D               __size_of___altoft 0042               __size_of___ftpack 006C  
          __size_of_Lcd_Command 009F                       ___latbits 0002               __size_of___lwtoft 0014  
                 __pcstackBANK0 0020                   __pcstackBANK1 00A0                     sprintf@flag 002C  
                   sprintf@prec 002D                ___lwdiv@dividend 0072             __end_of_lavadoLento 0569  
         ImprimirMenuLavado@aux 0034                        ?___aldiv 0070                        ?___awdiv 0070  
                      ?___ftdiv 0020                        ?___ftmul 0030                        ?___fttol 0040  
                      ?___lwdiv 0070                        ?___lwmod 0078                 ?_ADC_Initialize 0070  
                      _ADC_Read 1462                        ?_reversa 0054                ___lwdiv@quotient 0075  
                      ?_sprintf 0020                 ___aldiv@divisor 0070                 ___aldiv@counter 0020  
                ___wmul@product 0074                       clear_ram0 13F0                      reversa@pwm 0054  
                      _GO_nDONE 00FA                    Lcd_Init@data 0075                      _ADCON0bits 001F  
                   __stringbase 1012                      _ADCON1bits 009F                        _PWM_Duty 0834  
             ___wmul@multiplier 0070                        _PWM_freq 0064                        _Lcd_Init 096C  
                      _Lcd_Text 1509                     _lavadoLento 0308      __end_of_Digital_Initialize 142D  
                  Lcd_Text@data 0078      __end_of_ImprimirMenuLavado 16E3                __size_of___aldiv 008F  
         _ImprimirMenuPrincipal 0C94                __size_of___awdiv 0059                __size_of___ftdiv 00B8  
                      ___altoft 14C7                __size_of___ftmul 00D3                __size_of___fttol 008E  
              __size_of___lwdiv 003C                __size_of___lwmod 0032                        ___ftpack 15F7  
            __end_of__stringtab 1012                        ___lwtoft 142D                      sprintf@val 002E  
               ___lwdiv@divisor 0070                 ___lwdiv@counter 0077                        __ptext10 0A21  
                      __ptext11 14C7                        __ptext20 0BAC                        __ptext12 15F7  
                      __ptext21 0802                        __ptext13 1441                        __ptext22 148B  
                      __ptext14 159E                        __ptext23 1509                        __ptext15 1551  
                      __ptext24 08CD                        __ptext16 1771                        __ptext25 0005  
                      __ptext17 096C                        __ptext26 141D                        __ptext18 0C94  
                      __ptext27 1462                        __ptext19 1663                        __ptext28 13F8  
              __size_of_reversa 000E                __size_of_sprintf 00E8                     Lcd_CharCP@c 0072  
                 __size_of_main 0266                        _minutAux 0060                       normal@pwm 0054  
                     sprintf@ap 002B                       sprintf@sp 0030                ___lwmod@dividend 007A  
              ??_ADC_Initialize 0070                       stringcode 100A    ImprimirMenuPrincipal@casilla 0079  
        ?_ImprimirMenuPrincipal 0079                   ??_Lcd_Command 0070                        sprintf@c 0031  
                      sprintf@f 0020                 ___lwmod@divisor 0078                 ___lwmod@counter 007D  
                      stringtab 1000                    ___aldiv@sign 0021  
