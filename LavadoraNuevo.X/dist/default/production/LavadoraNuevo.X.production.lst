

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Dec 14 13:08:14 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 1.41
    47                           ; Generated 25/01/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F877A Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200                           
   201                           	psect	idataBANK1
   202  0004                     __pidataBANK1:	
   203                           
   204                           ;initializer for _estado
   205  0004  3450               	retlw	80
   206                           
   207                           ;initializer for _PWM_freq
   208  0005  3488               	retlw	136
   209  0006  3413               	retlw	19
   210  0007  3400               	retlw	0
   211  0008  3400               	retlw	0
   212                           
   213                           	psect	stringtext
   214  0800                     __pstringtext:	
   215  0800                     stringtab:	
   216  0800                     __stringtab:	
   217                           
   218                           ;	String table - string pointers are 2 bytes each
   219  0800  1BFF               	btfsc	btemp+1,7
   220  0801  280A               	ljmp	stringcode
   221  0802  1383               	bcf	3,7
   222  0803  187F               	btfsc	btemp+1,0
   223  0804  1783               	bsf	3,7
   224  0805  0800               	movf	0,w
   225  0806  0A84               	incf	4,f
   226  0807  1903               	skipnz
   227  0808  0AFF               	incf	btemp+1,f
   228  0809  0008               	return
   229  080A                     stringcode:	
   230  080A  087F               	movf	btemp+1,w
   231  080B  397F               	andlw	127
   232  080C  008A               	movwf	10
   233  080D  0804               	movf	4,w
   234  080E  0A84               	incf	4,f
   235  080F  1903               	skipnz
   236  0810  0AFF               	incf	btemp+1,f
   237  0811  0082               	movwf	2
   238  0812                     __stringbase:	
   239  0812                     __end_of__stringtab:	
   240  0812                     _dpowers:	
   241  0812  3401               	retlw	1
   242  0813  3400               	retlw	0
   243  0814  340A               	retlw	10
   244  0815  3400               	retlw	0
   245  0816  3464               	retlw	100
   246  0817  3400               	retlw	0
   247  0818  34E8               	retlw	232
   248  0819  3403               	retlw	3
   249  081A  3410               	retlw	16
   250  081B  3427               	retlw	39
   251  081C                     __end_of_dpowers:	
   252  0015                     _CCPR1L	set	21
   253  0017                     _CCP1CON	set	23
   254  001E                     _ADRESH	set	30
   255  001F                     _ADCON0	set	31
   256  001F                     _ADCON0bits	set	31
   257  0005                     _PORTAbits	set	5
   258  0008                     _PORTDbits	set	8
   259  0006                     _PORTBbits	set	6
   260  0007                     _PORTCbits	set	7
   261  00BC                     _CCP1Y	set	188
   262  00BD                     _CCP1X	set	189
   263  0091                     _T2CKPS1	set	145
   264  0090                     _T2CKPS0	set	144
   265  00BA                     _CCP1M2	set	186
   266  00BB                     _CCP1M3	set	187
   267  0092                     _TMR2ON	set	146
   268  00FA                     _GO_nDONE	set	250
   269  0092                     _PR2	set	146
   270  0087                     _TRISC	set	135
   271  009E                     _ADRESL	set	158
   272  009F                     _ADCON1bits	set	159
   273  0085                     _TRISAbits	set	133
   274  0088                     _TRISDbits	set	136
   275  0086                     _TRISBbits	set	134
   276  0087                     _TRISCbits	set	135
   277  043A                     _TRISC2	set	1082
   278  081C                     STR_10:	
   279  081C  3420               	retlw	32	;' '
   280  081D  3420               	retlw	32	;' '
   281  081E  3420               	retlw	32	;' '
   282  081F  3420               	retlw	32	;' '
   283  0820  3420               	retlw	32	;' '
   284  0821  3420               	retlw	32	;' '
   285  0822  3456               	retlw	86	;'V'
   286  0823  3461               	retlw	97	;'a'
   287  0824  3463               	retlw	99	;'c'
   288  0825  3469               	retlw	105	;'i'
   289  0826  3461               	retlw	97	;'a'
   290  0827  3464               	retlw	100	;'d'
   291  0828  346F               	retlw	111	;'o'
   292  0829  3420               	retlw	32	;' '
   293  082A  3420               	retlw	32	;' '
   294  082B  3420               	retlw	32	;' '
   295  082C  3420               	retlw	32	;' '
   296  082D  3420               	retlw	32	;' '
   297  082E  3420               	retlw	32	;' '
   298  082F  3420               	retlw	32	;' '
   299  0830  3420               	retlw	32	;' '
   300  0831  3420               	retlw	32	;' '
   301  0832  3400               	retlw	0
   302  0833                     STR_9:	
   303  0833  3420               	retlw	32	;' '
   304  0834  3420               	retlw	32	;' '
   305  0835  3420               	retlw	32	;' '
   306  0836  3420               	retlw	32	;' '
   307  0837  3420               	retlw	32	;' '
   308  0838  3420               	retlw	32	;' '
   309  0839  344C               	retlw	76	;'L'
   310  083A  344C               	retlw	76	;'L'
   311  083B  3445               	retlw	69	;'E'
   312  083C  344E               	retlw	78	;'N'
   313  083D  3441               	retlw	65	;'A'
   314  083E  344E               	retlw	78	;'N'
   315  083F  3444               	retlw	68	;'D'
   316  0840  344F               	retlw	79	;'O'
   317  0841  3420               	retlw	32	;' '
   318  0842  3420               	retlw	32	;' '
   319  0843  3420               	retlw	32	;' '
   320  0844  3420               	retlw	32	;' '
   321  0845  3420               	retlw	32	;' '
   322  0846  3420               	retlw	32	;' '
   323  0847  3420               	retlw	32	;' '
   324  0848  3420               	retlw	32	;' '
   325  0849  3400               	retlw	0
   326  084A                     STR_11:	
   327  084A  3420               	retlw	32	;' '
   328  084B  3420               	retlw	32	;' '
   329  084C  3420               	retlw	32	;' '
   330  084D  3420               	retlw	32	;' '
   331  084E  3420               	retlw	32	;' '
   332  084F  3443               	retlw	67	;'C'
   333  0850  3465               	retlw	101	;'e'
   334  0851  346E               	retlw	110	;'n'
   335  0852  3474               	retlw	116	;'t'
   336  0853  3472               	retlw	114	;'r'
   337  0854  3469               	retlw	105	;'i'
   338  0855  3466               	retlw	102	;'f'
   339  0856  3475               	retlw	117	;'u'
   340  0857  3467               	retlw	103	;'g'
   341  0858  3461               	retlw	97	;'a'
   342  0859  3420               	retlw	32	;' '
   343  085A  3420               	retlw	32	;' '
   344  085B  3420               	retlw	32	;' '
   345  085C  3420               	retlw	32	;' '
   346  085D  3420               	retlw	32	;' '
   347  085E  3420               	retlw	32	;' '
   348  085F  3400               	retlw	0
   349  0860                     STR_5:	
   350  0860  3420               	retlw	32	;' '
   351  0861  3420               	retlw	32	;' '
   352  0862  3420               	retlw	32	;' '
   353  0863  3420               	retlw	32	;' '
   354  0864  3420               	retlw	32	;' '
   355  0865  3420               	retlw	32	;' '
   356  0866  344C               	retlw	76	;'L'
   357  0867  3441               	retlw	65	;'A'
   358  0868  3456               	retlw	86	;'V'
   359  0869  3441               	retlw	65	;'A'
   360  086A  3444               	retlw	68	;'D'
   361  086B  344F               	retlw	79	;'O'
   362  086C  3420               	retlw	32	;' '
   363  086D  3420               	retlw	32	;' '
   364  086E  3420               	retlw	32	;' '
   365  086F  3420               	retlw	32	;' '
   366  0870  3420               	retlw	32	;' '
   367  0871  3420               	retlw	32	;' '
   368  0872  3420               	retlw	32	;' '
   369  0873  3420               	retlw	32	;' '
   370  0874  3400               	retlw	0
   371  0875                     STR_6:	
   372  0875  3420               	retlw	32	;' '
   373  0876  3420               	retlw	32	;' '
   374  0877  3420               	retlw	32	;' '
   375  0878  3420               	retlw	32	;' '
   376  0879  3420               	retlw	32	;' '
   377  087A  3420               	retlw	32	;' '
   378  087B  3446               	retlw	70	;'F'
   379  087C  3469               	retlw	105	;'i'
   380  087D  346E               	retlw	110	;'n'
   381  087E  3461               	retlw	97	;'a'
   382  087F  346C               	retlw	108	;'l'
   383  0880  3469               	retlw	105	;'i'
   384  0881  347A               	retlw	122	;'z'
   385  0882  3461               	retlw	97	;'a'
   386  0883  3464               	retlw	100	;'d'
   387  0884  346F               	retlw	111	;'o'
   388  0885  3420               	retlw	32	;' '
   389  0886  3420               	retlw	32	;' '
   390  0887  3420               	retlw	32	;' '
   391  0888  3420               	retlw	32	;' '
   392  0889  3400               	retlw	0
   393  088A                     STR_3:	
   394  088A  3454               	retlw	84	;'T'
   395  088B  3465               	retlw	101	;'e'
   396  088C  346C               	retlw	108	;'l'
   397  088D  3465               	retlw	101	;'e'
   398  088E  3466               	retlw	102	;'f'
   399  088F  346F               	retlw	111	;'o'
   400  0890  346E               	retlw	110	;'n'
   401  0891  346F               	retlw	111	;'o'
   402  0892  343A               	retlw	58	;':'
   403  0893  3420               	retlw	32	;' '
   404  0894  3436               	retlw	54	;'6'
   405  0895  3436               	retlw	54	;'6'
   406  0896  3439               	retlw	57	;'9'
   407  0897  3432               	retlw	50	;'2'
   408  0898  3438               	retlw	56	;'8'
   409  0899  3436               	retlw	54	;'6'
   410  089A  3430               	retlw	48	;'0'
   411  089B  3433               	retlw	51	;'3'
   412  089C  3431               	retlw	49	;'1'
   413  089D  3439               	retlw	57	;'9'
   414  089E  3400               	retlw	0
   415  089F                     STR_1:	
   416  089F  3445               	retlw	69	;'E'
   417  08A0  346D               	retlw	109	;'m'
   418  08A1  3470               	retlw	112	;'p'
   419  08A2  3472               	retlw	114	;'r'
   420  08A3  3465               	retlw	101	;'e'
   421  08A4  3473               	retlw	115	;'s'
   422  08A5  3461               	retlw	97	;'a'
   423  08A6  343A               	retlw	58	;':'
   424  08A7  3420               	retlw	32	;' '
   425  08A8  3452               	retlw	82	;'R'
   426  08A9  3465               	retlw	101	;'e'
   427  08AA  3470               	retlw	112	;'p'
   428  08AB  3461               	retlw	97	;'a'
   429  08AC  3472               	retlw	114	;'r'
   430  08AD  3461               	retlw	97	;'a'
   431  08AE  3463               	retlw	99	;'c'
   432  08AF  3469               	retlw	105	;'i'
   433  08B0  346F               	retlw	111	;'o'
   434  08B1  346E               	retlw	110	;'n'
   435  08B2  3400               	retlw	0
   436  08B3                     STR_7:	
   437  08B3  3420               	retlw	32	;' '
   438  08B4  3420               	retlw	32	;' '
   439  08B5  3420               	retlw	32	;' '
   440  08B6  3420               	retlw	32	;' '
   441  08B7  3420               	retlw	32	;' '
   442  08B8  3420               	retlw	32	;' '
   443  08B9  3425               	retlw	37	;'%'
   444  08BA  3469               	retlw	105	;'i'
   445  08BB  343A               	retlw	58	;':'
   446  08BC  3425               	retlw	37	;'%'
   447  08BD  3469               	retlw	105	;'i'
   448  08BE  343A               	retlw	58	;':'
   449  08BF  3425               	retlw	37	;'%'
   450  08C0  3469               	retlw	105	;'i'
   451  08C1  3420               	retlw	32	;' '
   452  08C2  3420               	retlw	32	;' '
   453  08C3  3400               	retlw	0
   454  08C4                     STR_34:	
   455  08C4  342D               	retlw	45	;'-'
   456  08C5  344C               	retlw	76	;'L'
   457  08C6  3461               	retlw	97	;'a'
   458  08C7  3476               	retlw	118	;'v'
   459  08C8  3461               	retlw	97	;'a'
   460  08C9  3464               	retlw	100	;'d'
   461  08CA  346F               	retlw	111	;'o'
   462  08CB  3420               	retlw	32	;' '
   463  08CC  3444               	retlw	68	;'D'
   464  08CD  3465               	retlw	101	;'e'
   465  08CE  346C               	retlw	108	;'l'
   466  08CF  3469               	retlw	105	;'i'
   467  08D0  3463               	retlw	99	;'c'
   468  08D1  3461               	retlw	97	;'a'
   469  08D2  3464               	retlw	100	;'d'
   470  08D3  346F               	retlw	111	;'o'
   471  08D4  3400               	retlw	0
   472  08D5                     STR_13:	
   473  08D5  3445               	retlw	69	;'E'
   474  08D6  346C               	retlw	108	;'l'
   475  08D7  3420               	retlw	32	;' '
   476  08D8  346C               	retlw	108	;'l'
   477  08D9  3461               	retlw	97	;'a'
   478  08DA  3476               	retlw	118	;'v'
   479  08DB  3461               	retlw	97	;'a'
   480  08DC  3464               	retlw	100	;'d'
   481  08DD  346F               	retlw	111	;'o'
   482  08DE  3420               	retlw	32	;' '
   483  08DF  3464               	retlw	100	;'d'
   484  08E0  3475               	retlw	117	;'u'
   485  08E1  3472               	retlw	114	;'r'
   486  08E2  3461               	retlw	97	;'a'
   487  08E3  3400               	retlw	0
   488  08E4                     STR_19:	
   489  08E4  342D               	retlw	45	;'-'
   490  08E5  344C               	retlw	76	;'L'
   491  08E6  3461               	retlw	97	;'a'
   492  08E7  3476               	retlw	118	;'v'
   493  08E8  3461               	retlw	97	;'a'
   494  08E9  3464               	retlw	100	;'d'
   495  08EA  346F               	retlw	111	;'o'
   496  08EB  3420               	retlw	32	;' '
   497  08EC  344E               	retlw	78	;'N'
   498  08ED  346F               	retlw	111	;'o'
   499  08EE  3472               	retlw	114	;'r'
   500  08EF  346D               	retlw	109	;'m'
   501  08F0  3461               	retlw	97	;'a'
   502  08F1  346C               	retlw	108	;'l'
   503  08F2  3400               	retlw	0
   504  08F3                     STR_24:	
   505  08F3  342D               	retlw	45	;'-'
   506  08F4  344C               	retlw	76	;'L'
   507  08F5  3461               	retlw	97	;'a'
   508  08F6  3476               	retlw	118	;'v'
   509  08F7  3461               	retlw	97	;'a'
   510  08F8  3464               	retlw	100	;'d'
   511  08F9  346F               	retlw	111	;'o'
   512  08FA  3420               	retlw	32	;' '
   513  08FB  3452               	retlw	82	;'R'
   514  08FC  3461               	retlw	97	;'a'
   515  08FD  3470               	retlw	112	;'p'
   516  08FE  3469               	retlw	105	;'i'
   517  08FF  3464               	retlw	100	;'d'
   518  0900  346F               	retlw	111	;'o'
   519  0901  3400               	retlw	0
   520  0902                     STR_29:	
   521  0902  342D               	retlw	45	;'-'
   522  0903  344C               	retlw	76	;'L'
   523  0904  3461               	retlw	97	;'a'
   524  0905  3476               	retlw	118	;'v'
   525  0906  3461               	retlw	97	;'a'
   526  0907  3464               	retlw	100	;'d'
   527  0908  346F               	retlw	111	;'o'
   528  0909  3420               	retlw	32	;' '
   529  090A  344C               	retlw	76	;'L'
   530  090B  3465               	retlw	101	;'e'
   531  090C  346E               	retlw	110	;'n'
   532  090D  3474               	retlw	116	;'t'
   533  090E  346F               	retlw	111	;'o'
   534  090F  3400               	retlw	0
   535  0910                     STR_4:	
   536  0910  3444               	retlw	68	;'D'
   537  0911  3469               	retlw	105	;'i'
   538  0912  3472               	retlw	114	;'r'
   539  0913  3465               	retlw	101	;'e'
   540  0914  3463               	retlw	99	;'c'
   541  0915  3463               	retlw	99	;'c'
   542  0916  3469               	retlw	105	;'i'
   543  0917  346F               	retlw	111	;'o'
   544  0918  346E               	retlw	110	;'n'
   545  0919  343A               	retlw	58	;':'
   546  091A  3400               	retlw	0
   547  091B                     STR_38:	
   548  091B  342D               	retlw	45	;'-'
   549  091C  3441               	retlw	65	;'A'
   550  091D  3463               	retlw	99	;'c'
   551  091E  3465               	retlw	101	;'e'
   552  091F  3472               	retlw	114	;'r'
   553  0920  3463               	retlw	99	;'c'
   554  0921  3461               	retlw	97	;'a'
   555  0922  3420               	retlw	32	;' '
   556  0923  3464               	retlw	100	;'d'
   557  0924  3465               	retlw	101	;'e'
   558  0925  3400               	retlw	0
   559  0926                     STR_12:	
   560  0926  3425               	retlw	37	;'%'
   561  0927  3464               	retlw	100	;'d'
   562  0928  3420               	retlw	32	;' '
   563  0929  346D               	retlw	109	;'m'
   564  092A  3469               	retlw	105	;'i'
   565  092B  346E               	retlw	110	;'n'
   566  092C  3475               	retlw	117	;'u'
   567  092D  3474               	retlw	116	;'t'
   568  092E  346F               	retlw	111	;'o'
   569  092F  3473               	retlw	115	;'s'
   570  0930  3400               	retlw	0
   571  0931                     STR_2:	
   572  0931  346D               	retlw	109	;'m'
   573  0932  3461               	retlw	97	;'a'
   574  0933  347A               	retlw	122	;'z'
   575  0934  3461               	retlw	97	;'a'
   576  0935  3474               	retlw	116	;'t'
   577  0936  346C               	retlw	108	;'l'
   578  0937  3461               	retlw	97	;'a'
   579  0938  346E               	retlw	110	;'n'
   580  0939  3400               	retlw	0
   581  093A                     STR_14:	
   582  093A  342D               	retlw	45	;'-'
   583  093B  3449               	retlw	73	;'I'
   584  093C  346E               	retlw	110	;'n'
   585  093D  3469               	retlw	105	;'i'
   586  093E  3463               	retlw	99	;'c'
   587  093F  3469               	retlw	105	;'i'
   588  0940  3461               	retlw	97	;'a'
   589  0941  3472               	retlw	114	;'r'
   590  0942  3400               	retlw	0
   591  0943                     STR_18:	
   592  0943  342D               	retlw	45	;'-'
   593  0944  3453               	retlw	83	;'S'
   594  0945  3461               	retlw	97	;'a'
   595  0946  346C               	retlw	108	;'l'
   596  0947  3469               	retlw	105	;'i'
   597  0948  3472               	retlw	114	;'r'
   598  0949  3400               	retlw	0
   599  08B3                     
   600                           ; #config settings
   601  0000                     
   602                           	psect	cinit
   603  07D5                     start_initialization:	
   604  07D5                     __initialization:	
   605                           
   606                           ; Initialize objects allocated to BANK1
   607  07D5  1683               	bsf	3,5	;RP0=1, select bank1
   608  07D6  1303               	bcf	3,6	;RP1=0, select bank1
   609  07D7  120A  118A  2004  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   610  07DC  00B8               	movwf	__pdataBANK1& (0+127)
   611  07DD  120A  118A  2005  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   612  07E2  00B9               	movwf	(__pdataBANK1+1)& (0+127)
   613  07E3  120A  118A  2006  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   614  07E8  00BA               	movwf	(__pdataBANK1+2)& (0+127)
   615  07E9  120A  118A  2007  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   616  07EE  00BB               	movwf	(__pdataBANK1+3)& (0+127)
   617  07EF  120A  118A  2008  120A  118A  	fcall	__pidataBANK1+4	;fetch initializer
   618  07F4  00BC               	movwf	(__pdataBANK1+4)& (0+127)
   619                           
   620                           ; Clear objects allocated to BANK1
   621  07F5  1383               	bcf	3,7	;select IRP bank0
   622  07F6  30A0               	movlw	low __pbssBANK1
   623  07F7  0084               	movwf	4
   624  07F8  30B8               	movlw	low (__pbssBANK1+24)
   625  07F9  160A  118A  2729   	fcall	clear_ram0
   626  07FC                     end_of_initialization:	
   627                           ;End of C runtime variable initialization code
   628                           
   629  07FC                     __end_of__initialization:	
   630  07FC  0183               	clrf	3
   631  07FD  120A  118A  2E35   	ljmp	_main	;jump to C main() function
   632                           
   633                           	psect	bssBANK1
   634  00A0                     __pbssBANK1:	
   635  00A0                     _minutAux:	
   636  00A0                     	ds	2
   637  00A2                     _tiempo:	
   638  00A2                     	ds	2
   639  00A4                     _aux:	
   640  00A4                     	ds	20
   641                           
   642                           	psect	dataBANK1
   643  00B8                     __pdataBANK1:	
   644  00B8                     _estado:	
   645  00B8                     	ds	1
   646  00B9                     _PWM_freq:	
   647  00B9                     	ds	4
   648                           
   649                           	psect	clrtext
   650  1729                     clear_ram0:	
   651                           ;	Called with FSR containing the base address, and
   652                           ;	W with the last address+1
   653                           
   654  1729  0064               	clrwdt	;clear the watchdog before getting into this loop
   655  172A                     clrloop0:	
   656  172A  0180               	clrf	0	;clear RAM location pointed to by FSR
   657  172B  0A84               	incf	4,f	;increment pointer
   658  172C  0604               	xorwf	4,w	;XOR with final address
   659  172D  1903               	btfsc	3,2	;have we reached the end yet?
   660  172E  3400               	retlw	0	;all done for this memory range, return
   661  172F  0604               	xorwf	4,w	;XOR again to restore value
   662  1730  2F2A               	goto	clrloop0	;do the next byte
   663                           
   664                           	psect	cstackBANK1
   665  00BD                     __pcstackBANK1:	
   666  00BD                     main@op:	
   667                           
   668                           ; 2 bytes @ 0x0
   669  00BD                     	ds	2
   670  00BF                     main@opcionPrincipal:	
   671                           
   672                           ; 2 bytes @ 0x2
   673  00BF                     	ds	2
   674                           
   675                           	psect	cstackCOMMON
   676  0070                     __pcstackCOMMON:	
   677  0070                     ?_Lcd_Command:	
   678  0070                     ??_Lcd_Command:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_Lcd_CharCP:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ??_Lcd_CharCP:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_PWM_Initialize:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_Digital_Initialize:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ??_Digital_Initialize:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_ADC_Initialize:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ??_ADC_Initialize:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_Puerta:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_lavadoNormal:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_llenadoAgua:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_MensajeFinalizado:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_Lcd_Init:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_main:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_ADC_Read:	
   721                           ; 2 bytes @ 0x0
   722                           
   723  0070                     ?___awdiv:	
   724                           ; 2 bytes @ 0x0
   725                           
   726  0070                     ?___lwdiv:	
   727                           ; 2 bytes @ 0x0
   728                           
   729  0070                     ?___ftpack:	
   730                           ; 2 bytes @ 0x0
   731                           
   732  0070                     ?___aldiv:	
   733                           ; 3 bytes @ 0x0
   734                           
   735  0070                     Puerta@op:	
   736                           ; 4 bytes @ 0x0
   737                           
   738  0070                     ___awdiv@divisor:	
   739                           ; 2 bytes @ 0x0
   740                           
   741  0070                     ___lwdiv@divisor:	
   742                           ; 2 bytes @ 0x0
   743                           
   744  0070                     ___ftpack@arg:	
   745                           ; 2 bytes @ 0x0
   746                           
   747  0070                     ___aldiv@divisor:	
   748                           ; 3 bytes @ 0x0
   749                           
   750                           
   751                           ; 4 bytes @ 0x0
   752  0070                     	ds	2
   753  0072                     ??_Puerta:	
   754  0072                     ??_ADC_Read:	
   755                           ; 1 bytes @ 0x2
   756                           
   757  0072                     Lcd_CharCP@c:	
   758                           ; 1 bytes @ 0x2
   759                           
   760  0072                     Lcd_Command@command:	
   761                           ; 1 bytes @ 0x2
   762                           
   763  0072                     ___awdiv@dividend:	
   764                           ; 1 bytes @ 0x2
   765                           
   766  0072                     ___lwdiv@dividend:	
   767                           ; 2 bytes @ 0x2
   768                           
   769                           
   770                           ; 2 bytes @ 0x2
   771  0072                     	ds	1
   772  0073                     ??_Lcd_Init:	
   773  0073                     ?_Lcd_Text:	
   774                           ; 1 bytes @ 0x3
   775                           
   776  0073                     Lcd_Text@x:	
   777                           ; 1 bytes @ 0x3
   778                           
   779  0073                     ___ftpack@exp:	
   780                           ; 1 bytes @ 0x3
   781                           
   782                           
   783                           ; 1 bytes @ 0x3
   784  0073                     	ds	1
   785  0074                     ??___awdiv:	
   786  0074                     ??___lwdiv:	
   787                           ; 1 bytes @ 0x4
   788                           
   789  0074                     ADC_Read@channel:	
   790                           ; 1 bytes @ 0x4
   791                           
   792  0074                     ___ftpack@sign:	
   793                           ; 1 bytes @ 0x4
   794                           
   795  0074                     Lcd_Text@buffer:	
   796                           ; 1 bytes @ 0x4
   797                           
   798  0074                     ___aldiv@dividend:	
   799                           ; 2 bytes @ 0x4
   800                           
   801                           
   802                           ; 4 bytes @ 0x4
   803  0074                     	ds	1
   804  0075                     ??___ftpack:	
   805  0075                     Lcd_Init@data:	
   806                           ; 1 bytes @ 0x5
   807                           
   808  0075                     ___awdiv@counter:	
   809                           ; 1 bytes @ 0x5
   810                           
   811  0075                     ___lwdiv@quotient:	
   812                           ; 1 bytes @ 0x5
   813                           
   814                           
   815                           ; 2 bytes @ 0x5
   816  0075                     	ds	1
   817  0076                     ??_Lcd_Text:	
   818  0076                     ___awdiv@sign:	
   819                           ; 1 bytes @ 0x6
   820                           
   821                           
   822                           ; 1 bytes @ 0x6
   823  0076                     	ds	1
   824  0077                     Lcd_Text@y:	
   825  0077                     ___lwdiv@counter:	
   826                           ; 1 bytes @ 0x7
   827                           
   828  0077                     ___awdiv@quotient:	
   829                           ; 1 bytes @ 0x7
   830                           
   831                           
   832                           ; 2 bytes @ 0x7
   833  0077                     	ds	1
   834  0078                     ??___aldiv:	
   835  0078                     ?___lwmod:	
   836                           ; 1 bytes @ 0x8
   837                           
   838  0078                     ?___lwtoft:	
   839                           ; 2 bytes @ 0x8
   840                           
   841  0078                     Lcd_Text@data:	
   842                           ; 3 bytes @ 0x8
   843                           
   844  0078                     ___lwmod@divisor:	
   845                           ; 1 bytes @ 0x8
   846                           
   847  0078                     ___lwtoft@c:	
   848                           ; 2 bytes @ 0x8
   849                           
   850                           
   851                           ; 2 bytes @ 0x8
   852  0078                     	ds	1
   853  0079                     ??_PWM_Initialize:	
   854  0079                     ?_ImprimirMenuPrincipal:	
   855                           ; 1 bytes @ 0x9
   856                           
   857  0079                     ??_llenadoAgua:	
   858                           ; 1 bytes @ 0x9
   859                           
   860  0079                     ??_MensajeFinalizado:	
   861                           ; 1 bytes @ 0x9
   862                           
   863  0079                     ??___altoft:	
   864                           ; 1 bytes @ 0x9
   865                           
   866  0079                     ?___wmul:	
   867                           ; 1 bytes @ 0x9
   868                           
   869  0079                     ImprimirMenuPrincipal@casilla:	
   870                           ; 2 bytes @ 0x9
   871                           
   872  0079                     ___wmul@multiplier:	
   873                           ; 2 bytes @ 0x9
   874                           
   875                           
   876                           ; 2 bytes @ 0x9
   877  0079                     	ds	1
   878  007A                     ___lwmod@dividend:	
   879                           
   880                           ; 2 bytes @ 0xA
   881  007A                     	ds	1
   882  007B                     ??_ImprimirMenuPrincipal:	
   883  007B                     ??___lwtoft:	
   884                           ; 1 bytes @ 0xB
   885                           
   886  007B                     ___altoft@exp:	
   887                           ; 1 bytes @ 0xB
   888                           
   889  007B                     ___wmul@multiplicand:	
   890                           ; 1 bytes @ 0xB
   891                           
   892                           
   893                           ; 2 bytes @ 0xB
   894  007B                     	ds	1
   895  007C                     ??___lwmod:	
   896  007C                     ___altoft@sign:	
   897                           ; 1 bytes @ 0xC
   898                           
   899  007C                     MensajeFinalizado@i:	
   900                           ; 1 bytes @ 0xC
   901                           
   902                           
   903                           ; 2 bytes @ 0xC
   904  007C                     	ds	1
   905  007D                     ??___wmul:	
   906  007D                     ___lwmod@counter:	
   907                           ; 1 bytes @ 0xD
   908                           
   909                           
   910                           ; 1 bytes @ 0xD
   911  007D                     	ds	1
   912  007E                     ??_ImprimirMenuLavado:	
   913  007E                     ??_SacaraAgua:	
   914                           ; 1 bytes @ 0xE
   915                           
   916                           
   917                           	psect	cstackBANK0
   918  0020                     __pcstackBANK0:	
   919                           ; 1 bytes @ 0xE
   920                           
   921  0020                     ?___ftdiv:	
   922  0020                     ___aldiv@counter:	
   923                           ; 3 bytes @ 0x0
   924                           
   925  0020                     ___wmul@product:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0020                     ___ftdiv@f2:	
   929                           ; 2 bytes @ 0x0
   930                           
   931                           
   932                           ; 3 bytes @ 0x0
   933  0020                     	ds	1
   934  0021                     ___aldiv@sign:	
   935                           
   936                           ; 1 bytes @ 0x1
   937  0021                     	ds	1
   938  0022                     ?_sprintf:	
   939  0022                     sprintf@f:	
   940                           ; 2 bytes @ 0x2
   941                           
   942  0022                     ___aldiv@quotient:	
   943                           ; 2 bytes @ 0x2
   944                           
   945                           
   946                           ; 4 bytes @ 0x2
   947  0022                     	ds	1
   948  0023                     ___ftdiv@f1:	
   949                           
   950                           ; 3 bytes @ 0x3
   951  0023                     	ds	3
   952  0026                     ??___ftdiv:	
   953  0026                     ?___altoft:	
   954                           ; 1 bytes @ 0x6
   955                           
   956  0026                     ___altoft@c:	
   957                           ; 3 bytes @ 0x6
   958                           
   959                           
   960                           ; 4 bytes @ 0x6
   961  0026                     	ds	4
   962  002A                     ??_sprintf:	
   963  002A                     ___ftdiv@cntr:	
   964                           ; 1 bytes @ 0xA
   965                           
   966                           
   967                           ; 1 bytes @ 0xA
   968  002A                     	ds	1
   969  002B                     ___ftdiv@f3:	
   970                           
   971                           ; 3 bytes @ 0xB
   972  002B                     	ds	2
   973  002D                     sprintf@ap:	
   974                           
   975                           ; 1 bytes @ 0xD
   976  002D                     	ds	1
   977  002E                     sprintf@flag:	
   978  002E                     ___ftdiv@exp:	
   979                           ; 1 bytes @ 0xE
   980                           
   981                           
   982                           ; 1 bytes @ 0xE
   983  002E                     	ds	1
   984  002F                     sprintf@prec:	
   985  002F                     ___ftdiv@sign:	
   986                           ; 1 bytes @ 0xF
   987                           
   988                           
   989                           ; 1 bytes @ 0xF
   990  002F                     	ds	1
   991  0030                     ?___ftmul:	
   992  0030                     sprintf@val:	
   993                           ; 3 bytes @ 0x10
   994                           
   995  0030                     ___ftmul@f1:	
   996                           ; 2 bytes @ 0x10
   997                           
   998                           
   999                           ; 3 bytes @ 0x10
  1000  0030                     	ds	2
  1001  0032                     sprintf@sp:	
  1002                           
  1003                           ; 1 bytes @ 0x12
  1004  0032                     	ds	1
  1005  0033                     sprintf@c:	
  1006  0033                     ___ftmul@f2:	
  1007                           ; 1 bytes @ 0x13
  1008                           
  1009                           
  1010                           ; 3 bytes @ 0x13
  1011  0033                     	ds	1
  1012  0034                     ?_ImprimirMenuLavado:	
  1013  0034                     ImprimirMenuLavado@casilla:	
  1014                           ; 1 bytes @ 0x14
  1015                           
  1016                           
  1017                           ; 2 bytes @ 0x14
  1018  0034                     	ds	2
  1019  0036                     ??___ftmul:	
  1020                           
  1021                           ; 1 bytes @ 0x16
  1022  0036                     	ds	4
  1023  003A                     ___ftmul@exp:	
  1024                           
  1025                           ; 1 bytes @ 0x1A
  1026  003A                     	ds	1
  1027  003B                     ___ftmul@f3_as_product:	
  1028                           
  1029                           ; 3 bytes @ 0x1B
  1030  003B                     	ds	3
  1031  003E                     ___ftmul@cntr:	
  1032                           
  1033                           ; 1 bytes @ 0x1E
  1034  003E                     	ds	1
  1035  003F                     ___ftmul@sign:	
  1036                           
  1037                           ; 1 bytes @ 0x1F
  1038  003F                     	ds	1
  1039  0040                     ?___fttol:	
  1040  0040                     ___fttol@f1:	
  1041                           ; 4 bytes @ 0x20
  1042                           
  1043                           
  1044                           ; 3 bytes @ 0x20
  1045  0040                     	ds	4
  1046  0044                     ??___fttol:	
  1047                           
  1048                           ; 1 bytes @ 0x24
  1049  0044                     	ds	4
  1050  0048                     ___fttol@sign1:	
  1051                           
  1052                           ; 1 bytes @ 0x28
  1053  0048                     	ds	1
  1054  0049                     ___fttol@lval:	
  1055                           
  1056                           ; 4 bytes @ 0x29
  1057  0049                     	ds	4
  1058  004D                     ___fttol@exp1:	
  1059                           
  1060                           ; 1 bytes @ 0x2D
  1061  004D                     	ds	1
  1062  004E                     ?_PWM_Duty:	
  1063  004E                     PWM_Duty@duty:	
  1064                           ; 1 bytes @ 0x2E
  1065                           
  1066                           
  1067                           ; 2 bytes @ 0x2E
  1068  004E                     	ds	2
  1069  0050                     ??_PWM_Duty:	
  1070                           
  1071                           ; 1 bytes @ 0x30
  1072  0050                     	ds	4
  1073  0054                     ?_normal:	
  1074  0054                     ?_reversa:	
  1075                           ; 1 bytes @ 0x34
  1076                           
  1077  0054                     reversa@pwm:	
  1078                           ; 1 bytes @ 0x34
  1079                           
  1080  0054                     normal@pwm:	
  1081                           ; 2 bytes @ 0x34
  1082                           
  1083                           
  1084                           ; 2 bytes @ 0x34
  1085  0054                     	ds	2
  1086  0056                     reversa@t:	
  1087  0056                     normal@t:	
  1088                           ; 2 bytes @ 0x36
  1089                           
  1090                           
  1091                           ; 2 bytes @ 0x36
  1092  0056                     	ds	2
  1093  0058                     ??_normal:	
  1094  0058                     ??_reversa:	
  1095                           ; 1 bytes @ 0x38
  1096                           
  1097                           
  1098                           ; 1 bytes @ 0x38
  1099  0058                     	ds	2
  1100  005A                     reversa@minutAux:	
  1101  005A                     normal@minutAux:	
  1102                           ; 2 bytes @ 0x3A
  1103                           
  1104                           
  1105                           ; 2 bytes @ 0x3A
  1106  005A                     	ds	2
  1107  005C                     ?_SacaraAgua:	
  1108  005C                     SacaraAgua@count:	
  1109                           ; 1 bytes @ 0x3C
  1110                           
  1111                           
  1112                           ; 2 bytes @ 0x3C
  1113  005C                     	ds	2
  1114  005E                     SacaraAgua@i:	
  1115                           
  1116                           ; 2 bytes @ 0x3E
  1117  005E                     	ds	2
  1118  0060                     _SacaraAgua$501:	
  1119                           
  1120                           ; 2 bytes @ 0x40
  1121  0060                     	ds	2
  1122  0062                     ??_lavadoNormal:	
  1123                           
  1124                           ; 1 bytes @ 0x42
  1125  0062                     	ds	3
  1126  0065                     _lavadoNormal$417:	
  1127                           
  1128                           ; 2 bytes @ 0x45
  1129  0065                     	ds	2
  1130  0067                     _lavadoNormal$418:	
  1131                           
  1132                           ; 2 bytes @ 0x47
  1133  0067                     	ds	2
  1134  0069                     lavadoNormal@i:	
  1135                           
  1136                           ; 2 bytes @ 0x49
  1137  0069                     	ds	2
  1138  006B                     lavadoNormal@count:	
  1139                           
  1140                           ; 2 bytes @ 0x4B
  1141  006B                     	ds	2
  1142  006D                     ??_main:	
  1143                           
  1144                           ; 1 bytes @ 0x4D
  1145  006D                     	ds	3
  1146                           
  1147                           	psect	maintext
  1148  0635                     __pmaintext:	
  1149 ;;
  1150 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1151 ;;
  1152 ;; *************** function _main *****************
  1153 ;; Defined at:
  1154 ;;		line 47 in file "main.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  opcionPrinci    2    2[BANK1 ] int 
  1159 ;;  op              2    0[BANK1 ] int 
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  2  153[None  ] int 
  1162 ;; Registers used:
  1163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1164 ;; Tracked objects:
  1165 ;;		On entry : B00/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1169 ;;      Params:         0       0       0       0       0
  1170 ;;      Locals:         0       0       4       0       0
  1171 ;;      Temps:          0       3       0       0       0
  1172 ;;      Totals:         0       3       4       0       0
  1173 ;;Total ram usage:        7 bytes
  1174 ;; Hardware stack levels required when called:    6
  1175 ;; This function calls:
  1176 ;;		_ADC_Initialize
  1177 ;;		_Digital_Initialize
  1178 ;;		_ImprimirMenuLavado
  1179 ;;		_ImprimirMenuPrincipal
  1180 ;;		_Lcd_Command
  1181 ;;		_Lcd_Init
  1182 ;;		_Lcd_Text
  1183 ;;		_PWM_Duty
  1184 ;;		_PWM_Initialize
  1185 ;;		_Puerta
  1186 ;;		_lavadoNormal
  1187 ;; This function is called by:
  1188 ;;		Startup code after reset
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           
  1193                           ;psect for function _main
  1194  0635                     _main:	
  1195                           
  1196                           ;main.c: 48: Lcd_Init();
  1197                           
  1198                           ;incstack = 0
  1199                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1200  0635  120A  118A  2173  120A  118A  	fcall	_Lcd_Init
  1201                           
  1202                           ;main.c: 49: Lcd_Command(1);
  1203  063A  3001               	movlw	1
  1204  063B  120A  158A  26B8  120A  118A  	fcall	_Lcd_Command
  1205                           
  1206                           ;main.c: 50: Lcd_Command(12);
  1207  0640  300C               	movlw	12
  1208  0641  120A  158A  26B8  120A  118A  	fcall	_Lcd_Command
  1209                           
  1210                           ;main.c: 51: _delay((unsigned long)((100)*(20000000/4000.0)));
  1211  0646  3003               	movlw	3
  1212  0647  1283               	bcf	3,5	;RP0=0, select bank0
  1213  0648  1303               	bcf	3,6	;RP1=0, select bank0
  1214  0649  00EF               	movwf	??_main+2
  1215  064A  308A               	movlw	138
  1216  064B  00EE               	movwf	??_main+1
  1217  064C  3055               	movlw	85
  1218  064D  00ED               	movwf	??_main
  1219  064E                     u3177:	
  1220  064E  0BED               	decfsz	??_main,f
  1221  064F  2E4E               	goto	u3177
  1222  0650  0BEE               	decfsz	??_main+1,f
  1223  0651  2E4E               	goto	u3177
  1224  0652  0BEF               	decfsz	??_main+2,f
  1225  0653  2E4E               	goto	u3177
  1226                           
  1227                           ;main.c: 53: PWM_Initialize();
  1228  0654  120A  158A  2285  120A  118A  	fcall	_PWM_Initialize
  1229                           
  1230                           ;main.c: 54: Digital_Initialize();
  1231  0659  120A  158A  214E  120A  118A  	fcall	_Digital_Initialize
  1232                           
  1233                           ;main.c: 55: ADC_Initialize();
  1234  065E  120A  118A  2009  120A  118A  	fcall	_ADC_Initialize
  1235                           
  1236                           ;main.c: 56: PWM_Duty(0);
  1237  0663  3000               	movlw	0
  1238  0664  1283               	bcf	3,5	;RP0=0, select bank0
  1239  0665  1303               	bcf	3,6	;RP1=0, select bank0
  1240  0666  00CE               	movwf	PWM_Duty@duty
  1241  0667  00CF               	movwf	PWM_Duty@duty+1
  1242  0668  120A  118A  2012  120A  118A  	fcall	_PWM_Duty
  1243                           
  1244                           ;main.c: 58: int opcionPrincipal = 0;
  1245  066D  1683               	bsf	3,5	;RP0=1, select bank1
  1246  066E  1303               	bcf	3,6	;RP1=0, select bank1
  1247  066F  01BF               	clrf	main@opcionPrincipal^(0+128)
  1248  0670  01C0               	clrf	(main@opcionPrincipal+1)^(0+128)
  1249                           
  1250                           ;main.c: 59: int op = 0;
  1251  0671  01BD               	clrf	main@op^(0+128)
  1252  0672  01BE               	clrf	(main@op+1)^(0+128)
  1253                           
  1254                           ;main.c: 60: ImprimirMenuPrincipal(opcionPrincipal);
  1255  0673  0840               	movf	(main@opcionPrincipal+1)^(0+128),w
  1256  0674  00FA               	movwf	ImprimirMenuPrincipal@casilla+1
  1257  0675  083F               	movf	main@opcionPrincipal^(0+128),w
  1258  0676  00F9               	movwf	ImprimirMenuPrincipal@casilla
  1259  0677  120A  118A  23ED  120A  118A  	fcall	_ImprimirMenuPrincipal
  1260  067C                     l2430:	
  1261                           ;main.c: 62: while(1){
  1262                           
  1263                           
  1264                           ;main.c: 63: if(PORTBbits.RB0){
  1265  067C  1283               	bcf	3,5	;RP0=0, select bank0
  1266  067D  1303               	bcf	3,6	;RP1=0, select bank0
  1267  067E  1C06               	btfss	6,0	;volatile
  1268  067F  2EB9               	goto	l2454
  1269                           
  1270                           ;main.c: 64: opcionPrincipal ++;
  1271  0680  3001               	movlw	1
  1272  0681  1683               	bsf	3,5	;RP0=1, select bank1
  1273  0682  1303               	bcf	3,6	;RP1=0, select bank1
  1274  0683  07BF               	addwf	main@opcionPrincipal^(0+128),f
  1275  0684  1803               	skipnc
  1276  0685  0AC0               	incf	(main@opcionPrincipal+1)^(0+128),f
  1277  0686  3000               	movlw	0
  1278  0687  07C0               	addwf	(main@opcionPrincipal+1)^(0+128),f
  1279                           
  1280                           ;main.c: 69: }
  1281                           ;main.c: 71: if(estado == 'P'){
  1282                           
  1283                           ;main.c: 67: }else if(opcionPrincipal > 0 && estado == 'L'){
  1284  0688  3050               	movlw	80
  1285  0689  0638               	xorwf	_estado^(0+128),w
  1286  068A  1D03               	btfss	3,2
  1287  068B  2E96               	goto	l2448
  1288                           
  1289                           ;main.c: 72: ImprimirMenuPrincipal(opcionPrincipal );
  1290  068C  0840               	movf	(main@opcionPrincipal+1)^(0+128),w
  1291  068D  00FA               	movwf	ImprimirMenuPrincipal@casilla+1
  1292  068E  083F               	movf	main@opcionPrincipal^(0+128),w
  1293  068F  00F9               	movwf	ImprimirMenuPrincipal@casilla
  1294  0690  120A  118A  23ED  120A  118A  	fcall	_ImprimirMenuPrincipal
  1295                           
  1296                           ;main.c: 73: }else if(estado == 'L'){
  1297  0695  2EAB               	goto	l2452
  1298  0696                     l2448:	
  1299  0696  304C               	movlw	76
  1300  0697  1683               	bsf	3,5	;RP0=1, select bank1
  1301  0698  1303               	bcf	3,6	;RP1=0, select bank1
  1302  0699  0638               	xorwf	_estado^(0+128),w
  1303  069A  1D03               	btfss	3,2
  1304  069B  2EAB               	goto	l2452
  1305                           
  1306                           ;main.c: 74: ImprimirMenuLavado(opcionPrincipal);
  1307  069C  0840               	movf	(main@opcionPrincipal+1)^(0+128),w
  1308  069D  1283               	bcf	3,5	;RP0=0, select bank0
  1309  069E  1303               	bcf	3,6	;RP1=0, select bank0
  1310  069F  00B5               	movwf	ImprimirMenuLavado@casilla+1
  1311  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  1312  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  1313  06A2  083F               	movf	main@opcionPrincipal^(0+128),w
  1314  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  1315  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  1316  06A5  00B4               	movwf	ImprimirMenuLavado@casilla
  1317  06A6  120A  158A  2513  120A  118A  	fcall	_ImprimirMenuLavado
  1318  06AB                     l2452:	
  1319                           
  1320                           ;main.c: 75: }
  1321                           ;main.c: 76: _delay((unsigned long)((300)*(20000000/4000.0)));
  1322  06AB  3008               	movlw	8
  1323  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  1324  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  1325  06AE  00EF               	movwf	??_main+2
  1326  06AF  309D               	movlw	157
  1327  06B0  00EE               	movwf	??_main+1
  1328  06B1  3005               	movlw	5
  1329  06B2  00ED               	movwf	??_main
  1330  06B3                     u3187:	
  1331  06B3  0BED               	decfsz	??_main,f
  1332  06B4  2EB3               	goto	u3187
  1333  06B5  0BEE               	decfsz	??_main+1,f
  1334  06B6  2EB3               	goto	u3187
  1335  06B7  0BEF               	decfsz	??_main+2,f
  1336  06B8  2EB3               	goto	u3187
  1337  06B9                     l2454:	
  1338                           
  1339                           ;main.c: 77: }
  1340                           ;main.c: 79: if(PORTBbits.RB1){
  1341  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  1342  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  1343  06BB  1C86               	btfss	6,1	;volatile
  1344  06BC  2F0A               	goto	l2476
  1345                           
  1346                           ;main.c: 80: opcionPrincipal --;
  1347  06BD  30FF               	movlw	255
  1348  06BE  1683               	bsf	3,5	;RP0=1, select bank1
  1349  06BF  1303               	bcf	3,6	;RP1=0, select bank1
  1350  06C0  07BF               	addwf	main@opcionPrincipal^(0+128),f
  1351  06C1  1803               	skipnc
  1352  06C2  0AC0               	incf	(main@opcionPrincipal+1)^(0+128),f
  1353  06C3  30FF               	movlw	255
  1354  06C4  07C0               	addwf	(main@opcionPrincipal+1)^(0+128),f
  1355                           
  1356                           ;main.c: 81: if(opcionPrincipal < 0 && estado == 'P'){
  1357  06C5  1FC0               	btfss	(main@opcionPrincipal+1)^(0+128),7
  1358  06C6  2ECB               	goto	l163
  1359  06C7  3050               	movlw	80
  1360  06C8  0638               	xorwf	_estado^(0+128),w
  1361  06C9  1903               	btfsc	3,2
  1362  06CA  2ED1               	goto	l2466
  1363  06CB                     l163:	
  1364                           ;main.c: 83: }else if(opcionPrincipal < 0 && estado == 'L'){
  1365                           
  1366                           ;main.c: 82: opcionPrincipal = opcionPrincipal + 1;
  1367                           
  1368  06CB  1FC0               	btfss	(main@opcionPrincipal+1)^(0+128),7
  1369  06CC  2ED9               	goto	l164
  1370  06CD  304C               	movlw	76
  1371  06CE  0638               	xorwf	_estado^(0+128),w
  1372  06CF  1D03               	btfss	3,2
  1373  06D0  2ED9               	goto	l164
  1374  06D1                     l2466:	
  1375                           
  1376                           ;main.c: 84: opcionPrincipal = opcionPrincipal + 1;
  1377  06D1  083F               	movf	main@opcionPrincipal^(0+128),w
  1378  06D2  3E01               	addlw	1
  1379  06D3  00BF               	movwf	main@opcionPrincipal^(0+128)
  1380  06D4  0840               	movf	(main@opcionPrincipal+1)^(0+128),w
  1381  06D5  1803               	skipnc
  1382  06D6  3E01               	addlw	1
  1383  06D7  3E00               	addlw	0
  1384  06D8  00C0               	movwf	(main@opcionPrincipal+1)^(0+128)
  1385  06D9                     l164:	
  1386                           
  1387                           ;main.c: 85: }
  1388                           ;main.c: 87: if(estado == 'P'){
  1389  06D9  3050               	movlw	80
  1390  06DA  0638               	xorwf	_estado^(0+128),w
  1391  06DB  1D03               	btfss	3,2
  1392  06DC  2EE7               	goto	l2470
  1393                           
  1394                           ;main.c: 88: ImprimirMenuPrincipal(opcionPrincipal );
  1395  06DD  0840               	movf	(main@opcionPrincipal+1)^(0+128),w
  1396  06DE  00FA               	movwf	ImprimirMenuPrincipal@casilla+1
  1397  06DF  083F               	movf	main@opcionPrincipal^(0+128),w
  1398  06E0  00F9               	movwf	ImprimirMenuPrincipal@casilla
  1399  06E1  120A  118A  23ED  120A  118A  	fcall	_ImprimirMenuPrincipal
  1400                           
  1401                           ;main.c: 89: }else if(estado == 'L'){
  1402  06E6  2EFC               	goto	l2474
  1403  06E7                     l2470:	
  1404  06E7  304C               	movlw	76
  1405  06E8  1683               	bsf	3,5	;RP0=1, select bank1
  1406  06E9  1303               	bcf	3,6	;RP1=0, select bank1
  1407  06EA  0638               	xorwf	_estado^(0+128),w
  1408  06EB  1D03               	btfss	3,2
  1409  06EC  2EFC               	goto	l2474
  1410                           
  1411                           ;main.c: 90: ImprimirMenuLavado(opcionPrincipal);
  1412  06ED  0840               	movf	(main@opcionPrincipal+1)^(0+128),w
  1413  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  1414  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  1415  06F0  00B5               	movwf	ImprimirMenuLavado@casilla+1
  1416  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  1417  06F2  1303               	bcf	3,6	;RP1=0, select bank1
  1418  06F3  083F               	movf	main@opcionPrincipal^(0+128),w
  1419  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  1420  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  1421  06F6  00B4               	movwf	ImprimirMenuLavado@casilla
  1422  06F7  120A  158A  2513  120A  118A  	fcall	_ImprimirMenuLavado
  1423  06FC                     l2474:	
  1424                           
  1425                           ;main.c: 91: }
  1426                           ;main.c: 93: _delay((unsigned long)((300)*(20000000/4000.0)));
  1427  06FC  3008               	movlw	8
  1428  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  1429  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  1430  06FF  00EF               	movwf	??_main+2
  1431  0700  309D               	movlw	157
  1432  0701  00EE               	movwf	??_main+1
  1433  0702  3005               	movlw	5
  1434  0703  00ED               	movwf	??_main
  1435  0704                     u3197:	
  1436  0704  0BED               	decfsz	??_main,f
  1437  0705  2F04               	goto	u3197
  1438  0706  0BEE               	decfsz	??_main+1,f
  1439  0707  2F04               	goto	u3197
  1440  0708  0BEF               	decfsz	??_main+2,f
  1441  0709  2F04               	goto	u3197
  1442  070A                     l2476:	
  1443                           
  1444                           ;main.c: 94: }
  1445                           ;main.c: 96: if(estado == 'P'){
  1446  070A  3050               	movlw	80
  1447  070B  1683               	bsf	3,5	;RP0=1, select bank1
  1448  070C  1303               	bcf	3,6	;RP1=0, select bank1
  1449  070D  0638               	xorwf	_estado^(0+128),w
  1450  070E  1D03               	btfss	3,2
  1451  070F  2F8F               	goto	l2508
  1452                           
  1453                           ;main.c: 97: if(PORTBbits.RB2 && opcionPrincipal != 4 && opcionPrincipal != -1){
  1454  0710  1283               	bcf	3,5	;RP0=0, select bank0
  1455  0711  1303               	bcf	3,6	;RP1=0, select bank0
  1456  0712  1D06               	btfss	6,2	;volatile
  1457  0713  2F3D               	goto	l2490
  1458  0714  3004               	movlw	4
  1459  0715  1683               	bsf	3,5	;RP0=1, select bank1
  1460  0716  1303               	bcf	3,6	;RP1=0, select bank1
  1461  0717  063F               	xorwf	main@opcionPrincipal^(0+128),w
  1462  0718  0440               	iorwf	(main@opcionPrincipal+1)^(0+128),w
  1463  0719  1903               	btfsc	3,2
  1464  071A  2F3D               	goto	l2490
  1465  071B  0A3F               	incf	main@opcionPrincipal^(0+128),w
  1466  071C  1903               	btfsc	3,2
  1467  071D  0A40               	incf	(main@opcionPrincipal+1)^(0+128),w
  1468  071E  1903               	btfsc	3,2
  1469  071F  2F3D               	goto	l2490
  1470                           
  1471                           ;main.c: 98: estado = 'L';
  1472  0720  304C               	movlw	76
  1473  0721  1283               	bcf	3,5	;RP0=0, select bank0
  1474  0722  1303               	bcf	3,6	;RP1=0, select bank0
  1475  0723  00ED               	movwf	??_main
  1476  0724  086D               	movf	??_main,w
  1477  0725  1683               	bsf	3,5	;RP0=1, select bank1
  1478  0726  1303               	bcf	3,6	;RP1=0, select bank1
  1479  0727  00B8               	movwf	_estado^(0+128)
  1480                           
  1481                           ;main.c: 99: op = opcionPrincipal;
  1482  0728  0840               	movf	(main@opcionPrincipal+1)^(0+128),w
  1483  0729  00BE               	movwf	(main@op+1)^(0+128)
  1484  072A  083F               	movf	main@opcionPrincipal^(0+128),w
  1485  072B  00BD               	movwf	main@op^(0+128)
  1486                           
  1487                           ;main.c: 100: opcionPrincipal = 0;
  1488  072C  01BF               	clrf	main@opcionPrincipal^(0+128)
  1489  072D  01C0               	clrf	(main@opcionPrincipal+1)^(0+128)
  1490                           
  1491                           ;main.c: 101: ImprimirMenuLavado(opcionPrincipal);
  1492  072E  0840               	movf	(main@opcionPrincipal+1)^(0+128),w
  1493  072F  1283               	bcf	3,5	;RP0=0, select bank0
  1494  0730  1303               	bcf	3,6	;RP1=0, select bank0
  1495  0731  00B5               	movwf	ImprimirMenuLavado@casilla+1
  1496  0732  1683               	bsf	3,5	;RP0=1, select bank1
  1497  0733  1303               	bcf	3,6	;RP1=0, select bank1
  1498  0734  083F               	movf	main@opcionPrincipal^(0+128),w
  1499  0735  1283               	bcf	3,5	;RP0=0, select bank0
  1500  0736  1303               	bcf	3,6	;RP1=0, select bank0
  1501  0737  00B4               	movwf	ImprimirMenuLavado@casilla
  1502  0738  120A  158A  2513  120A  118A  	fcall	_ImprimirMenuLavado
  1503  073D                     l2490:	
  1504                           
  1505                           ;main.c: 102: }
  1506                           ;main.c: 103: if(PORTBbits.RB2 && opcionPrincipal == 4){
  1507  073D  1283               	bcf	3,5	;RP0=0, select bank0
  1508  073E  1303               	bcf	3,6	;RP1=0, select bank0
  1509  073F  1D06               	btfss	6,2	;volatile
  1510  0740  2F8F               	goto	l2508
  1511  0741  3004               	movlw	4
  1512  0742  1683               	bsf	3,5	;RP0=1, select bank1
  1513  0743  1303               	bcf	3,6	;RP1=0, select bank1
  1514  0744  063F               	xorwf	main@opcionPrincipal^(0+128),w
  1515  0745  0440               	iorwf	(main@opcionPrincipal+1)^(0+128),w
  1516  0746  1D03               	btfss	3,2
  1517  0747  2F8F               	goto	l2508
  1518                           
  1519                           ;main.c: 104: Lcd_Command(1);
  1520  0748  3001               	movlw	1
  1521  0749  120A  158A  26B8  120A  118A  	fcall	_Lcd_Command
  1522                           
  1523                           ;main.c: 105: Lcd_Text(1, 1, "Empresa: Reparacion");
  1524  074E  01F3               	clrf	Lcd_Text@x
  1525  074F  0AF3               	incf	Lcd_Text@x,f
  1526  0750  309F               	movlw	low (STR_1| (0+32768))
  1527  0751  00F4               	movwf	Lcd_Text@buffer
  1528  0752  3088               	movlw	high (STR_1| (0+32768))
  1529  0753  00F5               	movwf	Lcd_Text@buffer+1
  1530  0754  3001               	movlw	1
  1531  0755  120A  158A  223D  120A  118A  	fcall	_Lcd_Text
  1532                           
  1533                           ;main.c: 106: Lcd_Text(2, 1, "mazatlan");
  1534  075A  01F3               	clrf	Lcd_Text@x
  1535  075B  0AF3               	incf	Lcd_Text@x,f
  1536  075C  3031               	movlw	low (STR_2| (0+32768))
  1537  075D  00F4               	movwf	Lcd_Text@buffer
  1538  075E  3089               	movlw	high (STR_2| (0+32768))
  1539  075F  00F5               	movwf	Lcd_Text@buffer+1
  1540  0760  3002               	movlw	2
  1541  0761  120A  158A  223D  120A  118A  	fcall	_Lcd_Text
  1542                           
  1543                           ;main.c: 107: Lcd_Text(3, 1, "Telefono: 6692860319");
  1544  0766  01F3               	clrf	Lcd_Text@x
  1545  0767  0AF3               	incf	Lcd_Text@x,f
  1546  0768  308A               	movlw	low (STR_3| (0+32768))
  1547  0769  00F4               	movwf	Lcd_Text@buffer
  1548  076A  3088               	movlw	high (STR_3| (0+32768))
  1549  076B  00F5               	movwf	Lcd_Text@buffer+1
  1550  076C  3003               	movlw	3
  1551  076D  120A  158A  223D  120A  118A  	fcall	_Lcd_Text
  1552                           
  1553                           ;main.c: 108: Lcd_Text(4, 1, "Direccion:");
  1554  0772  01F3               	clrf	Lcd_Text@x
  1555  0773  0AF3               	incf	Lcd_Text@x,f
  1556  0774  3010               	movlw	low (STR_4| (0+32768))
  1557  0775  00F4               	movwf	Lcd_Text@buffer
  1558  0776  3089               	movlw	high (STR_4| (0+32768))
  1559  0777  00F5               	movwf	Lcd_Text@buffer+1
  1560  0778  3004               	movlw	4
  1561  0779  120A  158A  223D  120A  118A  	fcall	_Lcd_Text
  1562  077E                     l172:	
  1563                           ;main.c: 109: while(!PORTBbits.RB3);
  1564                           
  1565  077E  1283               	bcf	3,5	;RP0=0, select bank0
  1566  077F  1303               	bcf	3,6	;RP1=0, select bank0
  1567  0780  1D86               	btfss	6,3	;volatile
  1568  0781  2F7E               	goto	l172
  1569                           
  1570                           ;main.c: 110: opcionPrincipal = 0;
  1571  0782  1683               	bsf	3,5	;RP0=1, select bank1
  1572  0783  1303               	bcf	3,6	;RP1=0, select bank1
  1573  0784  01BF               	clrf	main@opcionPrincipal^(0+128)
  1574  0785  01C0               	clrf	(main@opcionPrincipal+1)^(0+128)
  1575                           
  1576                           ;main.c: 111: ImprimirMenuPrincipal(opcionPrincipal);
  1577  0786  0840               	movf	(main@opcionPrincipal+1)^(0+128),w
  1578  0787  00FA               	movwf	ImprimirMenuPrincipal@casilla+1
  1579  0788  083F               	movf	main@opcionPrincipal^(0+128),w
  1580  0789  00F9               	movwf	ImprimirMenuPrincipal@casilla
  1581  078A  120A  118A  23ED  120A  118A  	fcall	_ImprimirMenuPrincipal
  1582  078F                     l2508:	
  1583                           
  1584                           ;main.c: 112: }
  1585                           ;main.c: 113: }
  1586                           ;main.c: 115: if(estado == 'L'){
  1587  078F  304C               	movlw	76
  1588  0790  1683               	bsf	3,5	;RP0=1, select bank1
  1589  0791  1303               	bcf	3,6	;RP1=0, select bank1
  1590  0792  0638               	xorwf	_estado^(0+128),w
  1591  0793  1D03               	btfss	3,2
  1592  0794  2E7C               	goto	l2430
  1593                           
  1594                           ;main.c: 116: if((PORTBbits.RB2 && opcionPrincipal == 1) || PORTBbits.RB3){
  1595  0795  1283               	bcf	3,5	;RP0=0, select bank0
  1596  0796  1303               	bcf	3,6	;RP1=0, select bank0
  1597  0797  1D06               	btfss	6,2	;volatile
  1598  0798  2F9F               	goto	l180
  1599  0799  1683               	bsf	3,5	;RP0=1, select bank1
  1600  079A  1303               	bcf	3,6	;RP1=0, select bank1
  1601  079B  033F               	decf	main@opcionPrincipal^(0+128),w
  1602  079C  0440               	iorwf	(main@opcionPrincipal+1)^(0+128),w
  1603  079D  1903               	btfsc	3,2
  1604  079E  2FA2               	goto	l2514
  1605  079F                     l180:	
  1606  079F  1283               	bcf	3,5	;RP0=0, select bank0
  1607  07A0  1D86               	btfss	6,3	;volatile
  1608  07A1  2FB4               	goto	l2520
  1609  07A2                     l2514:	
  1610                           
  1611                           ;main.c: 117: estado = 'P';
  1612  07A2  3050               	movlw	80
  1613  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  1614  07A4  00ED               	movwf	??_main
  1615  07A5  086D               	movf	??_main,w
  1616  07A6  1683               	bsf	3,5	;RP0=1, select bank1
  1617  07A7  1303               	bcf	3,6	;RP1=0, select bank1
  1618  07A8  00B8               	movwf	_estado^(0+128)
  1619                           
  1620                           ;main.c: 118: opcionPrincipal = 0;
  1621  07A9  01BF               	clrf	main@opcionPrincipal^(0+128)
  1622  07AA  01C0               	clrf	(main@opcionPrincipal+1)^(0+128)
  1623                           
  1624                           ;main.c: 119: ImprimirMenuPrincipal(opcionPrincipal);
  1625  07AB  0840               	movf	(main@opcionPrincipal+1)^(0+128),w
  1626  07AC  00FA               	movwf	ImprimirMenuPrincipal@casilla+1
  1627  07AD  083F               	movf	main@opcionPrincipal^(0+128),w
  1628  07AE  00F9               	movwf	ImprimirMenuPrincipal@casilla
  1629  07AF  120A  118A  23ED  120A  118A  	fcall	_ImprimirMenuPrincipal
  1630  07B4                     l2520:	
  1631                           
  1632                           ;main.c: 120: }
  1633                           ;main.c: 121: if(PORTBbits.RB2){
  1634  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  1635  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  1636  07B6  1D06               	btfss	6,2	;volatile
  1637  07B7  2E7C               	goto	l2430
  1638                           
  1639                           ;main.c: 122: Puerta(1);
  1640  07B8  3001               	movlw	1
  1641  07B9  00F0               	movwf	Puerta@op
  1642  07BA  3000               	movlw	0
  1643  07BB  00F1               	movwf	Puerta@op+1
  1644  07BC  160A  118A  2731  120A  118A  	fcall	_Puerta
  1645                           
  1646                           ;main.c: 124: if(op == 0){
  1647  07C1  1683               	bsf	3,5	;RP0=1, select bank1
  1648  07C2  1303               	bcf	3,6	;RP1=0, select bank1
  1649  07C3  083D               	movf	main@op^(0+128),w
  1650  07C4  043E               	iorwf	(main@op+1)^(0+128),w
  1651  07C5  1D03               	btfss	3,2
  1652  07C6  2FCC               	goto	l2528
  1653                           
  1654                           ;main.c: 125: lavadoNormal();
  1655  07C7  120A  118A  250D  120A  118A  	fcall	_lavadoNormal
  1656  07CC                     l2528:	
  1657                           
  1658                           ;main.c: 126: }
  1659                           ;main.c: 127: Puerta(0);
  1660  07CC  3000               	movlw	0
  1661  07CD  00F0               	movwf	Puerta@op
  1662  07CE  00F1               	movwf	Puerta@op+1
  1663  07CF  160A  118A  2731  120A  118A  	fcall	_Puerta
  1664  07D4  2E7C               	goto	l2430
  1665  07D5                     __end_of_main:	
  1666                           ;main.c: 128: }
  1667                           ;main.c: 129: }
  1668                           ;main.c: 130: }
  1669                           ;main.c: 132: return 0;
  1670                           ;	Return value of _main is never used
  1671                           
  1672                           
  1673                           	psect	text1
  1674  050D                     __ptext1:	
  1675 ;; *************** function _lavadoNormal *****************
  1676 ;; Defined at:
  1677 ;;		line 135 in file "main.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;  count           2   75[BANK0 ] int 
  1682 ;;  i               2   73[BANK0 ] int 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1692 ;;      Params:         0       0       0       0       0
  1693 ;;      Locals:         0       8       0       0       0
  1694 ;;      Temps:          0       3       0       0       0
  1695 ;;      Totals:         0      11       0       0       0
  1696 ;;Total ram usage:       11 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    5
  1699 ;; This function calls:
  1700 ;;		_Lcd_Command
  1701 ;;		_Lcd_Text
  1702 ;;		_MensajeFinalizado
  1703 ;;		_SacaraAgua
  1704 ;;		___awdiv
  1705 ;;		___wmul
  1706 ;;		_llenadoAgua
  1707 ;;		_normal
  1708 ;;		_reversa
  1709 ;; This function is called by:
  1710 ;;		_main
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           
  1715                           ;psect for function _lavadoNormal
  1716  050D                     _lavadoNormal:	
  1717                           
  1718                           ;main.c: 137: Lcd_Command(1);
  1719                           
  1720                           ;incstack = 0
  1721                           ; Regs used in _lavadoNormal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1722  050D  3001               	movlw	1
  1723  050E  120A  158A  26B8  120A  118A  	fcall	_Lcd_Command
  1724                           
  1725                           ;main.c: 138: for (int i = 0; i < 2; i++) {
  1726  0513  1283               	bcf	3,5	;RP0=0, select bank0
  1727  0514  1303               	bcf	3,6	;RP1=0, select bank0
  1728  0515  01E9               	clrf	lavadoNormal@i
  1729  0516  01EA               	clrf	lavadoNormal@i+1
  1730  0517  086A               	movf	lavadoNormal@i+1,w
  1731  0518  3A80               	xorlw	128
  1732  0519  00FF               	movwf	127
  1733  051A  3080               	movlw	128
  1734  051B  027F               	subwf	127,w
  1735  051C  1D03               	skipz
  1736  051D  2D20               	goto	u2885
  1737  051E  3002               	movlw	2
  1738  051F  0269               	subwf	lavadoNormal@i,w
  1739  0520                     u2885:	
  1740  0520  1803               	btfsc	3,0
  1741  0521  2E31               	goto	l2372
  1742  0522                     l2334:	
  1743                           
  1744                           ;main.c: 139: llenadoAgua();
  1745  0522  160A  118A  277E  120A  118A  	fcall	_llenadoAgua
  1746                           
  1747                           ;main.c: 141: int count = (tiempo/2)*60;
  1748  0527  3002               	movlw	2
  1749  0528  00F0               	movwf	___awdiv@divisor
  1750  0529  3000               	movlw	0
  1751  052A  00F1               	movwf	___awdiv@divisor+1
  1752  052B  1683               	bsf	3,5	;RP0=1, select bank1
  1753  052C  1303               	bcf	3,6	;RP1=0, select bank1
  1754  052D  0823               	movf	(_tiempo+1)^(0+128),w
  1755  052E  00F3               	movwf	___awdiv@dividend+1
  1756  052F  0822               	movf	_tiempo^(0+128),w
  1757  0530  00F2               	movwf	___awdiv@dividend
  1758  0531  120A  158A  22D4  120A  118A  	fcall	___awdiv
  1759  0536  0871               	movf	?___awdiv+1,w
  1760  0537  00FA               	movwf	___wmul@multiplier+1
  1761  0538  0870               	movf	?___awdiv,w
  1762  0539  00F9               	movwf	___wmul@multiplier
  1763  053A  303C               	movlw	60
  1764  053B  00FB               	movwf	___wmul@multiplicand
  1765  053C  3000               	movlw	0
  1766  053D  00FC               	movwf	___wmul@multiplicand+1
  1767  053E  160A  118A  2757  120A  118A  	fcall	___wmul
  1768  0543  087A               	movf	?___wmul+1,w
  1769  0544  1283               	bcf	3,5	;RP0=0, select bank0
  1770  0545  1303               	bcf	3,6	;RP1=0, select bank0
  1771  0546  00EC               	movwf	lavadoNormal@count+1
  1772  0547  0879               	movf	?___wmul,w
  1773  0548  00EB               	movwf	lavadoNormal@count
  1774  0549                     l2364:	
  1775                           ;main.c: 142: while(count > 300) {
  1776                           
  1777  0549  1283               	bcf	3,5	;RP0=0, select bank0
  1778  054A  1303               	bcf	3,6	;RP1=0, select bank0
  1779  054B  086C               	movf	lavadoNormal@count+1,w
  1780  054C  3A80               	xorlw	128
  1781  054D  00FF               	movwf	127
  1782  054E  3081               	movlw	129
  1783  054F  027F               	subwf	127,w
  1784  0550  1D03               	skipz
  1785  0551  2D54               	goto	u2915
  1786  0552  302D               	movlw	45
  1787  0553  026B               	subwf	lavadoNormal@count,w
  1788  0554                     u2915:	
  1789  0554  1C03               	btfss	3,0
  1790  0555  2E0D               	goto	l200
  1791                           
  1792                           ;main.c: 143: Lcd_Text(2, 1, "      LAVADO        ");
  1793  0556  01F3               	clrf	Lcd_Text@x
  1794  0557  0AF3               	incf	Lcd_Text@x,f
  1795  0558  3060               	movlw	low (STR_5| (0+32768))
  1796  0559  00F4               	movwf	Lcd_Text@buffer
  1797  055A  3088               	movlw	high (STR_5| (0+32768))
  1798  055B  00F5               	movwf	Lcd_Text@buffer+1
  1799  055C  3002               	movlw	2
  1800  055D  120A  158A  223D  120A  118A  	fcall	_Lcd_Text
  1801                           
  1802                           ;main.c: 144: normal(600, i == 0 ? count+(tiempo/2*60) : count);
  1803  0562  1283               	bcf	3,5	;RP0=0, select bank0
  1804  0563  1303               	bcf	3,6	;RP1=0, select bank0
  1805  0564  0869               	movf	lavadoNormal@i,w
  1806  0565  046A               	iorwf	lavadoNormal@i+1,w
  1807  0566  1903               	btfsc	3,2
  1808  0567  2D6D               	goto	l2344
  1809  0568  086C               	movf	lavadoNormal@count+1,w
  1810  0569  00E6               	movwf	_lavadoNormal$417+1
  1811  056A  086B               	movf	lavadoNormal@count,w
  1812  056B  00E5               	movwf	_lavadoNormal$417
  1813  056C  2D93               	goto	l2346
  1814  056D                     l2344:	
  1815  056D  3002               	movlw	2
  1816  056E  00F0               	movwf	___awdiv@divisor
  1817  056F  3000               	movlw	0
  1818  0570  00F1               	movwf	___awdiv@divisor+1
  1819  0571  1683               	bsf	3,5	;RP0=1, select bank1
  1820  0572  1303               	bcf	3,6	;RP1=0, select bank1
  1821  0573  0823               	movf	(_tiempo+1)^(0+128),w
  1822  0574  00F3               	movwf	___awdiv@dividend+1
  1823  0575  0822               	movf	_tiempo^(0+128),w
  1824  0576  00F2               	movwf	___awdiv@dividend
  1825  0577  120A  158A  22D4  120A  118A  	fcall	___awdiv
  1826  057C  0871               	movf	?___awdiv+1,w
  1827  057D  00FA               	movwf	___wmul@multiplier+1
  1828  057E  0870               	movf	?___awdiv,w
  1829  057F  00F9               	movwf	___wmul@multiplier
  1830  0580  303C               	movlw	60
  1831  0581  00FB               	movwf	___wmul@multiplicand
  1832  0582  3000               	movlw	0
  1833  0583  00FC               	movwf	___wmul@multiplicand+1
  1834  0584  160A  118A  2757  120A  118A  	fcall	___wmul
  1835  0589  1283               	bcf	3,5	;RP0=0, select bank0
  1836  058A  1303               	bcf	3,6	;RP1=0, select bank0
  1837  058B  086B               	movf	lavadoNormal@count,w
  1838  058C  0779               	addwf	?___wmul,w
  1839  058D  00E5               	movwf	_lavadoNormal$417
  1840  058E  086C               	movf	lavadoNormal@count+1,w
  1841  058F  1803               	skipnc
  1842  0590  0A6C               	incf	lavadoNormal@count+1,w
  1843  0591  077A               	addwf	?___wmul+1,w
  1844  0592  00E6               	movwf	_lavadoNormal$417+1
  1845  0593                     l2346:	
  1846  0593  3058               	movlw	88
  1847  0594  00D4               	movwf	normal@pwm
  1848  0595  3002               	movlw	2
  1849  0596  00D5               	movwf	normal@pwm+1
  1850  0597  0866               	movf	_lavadoNormal$417+1,w
  1851  0598  00D7               	movwf	normal@t+1
  1852  0599  0865               	movf	_lavadoNormal$417,w
  1853  059A  00D6               	movwf	normal@t
  1854  059B  120A  158A  2399  120A  118A  	fcall	_normal
  1855                           
  1856                           ;main.c: 145: count--;
  1857  05A0  30FF               	movlw	255
  1858  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  1859  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  1860  05A3  07EB               	addwf	lavadoNormal@count,f
  1861  05A4  1803               	skipnc
  1862  05A5  0AEC               	incf	lavadoNormal@count+1,f
  1863  05A6  30FF               	movlw	255
  1864  05A7  07EC               	addwf	lavadoNormal@count+1,f
  1865                           
  1866                           ;main.c: 146: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1867  05A8  301A               	movlw	26
  1868  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  1869  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  1870  05AB  00E4               	movwf	??_lavadoNormal+2
  1871  05AC  305E               	movlw	94
  1872  05AD  00E3               	movwf	??_lavadoNormal+1
  1873  05AE  306D               	movlw	109
  1874  05AF  00E2               	movwf	??_lavadoNormal
  1875  05B0                     u3207:	
  1876  05B0  0BE2               	decfsz	??_lavadoNormal,f
  1877  05B1  2DB0               	goto	u3207
  1878  05B2  0BE3               	decfsz	??_lavadoNormal+1,f
  1879  05B3  2DB0               	goto	u3207
  1880  05B4  0BE4               	decfsz	??_lavadoNormal+2,f
  1881  05B5  2DB0               	goto	u3207
  1882  05B6  2DB7               	nop2
  1883                           
  1884                           ;main.c: 147: reversa(600, i == 0 ? count+(tiempo/2*60) : count);
  1885  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1886  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1887  05B9  0869               	movf	lavadoNormal@i,w
  1888  05BA  046A               	iorwf	lavadoNormal@i+1,w
  1889  05BB  1903               	btfsc	3,2
  1890  05BC  2DC2               	goto	l2356
  1891  05BD  086C               	movf	lavadoNormal@count+1,w
  1892  05BE  00E8               	movwf	_lavadoNormal$418+1
  1893  05BF  086B               	movf	lavadoNormal@count,w
  1894  05C0  00E7               	movwf	_lavadoNormal$418
  1895  05C1  2DE8               	goto	l2358
  1896  05C2                     l2356:	
  1897  05C2  3002               	movlw	2
  1898  05C3  00F0               	movwf	___awdiv@divisor
  1899  05C4  3000               	movlw	0
  1900  05C5  00F1               	movwf	___awdiv@divisor+1
  1901  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  1902  05C7  1303               	bcf	3,6	;RP1=0, select bank1
  1903  05C8  0823               	movf	(_tiempo+1)^(0+128),w
  1904  05C9  00F3               	movwf	___awdiv@dividend+1
  1905  05CA  0822               	movf	_tiempo^(0+128),w
  1906  05CB  00F2               	movwf	___awdiv@dividend
  1907  05CC  120A  158A  22D4  120A  118A  	fcall	___awdiv
  1908  05D1  0871               	movf	?___awdiv+1,w
  1909  05D2  00FA               	movwf	___wmul@multiplier+1
  1910  05D3  0870               	movf	?___awdiv,w
  1911  05D4  00F9               	movwf	___wmul@multiplier
  1912  05D5  303C               	movlw	60
  1913  05D6  00FB               	movwf	___wmul@multiplicand
  1914  05D7  3000               	movlw	0
  1915  05D8  00FC               	movwf	___wmul@multiplicand+1
  1916  05D9  160A  118A  2757  120A  118A  	fcall	___wmul
  1917  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1918  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1919  05E0  086B               	movf	lavadoNormal@count,w
  1920  05E1  0779               	addwf	?___wmul,w
  1921  05E2  00E7               	movwf	_lavadoNormal$418
  1922  05E3  086C               	movf	lavadoNormal@count+1,w
  1923  05E4  1803               	skipnc
  1924  05E5  0A6C               	incf	lavadoNormal@count+1,w
  1925  05E6  077A               	addwf	?___wmul+1,w
  1926  05E7  00E8               	movwf	_lavadoNormal$418+1
  1927  05E8                     l2358:	
  1928  05E8  3058               	movlw	88
  1929  05E9  00D4               	movwf	reversa@pwm
  1930  05EA  3002               	movlw	2
  1931  05EB  00D5               	movwf	reversa@pwm+1
  1932  05EC  0868               	movf	_lavadoNormal$418+1,w
  1933  05ED  00D7               	movwf	reversa@t+1
  1934  05EE  0867               	movf	_lavadoNormal$418,w
  1935  05EF  00D6               	movwf	reversa@t
  1936  05F0  120A  158A  2414  120A  118A  	fcall	_reversa
  1937                           
  1938                           ;main.c: 148: count--;
  1939  05F5  30FF               	movlw	255
  1940  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  1941  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  1942  05F8  07EB               	addwf	lavadoNormal@count,f
  1943  05F9  1803               	skipnc
  1944  05FA  0AEC               	incf	lavadoNormal@count+1,f
  1945  05FB  30FF               	movlw	255
  1946  05FC  07EC               	addwf	lavadoNormal@count+1,f
  1947                           
  1948                           ;main.c: 149: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1949  05FD  301A               	movlw	26
  1950  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  1951  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  1952  0600  00E4               	movwf	??_lavadoNormal+2
  1953  0601  305E               	movlw	94
  1954  0602  00E3               	movwf	??_lavadoNormal+1
  1955  0603  306D               	movlw	109
  1956  0604  00E2               	movwf	??_lavadoNormal
  1957  0605                     u3217:	
  1958  0605  0BE2               	decfsz	??_lavadoNormal,f
  1959  0606  2E05               	goto	u3217
  1960  0607  0BE3               	decfsz	??_lavadoNormal+1,f
  1961  0608  2E05               	goto	u3217
  1962  0609  0BE4               	decfsz	??_lavadoNormal+2,f
  1963  060A  2E05               	goto	u3217
  1964  060B  2E0C               	nop2
  1965  060C  2D49               	goto	l2364
  1966  060D                     l200:	
  1967                           
  1968                           ;main.c: 150: }
  1969                           ;main.c: 151: PORTDbits.RD0 = 0;
  1970  060D  1283               	bcf	3,5	;RP0=0, select bank0
  1971  060E  1303               	bcf	3,6	;RP1=0, select bank0
  1972  060F  1008               	bcf	8,0	;volatile
  1973                           
  1974                           ;main.c: 152: PORTDbits.RD1 = 0;
  1975  0610  1088               	bcf	8,1	;volatile
  1976                           
  1977                           ;main.c: 153: SacaraAgua(count, i);
  1978  0611  086C               	movf	lavadoNormal@count+1,w
  1979  0612  00DD               	movwf	SacaraAgua@count+1
  1980  0613  086B               	movf	lavadoNormal@count,w
  1981  0614  00DC               	movwf	SacaraAgua@count
  1982  0615  086A               	movf	lavadoNormal@i+1,w
  1983  0616  00DF               	movwf	SacaraAgua@i+1
  1984  0617  0869               	movf	lavadoNormal@i,w
  1985  0618  00DE               	movwf	SacaraAgua@i
  1986  0619  120A  158A  248F  120A  118A  	fcall	_SacaraAgua
  1987  061E  3001               	movlw	1
  1988  061F  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0620  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0621  07E9               	addwf	lavadoNormal@i,f
  1991  0622  1803               	skipnc
  1992  0623  0AEA               	incf	lavadoNormal@i+1,f
  1993  0624  3000               	movlw	0
  1994  0625  07EA               	addwf	lavadoNormal@i+1,f
  1995  0626  086A               	movf	lavadoNormal@i+1,w
  1996  0627  3A80               	xorlw	128
  1997  0628  00FF               	movwf	127
  1998  0629  3080               	movlw	128
  1999  062A  027F               	subwf	127,w
  2000  062B  1D03               	skipz
  2001  062C  2E2F               	goto	u2925
  2002  062D  3002               	movlw	2
  2003  062E  0269               	subwf	lavadoNormal@i,w
  2004  062F                     u2925:	
  2005  062F  1C03               	skipc
  2006  0630  2D22               	goto	l2334
  2007  0631                     l2372:	
  2008                           
  2009                           ;main.c: 154: }
  2010                           ;main.c: 156: MensajeFinalizado();
  2011  0631  120A  158A  21F7   	fcall	_MensajeFinalizado
  2012  0634  0008               	return
  2013  0635                     __end_of_lavadoNormal:	
  2014                           
  2015                           	psect	text2
  2016  0C14                     __ptext2:	
  2017 ;; *************** function _reversa *****************
  2018 ;; Defined at:
  2019 ;;		line 170 in file "main.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  pwm             2   52[BANK0 ] int 
  2022 ;;  t               2   54[BANK0 ] int 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  minutAux        2   58[BANK0 ] int 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      void 
  2027 ;; Registers used:
  2028 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2034 ;;      Params:         0       4       0       0       0
  2035 ;;      Locals:         0       2       0       0       0
  2036 ;;      Temps:          0       2       0       0       0
  2037 ;;      Totals:         0       8       0       0       0
  2038 ;;Total ram usage:        8 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    3
  2041 ;; This function calls:
  2042 ;;		_Lcd_Text
  2043 ;;		_PWM_Duty
  2044 ;;		___awdiv
  2045 ;;		___wmul
  2046 ;;		_sprintf
  2047 ;; This function is called by:
  2048 ;;		_lavadoNormal
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           
  2053                           ;psect for function _reversa
  2054  0C14                     _reversa:	
  2055                           
  2056                           ;main.c: 171: PWM_Duty(pwm);
  2057                           
  2058                           ;incstack = 0
  2059                           ; Regs used in _reversa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2060  0C14  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0C15  1303               	bcf	3,6	;RP1=0, select bank0
  2062  0C16  0855               	movf	reversa@pwm+1,w
  2063  0C17  00CF               	movwf	PWM_Duty@duty+1
  2064  0C18  0854               	movf	reversa@pwm,w
  2065  0C19  00CE               	movwf	PWM_Duty@duty
  2066  0C1A  120A  118A  2012  120A  158A  	fcall	_PWM_Duty
  2067                           
  2068                           ;main.c: 172: PORTDbits.RD0 = 0;
  2069  0C1F  1283               	bcf	3,5	;RP0=0, select bank0
  2070  0C20  1303               	bcf	3,6	;RP1=0, select bank0
  2071  0C21  1008               	bcf	8,0	;volatile
  2072                           
  2073                           ;main.c: 173: PORTDbits.RD1 = 1;
  2074  0C22  1488               	bsf	8,1	;volatile
  2075                           
  2076                           ;main.c: 174: int minutAux = t/60;
  2077  0C23  303C               	movlw	60
  2078  0C24  00F0               	movwf	___awdiv@divisor
  2079  0C25  3000               	movlw	0
  2080  0C26  00F1               	movwf	___awdiv@divisor+1
  2081  0C27  0857               	movf	reversa@t+1,w
  2082  0C28  00F3               	movwf	___awdiv@dividend+1
  2083  0C29  0856               	movf	reversa@t,w
  2084  0C2A  00F2               	movwf	___awdiv@dividend
  2085  0C2B  120A  158A  22D4  120A  158A  	fcall	___awdiv
  2086  0C30  0871               	movf	?___awdiv+1,w
  2087  0C31  1283               	bcf	3,5	;RP0=0, select bank0
  2088  0C32  1303               	bcf	3,6	;RP1=0, select bank0
  2089  0C33  00DB               	movwf	reversa@minutAux+1
  2090  0C34  0870               	movf	?___awdiv,w
  2091  0C35  00DA               	movwf	reversa@minutAux
  2092                           
  2093                           ;main.c: 175: sprintf(aux,"      %i:%i:%i  ", (minutAux/60), (t/60), (t-minutAux*60));
  2094  0C36  30B3               	movlw	low (STR_7| (0+32768))
  2095  0C37  00A2               	movwf	sprintf@f
  2096  0C38  3088               	movlw	high (STR_7| (0+32768))
  2097  0C39  00A3               	movwf	sprintf@f+1
  2098  0C3A  303C               	movlw	60
  2099  0C3B  00F0               	movwf	___awdiv@divisor
  2100  0C3C  3000               	movlw	0
  2101  0C3D  00F1               	movwf	___awdiv@divisor+1
  2102  0C3E  085B               	movf	reversa@minutAux+1,w
  2103  0C3F  00F3               	movwf	___awdiv@dividend+1
  2104  0C40  085A               	movf	reversa@minutAux,w
  2105  0C41  00F2               	movwf	___awdiv@dividend
  2106  0C42  120A  158A  22D4  120A  158A  	fcall	___awdiv
  2107  0C47  0871               	movf	?___awdiv+1,w
  2108  0C48  1283               	bcf	3,5	;RP0=0, select bank0
  2109  0C49  1303               	bcf	3,6	;RP1=0, select bank0
  2110  0C4A  00A5               	movwf	?_sprintf+3
  2111  0C4B  0870               	movf	?___awdiv,w
  2112  0C4C  00A4               	movwf	?_sprintf+2
  2113  0C4D  303C               	movlw	60
  2114  0C4E  00F0               	movwf	___awdiv@divisor
  2115  0C4F  3000               	movlw	0
  2116  0C50  00F1               	movwf	___awdiv@divisor+1
  2117  0C51  0857               	movf	reversa@t+1,w
  2118  0C52  00F3               	movwf	___awdiv@dividend+1
  2119  0C53  0856               	movf	reversa@t,w
  2120  0C54  00F2               	movwf	___awdiv@dividend
  2121  0C55  120A  158A  22D4  120A  158A  	fcall	___awdiv
  2122  0C5A  0871               	movf	?___awdiv+1,w
  2123  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  2124  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  2125  0C5D  00A7               	movwf	?_sprintf+5
  2126  0C5E  0870               	movf	?___awdiv,w
  2127  0C5F  00A6               	movwf	?_sprintf+4
  2128  0C60  085B               	movf	reversa@minutAux+1,w
  2129  0C61  00FA               	movwf	___wmul@multiplier+1
  2130  0C62  085A               	movf	reversa@minutAux,w
  2131  0C63  00F9               	movwf	___wmul@multiplier
  2132  0C64  303C               	movlw	60
  2133  0C65  00FB               	movwf	___wmul@multiplicand
  2134  0C66  3000               	movlw	0
  2135  0C67  00FC               	movwf	___wmul@multiplicand+1
  2136  0C68  160A  118A  2757  120A  158A  	fcall	___wmul
  2137  0C6D  0979               	comf	?___wmul,w
  2138  0C6E  1283               	bcf	3,5	;RP0=0, select bank0
  2139  0C6F  1303               	bcf	3,6	;RP1=0, select bank0
  2140  0C70  00D8               	movwf	??_reversa
  2141  0C71  097A               	comf	?___wmul+1,w
  2142  0C72  00D9               	movwf	??_reversa+1
  2143  0C73  0AD8               	incf	??_reversa,f
  2144  0C74  1903               	skipnz
  2145  0C75  0AD9               	incf	??_reversa+1,f
  2146  0C76  0856               	movf	reversa@t,w
  2147  0C77  0758               	addwf	??_reversa,w
  2148  0C78  00A8               	movwf	?_sprintf+6
  2149  0C79  0857               	movf	reversa@t+1,w
  2150  0C7A  1803               	skipnc
  2151  0C7B  0A57               	incf	reversa@t+1,w
  2152  0C7C  0759               	addwf	??_reversa+1,w
  2153  0C7D  00A9               	movwf	?_sprintf+7
  2154  0C7E  30A4               	movlw	(low (_aux| 0))& (0+255)
  2155  0C7F  120A  118A  2305  120A  158A  	fcall	_sprintf
  2156                           
  2157                           ;main.c: 176: Lcd_Text(4, 1, aux);
  2158  0C84  01F3               	clrf	Lcd_Text@x
  2159  0C85  0AF3               	incf	Lcd_Text@x,f
  2160  0C86  30A4               	movlw	(low (_aux| 0))& (0+255)
  2161  0C87  00F4               	movwf	Lcd_Text@buffer
  2162  0C88  3000               	movlw	0
  2163  0C89  00F5               	movwf	Lcd_Text@buffer+1
  2164  0C8A  3004               	movlw	4
  2165  0C8B  120A  158A  223D   	fcall	_Lcd_Text
  2166  0C8E  0008               	return
  2167  0C8F                     __end_of_reversa:	
  2168                           
  2169                           	psect	text3
  2170  177E                     __ptext3:	
  2171 ;; *************** function _llenadoAgua *****************
  2172 ;; Defined at:
  2173 ;;		line 274 in file "main.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;		None
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;		None
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2187 ;;      Params:         0       0       0       0       0
  2188 ;;      Locals:         0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0
  2190 ;;      Totals:         0       0       0       0       0
  2191 ;;Total ram usage:        0 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; Hardware stack levels required when called:    2
  2194 ;; This function calls:
  2195 ;;		_ADC_Read
  2196 ;;		_Lcd_Command
  2197 ;;		_Lcd_Text
  2198 ;; This function is called by:
  2199 ;;		_lavadoNormal
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           
  2204                           ;psect for function _llenadoAgua
  2205  177E                     _llenadoAgua:	
  2206                           
  2207                           ;main.c: 275: Lcd_Command(1);
  2208                           
  2209                           ;incstack = 0
  2210                           ; Regs used in _llenadoAgua: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2211  177E  3001               	movlw	1
  2212  177F  120A  158A  26B8  160A  118A  	fcall	_Lcd_Command
  2213                           
  2214                           ;main.c: 276: Lcd_Text(2, 1, "      LLENANDO        ");
  2215  1784  01F3               	clrf	Lcd_Text@x
  2216  1785  0AF3               	incf	Lcd_Text@x,f
  2217  1786  3033               	movlw	low (STR_9| (0+32768))
  2218  1787  00F4               	movwf	Lcd_Text@buffer
  2219  1788  3088               	movlw	high (STR_9| (0+32768))
  2220  1789  00F5               	movwf	Lcd_Text@buffer+1
  2221  178A  3002               	movlw	2
  2222  178B  120A  158A  223D  160A  118A  	fcall	_Lcd_Text
  2223  1790                     l2152:	
  2224                           ;main.c: 278: while(ADC_Read(5) < 500){
  2225                           
  2226  1790  3005               	movlw	5
  2227  1791  160A  118A  27A5  160A  118A  	fcall	_ADC_Read
  2228  1796  3001               	movlw	1
  2229  1797  0271               	subwf	?_ADC_Read+1,w
  2230  1798  30F4               	movlw	244
  2231  1799  1903               	skipnz
  2232  179A  0270               	subwf	?_ADC_Read,w
  2233  179B  1803               	btfsc	3,0
  2234  179C  2FA1               	goto	l240
  2235                           
  2236                           ;main.c: 279: PORTBbits.RB4 = 1;
  2237  179D  1283               	bcf	3,5	;RP0=0, select bank0
  2238  179E  1303               	bcf	3,6	;RP1=0, select bank0
  2239  179F  1606               	bsf	6,4	;volatile
  2240  17A0  2F90               	goto	l2152
  2241  17A1                     l240:	
  2242                           
  2243                           ;main.c: 280: }
  2244                           ;main.c: 281: PORTBbits.RB4 = 0;
  2245  17A1  1283               	bcf	3,5	;RP0=0, select bank0
  2246  17A2  1303               	bcf	3,6	;RP1=0, select bank0
  2247  17A3  1206               	bcf	6,4	;volatile
  2248  17A4  0008               	return
  2249  17A5                     __end_of_llenadoAgua:	
  2250                           
  2251                           	psect	text4
  2252  0C8F                     __ptext4:	
  2253 ;; *************** function _SacaraAgua *****************
  2254 ;; Defined at:
  2255 ;;		line 284 in file "main.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  count           2   60[BANK0 ] int 
  2258 ;;  i               2   62[BANK0 ] int 
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;		None
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      void 
  2263 ;; Registers used:
  2264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2270 ;;      Params:         0       4       0       0       0
  2271 ;;      Locals:         0       2       0       0       0
  2272 ;;      Temps:          0       0       0       0       0
  2273 ;;      Totals:         0       6       0       0       0
  2274 ;;Total ram usage:        6 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    4
  2277 ;; This function calls:
  2278 ;;		_ADC_Read
  2279 ;;		_Lcd_Command
  2280 ;;		_Lcd_Text
  2281 ;;		___awdiv
  2282 ;;		___wmul
  2283 ;;		_normal
  2284 ;; This function is called by:
  2285 ;;		_lavadoNormal
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           
  2290                           ;psect for function _SacaraAgua
  2291  0C8F                     _SacaraAgua:	
  2292                           
  2293                           ;main.c: 285: Lcd_Command(1);
  2294                           
  2295                           ;incstack = 0
  2296                           ; Regs used in _SacaraAgua: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2297  0C8F  3001               	movlw	1
  2298  0C90  120A  158A  26B8  120A  158A  	fcall	_Lcd_Command
  2299                           
  2300                           ;main.c: 286: Lcd_Text(2, 1, "      Vaciado         ");
  2301  0C95  01F3               	clrf	Lcd_Text@x
  2302  0C96  0AF3               	incf	Lcd_Text@x,f
  2303  0C97  301C               	movlw	low (STR_10| (0+32768))
  2304  0C98  00F4               	movwf	Lcd_Text@buffer
  2305  0C99  3088               	movlw	high (STR_10| (0+32768))
  2306  0C9A  00F5               	movwf	Lcd_Text@buffer+1
  2307  0C9B  3002               	movlw	2
  2308  0C9C  120A  158A  223D  120A  158A  	fcall	_Lcd_Text
  2309                           
  2310                           ;main.c: 288: PORTBbits.RB5 = 1;
  2311  0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  2312  0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  2313  0CA3  1686               	bsf	6,5	;volatile
  2314  0CA4                     l2170:	
  2315                           ;main.c: 289: while(ADC_Read(6) > 100);
  2316                           
  2317  0CA4  3006               	movlw	6
  2318  0CA5  160A  118A  27A5  120A  158A  	fcall	_ADC_Read
  2319  0CAA  3000               	movlw	0
  2320  0CAB  0271               	subwf	?_ADC_Read+1,w
  2321  0CAC  3065               	movlw	101
  2322  0CAD  1903               	skipnz
  2323  0CAE  0270               	subwf	?_ADC_Read,w
  2324  0CAF  1C03               	btfss	3,0
  2325  0CB0  2D02               	goto	l2184
  2326  0CB1  2CA4               	goto	l2170
  2327  0CB2                     l2172:	
  2328                           ;main.c: 290: while(count > 0) {
  2329                           
  2330                           
  2331                           ;main.c: 291: Lcd_Text(2, 1, "     Centrifuga      ");
  2332  0CB2  01F3               	clrf	Lcd_Text@x
  2333  0CB3  0AF3               	incf	Lcd_Text@x,f
  2334  0CB4  304A               	movlw	low (STR_11| (0+32768))
  2335  0CB5  00F4               	movwf	Lcd_Text@buffer
  2336  0CB6  3088               	movlw	high (STR_11| (0+32768))
  2337  0CB7  00F5               	movwf	Lcd_Text@buffer+1
  2338  0CB8  3002               	movlw	2
  2339  0CB9  120A  158A  223D  120A  158A  	fcall	_Lcd_Text
  2340                           
  2341                           ;main.c: 292: count--;
  2342  0CBE  30FF               	movlw	255
  2343  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  2344  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  2345  0CC1  07DC               	addwf	SacaraAgua@count,f
  2346  0CC2  1803               	skipnc
  2347  0CC3  0ADD               	incf	SacaraAgua@count+1,f
  2348  0CC4  30FF               	movlw	255
  2349  0CC5  07DD               	addwf	SacaraAgua@count+1,f
  2350                           
  2351                           ;main.c: 293: normal(1000, i == 0 ? count+(tiempo/2*60) : count);
  2352  0CC6  085E               	movf	SacaraAgua@i,w
  2353  0CC7  045F               	iorwf	SacaraAgua@i+1,w
  2354  0CC8  1903               	btfsc	3,2
  2355  0CC9  2CCF               	goto	l2180
  2356  0CCA  085D               	movf	SacaraAgua@count+1,w
  2357  0CCB  00E1               	movwf	_SacaraAgua$501+1
  2358  0CCC  085C               	movf	SacaraAgua@count,w
  2359  0CCD  00E0               	movwf	_SacaraAgua$501
  2360  0CCE  2CF5               	goto	l2182
  2361  0CCF                     l2180:	
  2362  0CCF  3002               	movlw	2
  2363  0CD0  00F0               	movwf	___awdiv@divisor
  2364  0CD1  3000               	movlw	0
  2365  0CD2  00F1               	movwf	___awdiv@divisor+1
  2366  0CD3  1683               	bsf	3,5	;RP0=1, select bank1
  2367  0CD4  1303               	bcf	3,6	;RP1=0, select bank1
  2368  0CD5  0823               	movf	(_tiempo+1)^(0+128),w
  2369  0CD6  00F3               	movwf	___awdiv@dividend+1
  2370  0CD7  0822               	movf	_tiempo^(0+128),w
  2371  0CD8  00F2               	movwf	___awdiv@dividend
  2372  0CD9  120A  158A  22D4  120A  158A  	fcall	___awdiv
  2373  0CDE  0871               	movf	?___awdiv+1,w
  2374  0CDF  00FA               	movwf	___wmul@multiplier+1
  2375  0CE0  0870               	movf	?___awdiv,w
  2376  0CE1  00F9               	movwf	___wmul@multiplier
  2377  0CE2  303C               	movlw	60
  2378  0CE3  00FB               	movwf	___wmul@multiplicand
  2379  0CE4  3000               	movlw	0
  2380  0CE5  00FC               	movwf	___wmul@multiplicand+1
  2381  0CE6  160A  118A  2757  120A  158A  	fcall	___wmul
  2382  0CEB  1283               	bcf	3,5	;RP0=0, select bank0
  2383  0CEC  1303               	bcf	3,6	;RP1=0, select bank0
  2384  0CED  085C               	movf	SacaraAgua@count,w
  2385  0CEE  0779               	addwf	?___wmul,w
  2386  0CEF  00E0               	movwf	_SacaraAgua$501
  2387  0CF0  085D               	movf	SacaraAgua@count+1,w
  2388  0CF1  1803               	skipnc
  2389  0CF2  0A5D               	incf	SacaraAgua@count+1,w
  2390  0CF3  077A               	addwf	?___wmul+1,w
  2391  0CF4  00E1               	movwf	_SacaraAgua$501+1
  2392  0CF5                     l2182:	
  2393  0CF5  30E8               	movlw	232
  2394  0CF6  00D4               	movwf	normal@pwm
  2395  0CF7  3003               	movlw	3
  2396  0CF8  00D5               	movwf	normal@pwm+1
  2397  0CF9  0861               	movf	_SacaraAgua$501+1,w
  2398  0CFA  00D7               	movwf	normal@t+1
  2399  0CFB  0860               	movf	_SacaraAgua$501,w
  2400  0CFC  00D6               	movwf	normal@t
  2401  0CFD  120A  158A  2399  120A  158A  	fcall	_normal
  2402  0D02                     l2184:	
  2403  0D02  1283               	bcf	3,5	;RP0=0, select bank0
  2404  0D03  1303               	bcf	3,6	;RP1=0, select bank0
  2405  0D04  085D               	movf	SacaraAgua@count+1,w
  2406  0D05  3A80               	xorlw	128
  2407  0D06  00FF               	movwf	127
  2408  0D07  3080               	movlw	128
  2409  0D08  027F               	subwf	127,w
  2410  0D09  1D03               	skipz
  2411  0D0A  2D0D               	goto	u2735
  2412  0D0B  3001               	movlw	1
  2413  0D0C  025C               	subwf	SacaraAgua@count,w
  2414  0D0D                     u2735:	
  2415  0D0D  1803               	skipnc
  2416  0D0E  2CB2               	goto	l2172
  2417                           
  2418                           ;main.c: 294: }
  2419                           ;main.c: 295: PORTBbits.RB5 = 0;
  2420  0D0F  1283               	bcf	3,5	;RP0=0, select bank0
  2421  0D10  1303               	bcf	3,6	;RP1=0, select bank0
  2422  0D11  1286               	bcf	6,5	;volatile
  2423  0D12  0008               	return
  2424  0D13                     __end_of_SacaraAgua:	
  2425                           
  2426                           	psect	text5
  2427  0B99                     __ptext5:	
  2428 ;; *************** function _normal *****************
  2429 ;; Defined at:
  2430 ;;		line 179 in file "main.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  pwm             2   52[BANK0 ] int 
  2433 ;;  t               2   54[BANK0 ] int 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  minutAux        2   58[BANK0 ] int 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2445 ;;      Params:         0       4       0       0       0
  2446 ;;      Locals:         0       2       0       0       0
  2447 ;;      Temps:          0       2       0       0       0
  2448 ;;      Totals:         0       8       0       0       0
  2449 ;;Total ram usage:        8 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:    3
  2452 ;; This function calls:
  2453 ;;		_Lcd_Text
  2454 ;;		_PWM_Duty
  2455 ;;		___awdiv
  2456 ;;		___wmul
  2457 ;;		_sprintf
  2458 ;; This function is called by:
  2459 ;;		_lavadoNormal
  2460 ;;		_SacaraAgua
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           
  2465                           ;psect for function _normal
  2466  0B99                     _normal:	
  2467                           
  2468                           ;main.c: 180: PWM_Duty(pwm);
  2469                           
  2470                           ;incstack = 0
  2471                           ; Regs used in _normal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2472  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  2473  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  2474  0B9B  0855               	movf	normal@pwm+1,w
  2475  0B9C  00CF               	movwf	PWM_Duty@duty+1
  2476  0B9D  0854               	movf	normal@pwm,w
  2477  0B9E  00CE               	movwf	PWM_Duty@duty
  2478  0B9F  120A  118A  2012  120A  158A  	fcall	_PWM_Duty
  2479                           
  2480                           ;main.c: 181: PORTDbits.RD0 = 1;
  2481  0BA4  1283               	bcf	3,5	;RP0=0, select bank0
  2482  0BA5  1303               	bcf	3,6	;RP1=0, select bank0
  2483  0BA6  1408               	bsf	8,0	;volatile
  2484                           
  2485                           ;main.c: 182: PORTDbits.RD1 = 0;
  2486  0BA7  1088               	bcf	8,1	;volatile
  2487                           
  2488                           ;main.c: 183: int minutAux = t/60;
  2489  0BA8  303C               	movlw	60
  2490  0BA9  00F0               	movwf	___awdiv@divisor
  2491  0BAA  3000               	movlw	0
  2492  0BAB  00F1               	movwf	___awdiv@divisor+1
  2493  0BAC  0857               	movf	normal@t+1,w
  2494  0BAD  00F3               	movwf	___awdiv@dividend+1
  2495  0BAE  0856               	movf	normal@t,w
  2496  0BAF  00F2               	movwf	___awdiv@dividend
  2497  0BB0  120A  158A  22D4  120A  158A  	fcall	___awdiv
  2498  0BB5  0871               	movf	?___awdiv+1,w
  2499  0BB6  1283               	bcf	3,5	;RP0=0, select bank0
  2500  0BB7  1303               	bcf	3,6	;RP1=0, select bank0
  2501  0BB8  00DB               	movwf	normal@minutAux+1
  2502  0BB9  0870               	movf	?___awdiv,w
  2503  0BBA  00DA               	movwf	normal@minutAux
  2504                           
  2505                           ;main.c: 184: sprintf(aux,"      %i:%i:%i  ", (minutAux/60), (t/60), (t-minutAux*60));
  2506  0BBB  30B3               	movlw	low (STR_7| (0+32768))
  2507  0BBC  00A2               	movwf	sprintf@f
  2508  0BBD  3088               	movlw	high (STR_7| (0+32768))
  2509  0BBE  00A3               	movwf	sprintf@f+1
  2510  0BBF  303C               	movlw	60
  2511  0BC0  00F0               	movwf	___awdiv@divisor
  2512  0BC1  3000               	movlw	0
  2513  0BC2  00F1               	movwf	___awdiv@divisor+1
  2514  0BC3  085B               	movf	normal@minutAux+1,w
  2515  0BC4  00F3               	movwf	___awdiv@dividend+1
  2516  0BC5  085A               	movf	normal@minutAux,w
  2517  0BC6  00F2               	movwf	___awdiv@dividend
  2518  0BC7  120A  158A  22D4  120A  158A  	fcall	___awdiv
  2519  0BCC  0871               	movf	?___awdiv+1,w
  2520  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  2521  0BCE  1303               	bcf	3,6	;RP1=0, select bank0
  2522  0BCF  00A5               	movwf	?_sprintf+3
  2523  0BD0  0870               	movf	?___awdiv,w
  2524  0BD1  00A4               	movwf	?_sprintf+2
  2525  0BD2  303C               	movlw	60
  2526  0BD3  00F0               	movwf	___awdiv@divisor
  2527  0BD4  3000               	movlw	0
  2528  0BD5  00F1               	movwf	___awdiv@divisor+1
  2529  0BD6  0857               	movf	normal@t+1,w
  2530  0BD7  00F3               	movwf	___awdiv@dividend+1
  2531  0BD8  0856               	movf	normal@t,w
  2532  0BD9  00F2               	movwf	___awdiv@dividend
  2533  0BDA  120A  158A  22D4  120A  158A  	fcall	___awdiv
  2534  0BDF  0871               	movf	?___awdiv+1,w
  2535  0BE0  1283               	bcf	3,5	;RP0=0, select bank0
  2536  0BE1  1303               	bcf	3,6	;RP1=0, select bank0
  2537  0BE2  00A7               	movwf	?_sprintf+5
  2538  0BE3  0870               	movf	?___awdiv,w
  2539  0BE4  00A6               	movwf	?_sprintf+4
  2540  0BE5  085B               	movf	normal@minutAux+1,w
  2541  0BE6  00FA               	movwf	___wmul@multiplier+1
  2542  0BE7  085A               	movf	normal@minutAux,w
  2543  0BE8  00F9               	movwf	___wmul@multiplier
  2544  0BE9  303C               	movlw	60
  2545  0BEA  00FB               	movwf	___wmul@multiplicand
  2546  0BEB  3000               	movlw	0
  2547  0BEC  00FC               	movwf	___wmul@multiplicand+1
  2548  0BED  160A  118A  2757  120A  158A  	fcall	___wmul
  2549  0BF2  0979               	comf	?___wmul,w
  2550  0BF3  1283               	bcf	3,5	;RP0=0, select bank0
  2551  0BF4  1303               	bcf	3,6	;RP1=0, select bank0
  2552  0BF5  00D8               	movwf	??_normal
  2553  0BF6  097A               	comf	?___wmul+1,w
  2554  0BF7  00D9               	movwf	??_normal+1
  2555  0BF8  0AD8               	incf	??_normal,f
  2556  0BF9  1903               	skipnz
  2557  0BFA  0AD9               	incf	??_normal+1,f
  2558  0BFB  0856               	movf	normal@t,w
  2559  0BFC  0758               	addwf	??_normal,w
  2560  0BFD  00A8               	movwf	?_sprintf+6
  2561  0BFE  0857               	movf	normal@t+1,w
  2562  0BFF  1803               	skipnc
  2563  0C00  0A57               	incf	normal@t+1,w
  2564  0C01  0759               	addwf	??_normal+1,w
  2565  0C02  00A9               	movwf	?_sprintf+7
  2566  0C03  30A4               	movlw	(low (_aux| 0))& (0+255)
  2567  0C04  120A  118A  2305  120A  158A  	fcall	_sprintf
  2568                           
  2569                           ;main.c: 185: Lcd_Text(4, 1, aux);
  2570  0C09  01F3               	clrf	Lcd_Text@x
  2571  0C0A  0AF3               	incf	Lcd_Text@x,f
  2572  0C0B  30A4               	movlw	(low (_aux| 0))& (0+255)
  2573  0C0C  00F4               	movwf	Lcd_Text@buffer
  2574  0C0D  3000               	movlw	0
  2575  0C0E  00F5               	movwf	Lcd_Text@buffer+1
  2576  0C0F  3004               	movlw	4
  2577  0C10  120A  158A  223D   	fcall	_Lcd_Text
  2578  0C13  0008               	return
  2579  0C14                     __end_of_normal:	
  2580                           
  2581                           	psect	text6
  2582  1757                     __ptext6:	
  2583 ;; *************** function ___wmul *****************
  2584 ;; Defined at:
  2585 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  multiplier      2    9[COMMON] unsigned int 
  2588 ;;  multiplicand    2   11[COMMON] unsigned int 
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;  product         2    0[BANK0 ] unsigned int 
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  2    9[COMMON] unsigned int 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2, status,0
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2600 ;;      Params:         4       0       0       0       0
  2601 ;;      Locals:         0       2       0       0       0
  2602 ;;      Temps:          0       0       0       0       0
  2603 ;;      Totals:         4       2       0       0       0
  2604 ;;Total ram usage:        6 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; This function calls:
  2607 ;;		Nothing
  2608 ;; This function is called by:
  2609 ;;		_lavadoNormal
  2610 ;;		_reversa
  2611 ;;		_normal
  2612 ;;		_SacaraAgua
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           
  2617                           ;psect for function ___wmul
  2618  1757                     ___wmul:	
  2619                           
  2620                           ;incstack = 0
  2621                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2622  1757  1283               	bcf	3,5	;RP0=0, select bank0
  2623  1758  1303               	bcf	3,6	;RP1=0, select bank0
  2624  1759  01A0               	clrf	___wmul@product
  2625  175A  01A1               	clrf	___wmul@product+1
  2626  175B                     l2072:	
  2627  175B  1C79               	btfss	___wmul@multiplier,0
  2628  175C  2F65               	goto	l388
  2629  175D  087B               	movf	___wmul@multiplicand,w
  2630  175E  1283               	bcf	3,5	;RP0=0, select bank0
  2631  175F  1303               	bcf	3,6	;RP1=0, select bank0
  2632  1760  07A0               	addwf	___wmul@product,f
  2633  1761  1803               	skipnc
  2634  1762  0AA1               	incf	___wmul@product+1,f
  2635  1763  087C               	movf	___wmul@multiplicand+1,w
  2636  1764  07A1               	addwf	___wmul@product+1,f
  2637  1765                     l388:	
  2638  1765  3001               	movlw	1
  2639  1766                     u2555:	
  2640  1766  1003               	clrc
  2641  1767  0DFB               	rlf	___wmul@multiplicand,f
  2642  1768  0DFC               	rlf	___wmul@multiplicand+1,f
  2643  1769  3EFF               	addlw	-1
  2644  176A  1D03               	skipz
  2645  176B  2F66               	goto	u2555
  2646  176C  3001               	movlw	1
  2647  176D                     u2565:	
  2648  176D  1003               	clrc
  2649  176E  0CFA               	rrf	___wmul@multiplier+1,f
  2650  176F  0CF9               	rrf	___wmul@multiplier,f
  2651  1770  3EFF               	addlw	-1
  2652  1771  1D03               	skipz
  2653  1772  2F6D               	goto	u2565
  2654  1773  0879               	movf	___wmul@multiplier,w
  2655  1774  047A               	iorwf	___wmul@multiplier+1,w
  2656  1775  1D03               	btfss	3,2
  2657  1776  2F5B               	goto	l2072
  2658  1777  1283               	bcf	3,5	;RP0=0, select bank0
  2659  1778  1303               	bcf	3,6	;RP1=0, select bank0
  2660  1779  0821               	movf	___wmul@product+1,w
  2661  177A  00FA               	movwf	?___wmul+1
  2662  177B  0820               	movf	___wmul@product,w
  2663  177C  00F9               	movwf	?___wmul
  2664  177D  0008               	return
  2665  177E                     __end_of___wmul:	
  2666                           
  2667                           	psect	text7
  2668  0AD4                     __ptext7:	
  2669 ;; *************** function ___awdiv *****************
  2670 ;; Defined at:
  2671 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  divisor         2    0[COMMON] int 
  2674 ;;  dividend        2    2[COMMON] int 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;  quotient        2    7[COMMON] int 
  2677 ;;  sign            1    6[COMMON] unsigned char 
  2678 ;;  counter         1    5[COMMON] unsigned char 
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  2    0[COMMON] int 
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, status,0
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2688 ;;      Params:         4       0       0       0       0
  2689 ;;      Locals:         4       0       0       0       0
  2690 ;;      Temps:          1       0       0       0       0
  2691 ;;      Totals:         9       0       0       0       0
  2692 ;;Total ram usage:        9 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; This function calls:
  2695 ;;		Nothing
  2696 ;; This function is called by:
  2697 ;;		_lavadoNormal
  2698 ;;		_reversa
  2699 ;;		_normal
  2700 ;;		_SacaraAgua
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           
  2705                           ;psect for function ___awdiv
  2706  0AD4                     ___awdiv:	
  2707                           
  2708                           ;incstack = 0
  2709                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2710  0AD4  01F6               	clrf	___awdiv@sign
  2711  0AD5  1FF1               	btfss	___awdiv@divisor+1,7
  2712  0AD6  2ADE               	goto	l2092
  2713  0AD7  09F0               	comf	___awdiv@divisor,f
  2714  0AD8  09F1               	comf	___awdiv@divisor+1,f
  2715  0AD9  0AF0               	incf	___awdiv@divisor,f
  2716  0ADA  1903               	skipnz
  2717  0ADB  0AF1               	incf	___awdiv@divisor+1,f
  2718  0ADC  01F6               	clrf	___awdiv@sign
  2719  0ADD  0AF6               	incf	___awdiv@sign,f
  2720  0ADE                     l2092:	
  2721  0ADE  1FF3               	btfss	___awdiv@dividend+1,7
  2722  0ADF  2AE9               	goto	l2098
  2723  0AE0  09F2               	comf	___awdiv@dividend,f
  2724  0AE1  09F3               	comf	___awdiv@dividend+1,f
  2725  0AE2  0AF2               	incf	___awdiv@dividend,f
  2726  0AE3  1903               	skipnz
  2727  0AE4  0AF3               	incf	___awdiv@dividend+1,f
  2728  0AE5  3001               	movlw	1
  2729  0AE6  00F4               	movwf	??___awdiv
  2730  0AE7  0874               	movf	??___awdiv,w
  2731  0AE8  06F6               	xorwf	___awdiv@sign,f
  2732  0AE9                     l2098:	
  2733  0AE9  01F7               	clrf	___awdiv@quotient
  2734  0AEA  01F8               	clrf	___awdiv@quotient+1
  2735  0AEB  0870               	movf	___awdiv@divisor,w
  2736  0AEC  0471               	iorwf	___awdiv@divisor+1,w
  2737  0AED  1903               	btfsc	3,2
  2738  0AEE  2B20               	goto	l2120
  2739  0AEF  01F5               	clrf	___awdiv@counter
  2740  0AF0  0AF5               	incf	___awdiv@counter,f
  2741  0AF1                     l2108:	
  2742  0AF1  1BF1               	btfsc	___awdiv@divisor+1,7
  2743  0AF2  2AFF               	goto	l2110
  2744  0AF3  3001               	movlw	1
  2745  0AF4                     u2615:	
  2746  0AF4  1003               	clrc
  2747  0AF5  0DF0               	rlf	___awdiv@divisor,f
  2748  0AF6  0DF1               	rlf	___awdiv@divisor+1,f
  2749  0AF7  3EFF               	addlw	-1
  2750  0AF8  1D03               	skipz
  2751  0AF9  2AF4               	goto	u2615
  2752  0AFA  3001               	movlw	1
  2753  0AFB  00F4               	movwf	??___awdiv
  2754  0AFC  0874               	movf	??___awdiv,w
  2755  0AFD  07F5               	addwf	___awdiv@counter,f
  2756  0AFE  2AF1               	goto	l2108
  2757  0AFF                     l2110:	
  2758  0AFF  3001               	movlw	1
  2759  0B00                     u2635:	
  2760  0B00  1003               	clrc
  2761  0B01  0DF7               	rlf	___awdiv@quotient,f
  2762  0B02  0DF8               	rlf	___awdiv@quotient+1,f
  2763  0B03  3EFF               	addlw	-1
  2764  0B04  1D03               	skipz
  2765  0B05  2B00               	goto	u2635
  2766  0B06  0871               	movf	___awdiv@divisor+1,w
  2767  0B07  0273               	subwf	___awdiv@dividend+1,w
  2768  0B08  1D03               	skipz
  2769  0B09  2B0C               	goto	u2645
  2770  0B0A  0870               	movf	___awdiv@divisor,w
  2771  0B0B  0272               	subwf	___awdiv@dividend,w
  2772  0B0C                     u2645:	
  2773  0B0C  1C03               	skipc
  2774  0B0D  2B15               	goto	l2116
  2775  0B0E  0870               	movf	___awdiv@divisor,w
  2776  0B0F  02F2               	subwf	___awdiv@dividend,f
  2777  0B10  0871               	movf	___awdiv@divisor+1,w
  2778  0B11  1C03               	skipc
  2779  0B12  03F3               	decf	___awdiv@dividend+1,f
  2780  0B13  02F3               	subwf	___awdiv@dividend+1,f
  2781  0B14  1477               	bsf	___awdiv@quotient,0
  2782  0B15                     l2116:	
  2783  0B15  3001               	movlw	1
  2784  0B16                     u2655:	
  2785  0B16  1003               	clrc
  2786  0B17  0CF1               	rrf	___awdiv@divisor+1,f
  2787  0B18  0CF0               	rrf	___awdiv@divisor,f
  2788  0B19  3EFF               	addlw	-1
  2789  0B1A  1D03               	skipz
  2790  0B1B  2B16               	goto	u2655
  2791  0B1C  3001               	movlw	1
  2792  0B1D  02F5               	subwf	___awdiv@counter,f
  2793  0B1E  1D03               	btfss	3,2
  2794  0B1F  2AFF               	goto	l2110
  2795  0B20                     l2120:	
  2796  0B20  0876               	movf	___awdiv@sign,w
  2797  0B21  1903               	btfsc	3,2
  2798  0B22  2B28               	goto	l2124
  2799  0B23  09F7               	comf	___awdiv@quotient,f
  2800  0B24  09F8               	comf	___awdiv@quotient+1,f
  2801  0B25  0AF7               	incf	___awdiv@quotient,f
  2802  0B26  1903               	skipnz
  2803  0B27  0AF8               	incf	___awdiv@quotient+1,f
  2804  0B28                     l2124:	
  2805  0B28  0878               	movf	___awdiv@quotient+1,w
  2806  0B29  00F1               	movwf	?___awdiv+1
  2807  0B2A  0877               	movf	___awdiv@quotient,w
  2808  0B2B  00F0               	movwf	?___awdiv
  2809  0B2C  0008               	return
  2810  0B2D                     __end_of___awdiv:	
  2811                           
  2812                           	psect	text8
  2813  0012                     __ptext8:	
  2814 ;; *************** function _PWM_Duty *****************
  2815 ;; Defined at:
  2816 ;;		line 298 in file "main.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  duty            2   46[BANK0 ] unsigned int 
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;		None
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1    wreg      void 
  2823 ;; Registers used:
  2824 ;;		wreg, status,2, status,0, pclath, cstack
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2830 ;;      Params:         0       2       0       0       0
  2831 ;;      Locals:         0       0       0       0       0
  2832 ;;      Temps:          0       4       0       0       0
  2833 ;;      Totals:         0       6       0       0       0
  2834 ;;Total ram usage:        6 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; Hardware stack levels required when called:    2
  2837 ;; This function calls:
  2838 ;;		___aldiv
  2839 ;;		___altoft
  2840 ;;		___ftdiv
  2841 ;;		___ftmul
  2842 ;;		___fttol
  2843 ;;		___lwtoft
  2844 ;; This function is called by:
  2845 ;;		_main
  2846 ;;		_reversa
  2847 ;;		_normal
  2848 ;;		_AspaMotorUnSegundo
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           
  2853                           ;psect for function _PWM_Duty
  2854  0012                     _PWM_Duty:	
  2855                           
  2856                           ;main.c: 299: if(duty<1023){
  2857                           
  2858                           ;incstack = 0
  2859                           ; Regs used in _PWM_Duty: [wreg+status,2+status,0+pclath+cstack]
  2860  0012  3003               	movlw	3
  2861  0013  1283               	bcf	3,5	;RP0=0, select bank0
  2862  0014  1303               	bcf	3,6	;RP1=0, select bank0
  2863  0015  024F               	subwf	PWM_Duty@duty+1,w
  2864  0016  30FF               	movlw	255
  2865  0017  1903               	skipnz
  2866  0018  024E               	subwf	PWM_Duty@duty,w
  2867  0019  1803               	skipnc
  2868  001A  0008               	return
  2869                           
  2870                           ;main.c: 300: duty = ((float)duty/1023)*(20000000/(PWM_freq*4));
  2871  001B  084F               	movf	PWM_Duty@duty+1,w
  2872  001C  00F9               	movwf	___lwtoft@c+1
  2873  001D  084E               	movf	PWM_Duty@duty,w
  2874  001E  00F8               	movwf	___lwtoft@c
  2875  001F  160A  118A  2743  120A  118A  	fcall	___lwtoft
  2876  0024  0878               	movf	?___lwtoft,w
  2877  0025  1283               	bcf	3,5	;RP0=0, select bank0
  2878  0026  1303               	bcf	3,6	;RP1=0, select bank0
  2879  0027  00A3               	movwf	___ftdiv@f1
  2880  0028  0879               	movf	?___lwtoft+1,w
  2881  0029  00A4               	movwf	___ftdiv@f1+1
  2882  002A  087A               	movf	?___lwtoft+2,w
  2883  002B  00A5               	movwf	___ftdiv@f1+2
  2884  002C  30C0               	movlw	192
  2885  002D  00A0               	movwf	___ftdiv@f2
  2886  002E  307F               	movlw	127
  2887  002F  00A1               	movwf	___ftdiv@f2+1
  2888  0030  3044               	movlw	68
  2889  0031  00A2               	movwf	___ftdiv@f2+2
  2890  0032  120A  118A  20BB  120A  118A  	fcall	___ftdiv
  2891  0037  1283               	bcf	3,5	;RP0=0, select bank0
  2892  0038  1303               	bcf	3,6	;RP1=0, select bank0
  2893  0039  0820               	movf	?___ftdiv,w
  2894  003A  00B3               	movwf	___ftmul@f2
  2895  003B  0821               	movf	?___ftdiv+1,w
  2896  003C  00B4               	movwf	___ftmul@f2+1
  2897  003D  0822               	movf	?___ftdiv+2,w
  2898  003E  00B5               	movwf	___ftmul@f2+2
  2899  003F  3001               	movlw	1
  2900  0040  00F7               	movwf	___aldiv@dividend+3
  2901  0041  3031               	movlw	49
  2902  0042  00F6               	movwf	___aldiv@dividend+2
  2903  0043  302D               	movlw	45
  2904  0044  00F5               	movwf	___aldiv@dividend+1
  2905  0045  3000               	movlw	0
  2906  0046  00F4               	movwf	___aldiv@dividend
  2907  0047  1683               	bsf	3,5	;RP0=1, select bank1
  2908  0048  1303               	bcf	3,6	;RP1=0, select bank1
  2909  0049  0839               	movf	_PWM_freq^(0+128),w
  2910  004A  1283               	bcf	3,5	;RP0=0, select bank0
  2911  004B  1303               	bcf	3,6	;RP1=0, select bank0
  2912  004C  00D0               	movwf	??_PWM_Duty
  2913  004D  1683               	bsf	3,5	;RP0=1, select bank1
  2914  004E  1303               	bcf	3,6	;RP1=0, select bank1
  2915  004F  083A               	movf	(_PWM_freq+1)^(0+128),w
  2916  0050  1283               	bcf	3,5	;RP0=0, select bank0
  2917  0051  1303               	bcf	3,6	;RP1=0, select bank0
  2918  0052  00D1               	movwf	??_PWM_Duty+1
  2919  0053  1683               	bsf	3,5	;RP0=1, select bank1
  2920  0054  1303               	bcf	3,6	;RP1=0, select bank1
  2921  0055  083B               	movf	(_PWM_freq+2)^(0+128),w
  2922  0056  1283               	bcf	3,5	;RP0=0, select bank0
  2923  0057  1303               	bcf	3,6	;RP1=0, select bank0
  2924  0058  00D2               	movwf	??_PWM_Duty+2
  2925  0059  1683               	bsf	3,5	;RP0=1, select bank1
  2926  005A  1303               	bcf	3,6	;RP1=0, select bank1
  2927  005B  083C               	movf	(_PWM_freq+3)^(0+128),w
  2928  005C  1283               	bcf	3,5	;RP0=0, select bank0
  2929  005D  1303               	bcf	3,6	;RP1=0, select bank0
  2930  005E  00D3               	movwf	??_PWM_Duty+3
  2931  005F  3002               	movlw	2
  2932  0060                     u2435:	
  2933  0060  1003               	clrc
  2934  0061  0DD0               	rlf	??_PWM_Duty,f
  2935  0062  0DD1               	rlf	??_PWM_Duty+1,f
  2936  0063  0DD2               	rlf	??_PWM_Duty+2,f
  2937  0064  0DD3               	rlf	??_PWM_Duty+3,f
  2938  0065  3EFF               	addlw	-1
  2939  0066  1D03               	skipz
  2940  0067  2860               	goto	u2435
  2941  0068  0853               	movf	??_PWM_Duty+3,w
  2942  0069  00F3               	movwf	___aldiv@divisor+3
  2943  006A  0852               	movf	??_PWM_Duty+2,w
  2944  006B  00F2               	movwf	___aldiv@divisor+2
  2945  006C  0851               	movf	??_PWM_Duty+1,w
  2946  006D  00F1               	movwf	___aldiv@divisor+1
  2947  006E  0850               	movf	??_PWM_Duty,w
  2948  006F  00F0               	movwf	___aldiv@divisor
  2949  0070  120A  158A  2629  120A  118A  	fcall	___aldiv
  2950  0075  0873               	movf	?___aldiv+3,w
  2951  0076  1283               	bcf	3,5	;RP0=0, select bank0
  2952  0077  1303               	bcf	3,6	;RP1=0, select bank0
  2953  0078  00A9               	movwf	___altoft@c+3
  2954  0079  0872               	movf	?___aldiv+2,w
  2955  007A  00A8               	movwf	___altoft@c+2
  2956  007B  0871               	movf	?___aldiv+1,w
  2957  007C  00A7               	movwf	___altoft@c+1
  2958  007D  0870               	movf	?___aldiv,w
  2959  007E  00A6               	movwf	___altoft@c
  2960  007F  120A  158A  21B5  120A  118A  	fcall	___altoft
  2961  0084  1283               	bcf	3,5	;RP0=0, select bank0
  2962  0085  1303               	bcf	3,6	;RP1=0, select bank0
  2963  0086  0826               	movf	?___altoft,w
  2964  0087  00B0               	movwf	___ftmul@f1
  2965  0088  0827               	movf	?___altoft+1,w
  2966  0089  00B1               	movwf	___ftmul@f1+1
  2967  008A  0828               	movf	?___altoft+2,w
  2968  008B  00B2               	movwf	___ftmul@f1+2
  2969  008C  120A  118A  2232  120A  118A  	fcall	___ftmul
  2970  0091  1283               	bcf	3,5	;RP0=0, select bank0
  2971  0092  1303               	bcf	3,6	;RP1=0, select bank0
  2972  0093  0830               	movf	?___ftmul,w
  2973  0094  00C0               	movwf	___fttol@f1
  2974  0095  0831               	movf	?___ftmul+1,w
  2975  0096  00C1               	movwf	___fttol@f1+1
  2976  0097  0832               	movf	?___ftmul+2,w
  2977  0098  00C2               	movwf	___fttol@f1+2
  2978  0099  120A  158A  259B  120A  118A  	fcall	___fttol
  2979  009E  1283               	bcf	3,5	;RP0=0, select bank0
  2980  009F  1303               	bcf	3,6	;RP1=0, select bank0
  2981  00A0  0841               	movf	?___fttol+1,w
  2982  00A1  00CF               	movwf	PWM_Duty@duty+1
  2983  00A2  0840               	movf	?___fttol,w
  2984  00A3  00CE               	movwf	PWM_Duty@duty
  2985                           
  2986                           ;main.c: 301: CCP1X = duty & 1;
  2987  00A4  1C4E               	btfss	PWM_Duty@duty,0
  2988  00A5  28AA               	goto	u2440
  2989  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  2990  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  2991  00A8  1697               	bsf	23,5	;volatile
  2992  00A9  28AD               	goto	l2008
  2993  00AA                     u2440:	
  2994  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  2995  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  2996  00AC  1297               	bcf	23,5	;volatile
  2997  00AD                     l2008:	
  2998                           
  2999                           ;main.c: 302: CCP1Y = duty & 2;
  3000  00AD  1217               	bcf	23,4	;volatile
  3001                           
  3002                           ;main.c: 303: CCPR1L = duty>>2;
  3003  00AE  084F               	movf	PWM_Duty@duty+1,w
  3004  00AF  00D1               	movwf	??_PWM_Duty+1
  3005  00B0  084E               	movf	PWM_Duty@duty,w
  3006  00B1  00D0               	movwf	??_PWM_Duty
  3007  00B2  1003               	clrc
  3008  00B3  0CD1               	rrf	??_PWM_Duty+1,f
  3009  00B4  0CD0               	rrf	??_PWM_Duty,f
  3010  00B5  1003               	clrc
  3011  00B6  0CD1               	rrf	??_PWM_Duty+1,f
  3012  00B7  0CD0               	rrf	??_PWM_Duty,f
  3013  00B8  0850               	movf	??_PWM_Duty,w
  3014  00B9  0095               	movwf	21	;volatile
  3015  00BA  0008               	return
  3016  00BB                     __end_of_PWM_Duty:	
  3017                           
  3018                           	psect	text9
  3019  1743                     __ptext9:	
  3020 ;; *************** function ___lwtoft *****************
  3021 ;; Defined at:
  3022 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  c               2    8[COMMON] unsigned int 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;		None
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  3    8[COMMON] float 
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0, pclath, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3036 ;;      Params:         3       0       0       0       0
  3037 ;;      Locals:         0       0       0       0       0
  3038 ;;      Temps:          1       0       0       0       0
  3039 ;;      Totals:         4       0       0       0       0
  3040 ;;Total ram usage:        4 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    1
  3043 ;; This function calls:
  3044 ;;		___ftpack
  3045 ;; This function is called by:
  3046 ;;		_PWM_Duty
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           
  3051                           ;psect for function ___lwtoft
  3052  1743                     ___lwtoft:	
  3053                           
  3054                           ;incstack = 0
  3055                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  3056  1743  0878               	movf	___lwtoft@c,w
  3057  1744  00F0               	movwf	___ftpack@arg
  3058  1745  0879               	movf	___lwtoft@c+1,w
  3059  1746  00F1               	movwf	___ftpack@arg+1
  3060  1747  01F2               	clrf	___ftpack@arg+2
  3061  1748  308E               	movlw	142
  3062  1749  00FB               	movwf	??___lwtoft
  3063  174A  087B               	movf	??___lwtoft,w
  3064  174B  00F3               	movwf	___ftpack@exp
  3065  174C  01F4               	clrf	___ftpack@sign
  3066  174D  120A  158A  232D   	fcall	___ftpack
  3067  1750  0870               	movf	?___ftpack,w
  3068  1751  00F8               	movwf	?___lwtoft
  3069  1752  0871               	movf	?___ftpack+1,w
  3070  1753  00F9               	movwf	?___lwtoft+1
  3071  1754  0872               	movf	?___ftpack+2,w
  3072  1755  00FA               	movwf	?___lwtoft+2
  3073  1756  0008               	return
  3074  1757                     __end_of___lwtoft:	
  3075                           
  3076                           	psect	text10
  3077  0D9B                     __ptext10:	
  3078 ;; *************** function ___fttol *****************
  3079 ;; Defined at:
  3080 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;  f1              3   32[BANK0 ] float 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;  lval            4   41[BANK0 ] unsigned long 
  3085 ;;  exp1            1   45[BANK0 ] unsigned char 
  3086 ;;  sign1           1   40[BANK0 ] unsigned char 
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  4   32[BANK0 ] long 
  3089 ;; Registers used:
  3090 ;;		wreg, status,2, status,0
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3096 ;;      Params:         0       4       0       0       0
  3097 ;;      Locals:         0       6       0       0       0
  3098 ;;      Temps:          0       4       0       0       0
  3099 ;;      Totals:         0      14       0       0       0
  3100 ;;Total ram usage:       14 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; This function calls:
  3103 ;;		Nothing
  3104 ;; This function is called by:
  3105 ;;		_PWM_Duty
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           
  3110                           ;psect for function ___fttol
  3111  0D9B                     ___fttol:	
  3112                           
  3113                           ;incstack = 0
  3114                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3115  0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  3116  0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  3117  0D9D  0840               	movf	___fttol@f1,w
  3118  0D9E  00C4               	movwf	??___fttol
  3119  0D9F  0841               	movf	___fttol@f1+1,w
  3120  0DA0  00C5               	movwf	??___fttol+1
  3121  0DA1  0842               	movf	___fttol@f1+2,w
  3122  0DA2  00C6               	movwf	??___fttol+2
  3123  0DA3  1003               	clrc
  3124  0DA4  0D45               	rlf	??___fttol+1,w
  3125  0DA5  0D46               	rlf	??___fttol+2,w
  3126  0DA6  00C7               	movwf	??___fttol+3
  3127  0DA7  0847               	movf	??___fttol+3,w
  3128  0DA8  00CD               	movwf	___fttol@exp1
  3129  0DA9  084D               	movf	___fttol@exp1,w
  3130  0DAA  1D03               	btfss	3,2
  3131  0DAB  2DB5               	goto	l1892
  3132  0DAC  3000               	movlw	0
  3133  0DAD  00C3               	movwf	?___fttol+3
  3134  0DAE  3000               	movlw	0
  3135  0DAF  00C2               	movwf	?___fttol+2
  3136  0DB0  3000               	movlw	0
  3137  0DB1  00C1               	movwf	?___fttol+1
  3138  0DB2  3000               	movlw	0
  3139  0DB3  00C0               	movwf	?___fttol
  3140  0DB4  0008               	return
  3141  0DB5                     l1892:	
  3142  0DB5  0840               	movf	___fttol@f1,w
  3143  0DB6  00C4               	movwf	??___fttol
  3144  0DB7  0841               	movf	___fttol@f1+1,w
  3145  0DB8  00C5               	movwf	??___fttol+1
  3146  0DB9  0842               	movf	___fttol@f1+2,w
  3147  0DBA  00C6               	movwf	??___fttol+2
  3148  0DBB  3017               	movlw	23
  3149  0DBC                     u2195:	
  3150  0DBC  1003               	clrc
  3151  0DBD  0CC6               	rrf	??___fttol+2,f
  3152  0DBE  0CC5               	rrf	??___fttol+1,f
  3153  0DBF  0CC4               	rrf	??___fttol,f
  3154  0DC0  3EFF               	addlw	-1
  3155  0DC1  1D03               	skipz
  3156  0DC2  2DBC               	goto	u2195
  3157  0DC3  0844               	movf	??___fttol,w
  3158  0DC4  00C7               	movwf	??___fttol+3
  3159  0DC5  0847               	movf	??___fttol+3,w
  3160  0DC6  00C8               	movwf	___fttol@sign1
  3161  0DC7  17C1               	bsf	___fttol@f1+1,7
  3162  0DC8  30FF               	movlw	255
  3163  0DC9  05C0               	andwf	___fttol@f1,f
  3164  0DCA  30FF               	movlw	255
  3165  0DCB  05C1               	andwf	___fttol@f1+1,f
  3166  0DCC  3000               	movlw	0
  3167  0DCD  05C2               	andwf	___fttol@f1+2,f
  3168  0DCE  0840               	movf	___fttol@f1,w
  3169  0DCF  00C9               	movwf	___fttol@lval
  3170  0DD0  0841               	movf	___fttol@f1+1,w
  3171  0DD1  00CA               	movwf	___fttol@lval+1
  3172  0DD2  0842               	movf	___fttol@f1+2,w
  3173  0DD3  00CB               	movwf	___fttol@lval+2
  3174  0DD4  01CC               	clrf	___fttol@lval+3
  3175  0DD5  308E               	movlw	142
  3176  0DD6  02CD               	subwf	___fttol@exp1,f
  3177  0DD7  1FCD               	btfss	___fttol@exp1,7
  3178  0DD8  2DF7               	goto	l1912
  3179  0DD9  084D               	movf	___fttol@exp1,w
  3180  0DDA  3A80               	xorlw	128
  3181  0DDB  3E8F               	addlw	143
  3182  0DDC  1803               	skipnc
  3183  0DDD  2DE7               	goto	l1910
  3184  0DDE  3000               	movlw	0
  3185  0DDF  00C3               	movwf	?___fttol+3
  3186  0DE0  3000               	movlw	0
  3187  0DE1  00C2               	movwf	?___fttol+2
  3188  0DE2  3000               	movlw	0
  3189  0DE3  00C1               	movwf	?___fttol+1
  3190  0DE4  3000               	movlw	0
  3191  0DE5  00C0               	movwf	?___fttol
  3192  0DE6  0008               	return
  3193  0DE7                     l1910:	
  3194  0DE7  3001               	movlw	1
  3195  0DE8                     u2225:	
  3196  0DE8  1003               	clrc
  3197  0DE9  0CCC               	rrf	___fttol@lval+3,f
  3198  0DEA  0CCB               	rrf	___fttol@lval+2,f
  3199  0DEB  0CCA               	rrf	___fttol@lval+1,f
  3200  0DEC  0CC9               	rrf	___fttol@lval,f
  3201  0DED  3EFF               	addlw	-1
  3202  0DEE  1D03               	skipz
  3203  0DEF  2DE8               	goto	u2225
  3204  0DF0  3001               	movlw	1
  3205  0DF1  00C4               	movwf	??___fttol
  3206  0DF2  0844               	movf	??___fttol,w
  3207  0DF3  07CD               	addwf	___fttol@exp1,f
  3208  0DF4  1903               	btfsc	3,2
  3209  0DF5  2E12               	goto	l1920
  3210  0DF6  2DE7               	goto	l1910
  3211  0DF7                     l1912:	
  3212  0DF7  3018               	movlw	24
  3213  0DF8  024D               	subwf	___fttol@exp1,w
  3214  0DF9  1C03               	skipc
  3215  0DFA  2E0F               	goto	l640
  3216  0DFB  3000               	movlw	0
  3217  0DFC  00C3               	movwf	?___fttol+3
  3218  0DFD  3000               	movlw	0
  3219  0DFE  00C2               	movwf	?___fttol+2
  3220  0DFF  3000               	movlw	0
  3221  0E00  00C1               	movwf	?___fttol+1
  3222  0E01  3000               	movlw	0
  3223  0E02  00C0               	movwf	?___fttol
  3224  0E03  0008               	return
  3225  0E04                     l1918:	
  3226  0E04  3001               	movlw	1
  3227  0E05  00C4               	movwf	??___fttol
  3228  0E06                     u2255:	
  3229  0E06  1003               	clrc
  3230  0E07  0DC9               	rlf	___fttol@lval,f
  3231  0E08  0DCA               	rlf	___fttol@lval+1,f
  3232  0E09  0DCB               	rlf	___fttol@lval+2,f
  3233  0E0A  0DCC               	rlf	___fttol@lval+3,f
  3234  0E0B  0BC4               	decfsz	??___fttol,f
  3235  0E0C  2E06               	goto	u2255
  3236  0E0D  3001               	movlw	1
  3237  0E0E  02CD               	subwf	___fttol@exp1,f
  3238  0E0F                     l640:	
  3239  0E0F  084D               	movf	___fttol@exp1,w
  3240  0E10  1D03               	btfss	3,2
  3241  0E11  2E04               	goto	l1918
  3242  0E12                     l1920:	
  3243  0E12  0848               	movf	___fttol@sign1,w
  3244  0E13  1903               	btfsc	3,2
  3245  0E14  2E20               	goto	l1924
  3246  0E15  09C9               	comf	___fttol@lval,f
  3247  0E16  09CA               	comf	___fttol@lval+1,f
  3248  0E17  09CB               	comf	___fttol@lval+2,f
  3249  0E18  09CC               	comf	___fttol@lval+3,f
  3250  0E19  0AC9               	incf	___fttol@lval,f
  3251  0E1A  1903               	skipnz
  3252  0E1B  0ACA               	incf	___fttol@lval+1,f
  3253  0E1C  1903               	skipnz
  3254  0E1D  0ACB               	incf	___fttol@lval+2,f
  3255  0E1E  1903               	skipnz
  3256  0E1F  0ACC               	incf	___fttol@lval+3,f
  3257  0E20                     l1924:	
  3258  0E20  084C               	movf	___fttol@lval+3,w
  3259  0E21  00C3               	movwf	?___fttol+3
  3260  0E22  084B               	movf	___fttol@lval+2,w
  3261  0E23  00C2               	movwf	?___fttol+2
  3262  0E24  084A               	movf	___fttol@lval+1,w
  3263  0E25  00C1               	movwf	?___fttol+1
  3264  0E26  0849               	movf	___fttol@lval,w
  3265  0E27  00C0               	movwf	?___fttol
  3266  0E28  0008               	return
  3267  0E29                     __end_of___fttol:	
  3268                           
  3269                           	psect	text11
  3270  0232                     __ptext11:	
  3271 ;; *************** function ___ftmul *****************
  3272 ;; Defined at:
  3273 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  f1              3   16[BANK0 ] float 
  3276 ;;  f2              3   19[BANK0 ] float 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  3279 ;;  sign            1   31[BANK0 ] unsigned char 
  3280 ;;  cntr            1   30[BANK0 ] unsigned char 
  3281 ;;  exp             1   26[BANK0 ] unsigned char 
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  3   16[BANK0 ] float 
  3284 ;; Registers used:
  3285 ;;		wreg, status,2, status,0, pclath, cstack
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3291 ;;      Params:         0       6       0       0       0
  3292 ;;      Locals:         0       6       0       0       0
  3293 ;;      Temps:          0       4       0       0       0
  3294 ;;      Totals:         0      16       0       0       0
  3295 ;;Total ram usage:       16 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; Hardware stack levels required when called:    1
  3298 ;; This function calls:
  3299 ;;		___ftpack
  3300 ;; This function is called by:
  3301 ;;		_PWM_Duty
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           
  3306                           ;psect for function ___ftmul
  3307  0232                     ___ftmul:	
  3308                           
  3309                           ;incstack = 0
  3310                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3311  0232  1283               	bcf	3,5	;RP0=0, select bank0
  3312  0233  1303               	bcf	3,6	;RP1=0, select bank0
  3313  0234  0830               	movf	___ftmul@f1,w
  3314  0235  00B6               	movwf	??___ftmul
  3315  0236  0831               	movf	___ftmul@f1+1,w
  3316  0237  00B7               	movwf	??___ftmul+1
  3317  0238  0832               	movf	___ftmul@f1+2,w
  3318  0239  00B8               	movwf	??___ftmul+2
  3319  023A  1003               	clrc
  3320  023B  0D37               	rlf	??___ftmul+1,w
  3321  023C  0D38               	rlf	??___ftmul+2,w
  3322  023D  00B9               	movwf	??___ftmul+3
  3323  023E  0839               	movf	??___ftmul+3,w
  3324  023F  00BA               	movwf	___ftmul@exp
  3325  0240  083A               	movf	___ftmul@exp,w
  3326  0241  1D03               	btfss	3,2
  3327  0242  2A4A               	goto	l1842
  3328  0243  3000               	movlw	0
  3329  0244  00B0               	movwf	?___ftmul
  3330  0245  3000               	movlw	0
  3331  0246  00B1               	movwf	?___ftmul+1
  3332  0247  3000               	movlw	0
  3333  0248  00B2               	movwf	?___ftmul+2
  3334  0249  0008               	return
  3335  024A                     l1842:	
  3336  024A  0833               	movf	___ftmul@f2,w
  3337  024B  00B6               	movwf	??___ftmul
  3338  024C  0834               	movf	___ftmul@f2+1,w
  3339  024D  00B7               	movwf	??___ftmul+1
  3340  024E  0835               	movf	___ftmul@f2+2,w
  3341  024F  00B8               	movwf	??___ftmul+2
  3342  0250  1003               	clrc
  3343  0251  0D37               	rlf	??___ftmul+1,w
  3344  0252  0D38               	rlf	??___ftmul+2,w
  3345  0253  00B9               	movwf	??___ftmul+3
  3346  0254  0839               	movf	??___ftmul+3,w
  3347  0255  00BF               	movwf	___ftmul@sign
  3348  0256  083F               	movf	___ftmul@sign,w
  3349  0257  1D03               	btfss	3,2
  3350  0258  2A60               	goto	l1848
  3351  0259  3000               	movlw	0
  3352  025A  00B0               	movwf	?___ftmul
  3353  025B  3000               	movlw	0
  3354  025C  00B1               	movwf	?___ftmul+1
  3355  025D  3000               	movlw	0
  3356  025E  00B2               	movwf	?___ftmul+2
  3357  025F  0008               	return
  3358  0260                     l1848:	
  3359  0260  083F               	movf	___ftmul@sign,w
  3360  0261  3E7B               	addlw	123
  3361  0262  00B6               	movwf	??___ftmul
  3362  0263  0836               	movf	??___ftmul,w
  3363  0264  07BA               	addwf	___ftmul@exp,f
  3364  0265  0830               	movf	___ftmul@f1,w
  3365  0266  00B6               	movwf	??___ftmul
  3366  0267  0831               	movf	___ftmul@f1+1,w
  3367  0268  00B7               	movwf	??___ftmul+1
  3368  0269  0832               	movf	___ftmul@f1+2,w
  3369  026A  00B8               	movwf	??___ftmul+2
  3370  026B  3010               	movlw	16
  3371  026C                     u2065:	
  3372  026C  1003               	clrc
  3373  026D  0CB8               	rrf	??___ftmul+2,f
  3374  026E  0CB7               	rrf	??___ftmul+1,f
  3375  026F  0CB6               	rrf	??___ftmul,f
  3376  0270  3EFF               	addlw	-1
  3377  0271  1D03               	skipz
  3378  0272  2A6C               	goto	u2065
  3379  0273  0836               	movf	??___ftmul,w
  3380  0274  00B9               	movwf	??___ftmul+3
  3381  0275  0839               	movf	??___ftmul+3,w
  3382  0276  00BF               	movwf	___ftmul@sign
  3383  0277  0833               	movf	___ftmul@f2,w
  3384  0278  00B6               	movwf	??___ftmul
  3385  0279  0834               	movf	___ftmul@f2+1,w
  3386  027A  00B7               	movwf	??___ftmul+1
  3387  027B  0835               	movf	___ftmul@f2+2,w
  3388  027C  00B8               	movwf	??___ftmul+2
  3389  027D  3010               	movlw	16
  3390  027E                     u2075:	
  3391  027E  1003               	clrc
  3392  027F  0CB8               	rrf	??___ftmul+2,f
  3393  0280  0CB7               	rrf	??___ftmul+1,f
  3394  0281  0CB6               	rrf	??___ftmul,f
  3395  0282  3EFF               	addlw	-1
  3396  0283  1D03               	skipz
  3397  0284  2A7E               	goto	u2075
  3398  0285  0836               	movf	??___ftmul,w
  3399  0286  00B9               	movwf	??___ftmul+3
  3400  0287  0839               	movf	??___ftmul+3,w
  3401  0288  06BF               	xorwf	___ftmul@sign,f
  3402  0289  3080               	movlw	128
  3403  028A  00B6               	movwf	??___ftmul
  3404  028B  0836               	movf	??___ftmul,w
  3405  028C  05BF               	andwf	___ftmul@sign,f
  3406  028D  17B1               	bsf	___ftmul@f1+1,7
  3407  028E  17B4               	bsf	___ftmul@f2+1,7
  3408  028F  30FF               	movlw	255
  3409  0290  05B3               	andwf	___ftmul@f2,f
  3410  0291  30FF               	movlw	255
  3411  0292  05B4               	andwf	___ftmul@f2+1,f
  3412  0293  3000               	movlw	0
  3413  0294  05B5               	andwf	___ftmul@f2+2,f
  3414  0295  3000               	movlw	0
  3415  0296  00BB               	movwf	___ftmul@f3_as_product
  3416  0297  3000               	movlw	0
  3417  0298  00BC               	movwf	___ftmul@f3_as_product+1
  3418  0299  3000               	movlw	0
  3419  029A  00BD               	movwf	___ftmul@f3_as_product+2
  3420  029B  3007               	movlw	7
  3421  029C  00B6               	movwf	??___ftmul
  3422  029D  0836               	movf	??___ftmul,w
  3423  029E  00BE               	movwf	___ftmul@cntr
  3424  029F                     l1860:	
  3425  029F  1C30               	btfss	___ftmul@f1,0
  3426  02A0  2AAF               	goto	l1864
  3427  02A1  0833               	movf	___ftmul@f2,w
  3428  02A2  07BB               	addwf	___ftmul@f3_as_product,f
  3429  02A3  0834               	movf	___ftmul@f2+1,w
  3430  02A4  1103               	clrz
  3431  02A5  1803               	skipnc
  3432  02A6  0A34               	incf	___ftmul@f2+1,w
  3433  02A7  1D03               	btfss	3,2
  3434  02A8  07BC               	addwf	___ftmul@f3_as_product+1,f
  3435  02A9  0835               	movf	___ftmul@f2+2,w
  3436  02AA  1103               	clrz
  3437  02AB  1803               	skipnc
  3438  02AC  0A35               	incf	___ftmul@f2+2,w
  3439  02AD  1D03               	btfss	3,2
  3440  02AE  07BD               	addwf	___ftmul@f3_as_product+2,f
  3441  02AF                     l1864:	
  3442  02AF  3001               	movlw	1
  3443  02B0                     u2105:	
  3444  02B0  1003               	clrc
  3445  02B1  0CB2               	rrf	___ftmul@f1+2,f
  3446  02B2  0CB1               	rrf	___ftmul@f1+1,f
  3447  02B3  0CB0               	rrf	___ftmul@f1,f
  3448  02B4  3EFF               	addlw	-1
  3449  02B5  1D03               	skipz
  3450  02B6  2AB0               	goto	u2105
  3451  02B7  3001               	movlw	1
  3452  02B8                     u2115:	
  3453  02B8  1003               	clrc
  3454  02B9  0DB3               	rlf	___ftmul@f2,f
  3455  02BA  0DB4               	rlf	___ftmul@f2+1,f
  3456  02BB  0DB5               	rlf	___ftmul@f2+2,f
  3457  02BC  3EFF               	addlw	-1
  3458  02BD  1D03               	skipz
  3459  02BE  2AB8               	goto	u2115
  3460  02BF  3001               	movlw	1
  3461  02C0  02BE               	subwf	___ftmul@cntr,f
  3462  02C1  1D03               	btfss	3,2
  3463  02C2  2A9F               	goto	l1860
  3464  02C3  3009               	movlw	9
  3465  02C4  00B6               	movwf	??___ftmul
  3466  02C5  0836               	movf	??___ftmul,w
  3467  02C6  00BE               	movwf	___ftmul@cntr
  3468  02C7                     l1872:	
  3469  02C7  1C30               	btfss	___ftmul@f1,0
  3470  02C8  2AD7               	goto	l1876
  3471  02C9  0833               	movf	___ftmul@f2,w
  3472  02CA  07BB               	addwf	___ftmul@f3_as_product,f
  3473  02CB  0834               	movf	___ftmul@f2+1,w
  3474  02CC  1103               	clrz
  3475  02CD  1803               	skipnc
  3476  02CE  0A34               	incf	___ftmul@f2+1,w
  3477  02CF  1D03               	btfss	3,2
  3478  02D0  07BC               	addwf	___ftmul@f3_as_product+1,f
  3479  02D1  0835               	movf	___ftmul@f2+2,w
  3480  02D2  1103               	clrz
  3481  02D3  1803               	skipnc
  3482  02D4  0A35               	incf	___ftmul@f2+2,w
  3483  02D5  1D03               	btfss	3,2
  3484  02D6  07BD               	addwf	___ftmul@f3_as_product+2,f
  3485  02D7                     l1876:	
  3486  02D7  3001               	movlw	1
  3487  02D8                     u2155:	
  3488  02D8  1003               	clrc
  3489  02D9  0CB2               	rrf	___ftmul@f1+2,f
  3490  02DA  0CB1               	rrf	___ftmul@f1+1,f
  3491  02DB  0CB0               	rrf	___ftmul@f1,f
  3492  02DC  3EFF               	addlw	-1
  3493  02DD  1D03               	skipz
  3494  02DE  2AD8               	goto	u2155
  3495  02DF  3001               	movlw	1
  3496  02E0                     u2165:	
  3497  02E0  1003               	clrc
  3498  02E1  0CBD               	rrf	___ftmul@f3_as_product+2,f
  3499  02E2  0CBC               	rrf	___ftmul@f3_as_product+1,f
  3500  02E3  0CBB               	rrf	___ftmul@f3_as_product,f
  3501  02E4  3EFF               	addlw	-1
  3502  02E5  1D03               	skipz
  3503  02E6  2AE0               	goto	u2165
  3504  02E7  3001               	movlw	1
  3505  02E8  02BE               	subwf	___ftmul@cntr,f
  3506  02E9  1D03               	btfss	3,2
  3507  02EA  2AC7               	goto	l1872
  3508  02EB  083B               	movf	___ftmul@f3_as_product,w
  3509  02EC  00F0               	movwf	___ftpack@arg
  3510  02ED  083C               	movf	___ftmul@f3_as_product+1,w
  3511  02EE  00F1               	movwf	___ftpack@arg+1
  3512  02EF  083D               	movf	___ftmul@f3_as_product+2,w
  3513  02F0  00F2               	movwf	___ftpack@arg+2
  3514  02F1  083A               	movf	___ftmul@exp,w
  3515  02F2  00B6               	movwf	??___ftmul
  3516  02F3  0836               	movf	??___ftmul,w
  3517  02F4  00F3               	movwf	___ftpack@exp
  3518  02F5  083F               	movf	___ftmul@sign,w
  3519  02F6  00B7               	movwf	??___ftmul+1
  3520  02F7  0837               	movf	??___ftmul+1,w
  3521  02F8  00F4               	movwf	___ftpack@sign
  3522  02F9  120A  158A  232D   	fcall	___ftpack
  3523  02FC  0870               	movf	?___ftpack,w
  3524  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  3525  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  3526  02FF  00B0               	movwf	?___ftmul
  3527  0300  0871               	movf	?___ftpack+1,w
  3528  0301  00B1               	movwf	?___ftmul+1
  3529  0302  0872               	movf	?___ftpack+2,w
  3530  0303  00B2               	movwf	?___ftmul+2
  3531  0304  0008               	return
  3532  0305                     __end_of___ftmul:	
  3533                           
  3534                           	psect	text12
  3535  00BB                     __ptext12:	
  3536 ;; *************** function ___ftdiv *****************
  3537 ;; Defined at:
  3538 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;  f2              3    0[BANK0 ] float 
  3541 ;;  f1              3    3[BANK0 ] float 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;  f3              3   11[BANK0 ] float 
  3544 ;;  sign            1   15[BANK0 ] unsigned char 
  3545 ;;  exp             1   14[BANK0 ] unsigned char 
  3546 ;;  cntr            1   10[BANK0 ] unsigned char 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  3    0[BANK0 ] float 
  3549 ;; Registers used:
  3550 ;;		wreg, status,2, status,0, pclath, cstack
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3556 ;;      Params:         0       6       0       0       0
  3557 ;;      Locals:         0       6       0       0       0
  3558 ;;      Temps:          0       4       0       0       0
  3559 ;;      Totals:         0      16       0       0       0
  3560 ;;Total ram usage:       16 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:    1
  3563 ;; This function calls:
  3564 ;;		___ftpack
  3565 ;; This function is called by:
  3566 ;;		_PWM_Duty
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           
  3571                           ;psect for function ___ftdiv
  3572  00BB                     ___ftdiv:	
  3573                           
  3574                           ;incstack = 0
  3575                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3576  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  3577  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  3578  00BD  0823               	movf	___ftdiv@f1,w
  3579  00BE  00A6               	movwf	??___ftdiv
  3580  00BF  0824               	movf	___ftdiv@f1+1,w
  3581  00C0  00A7               	movwf	??___ftdiv+1
  3582  00C1  0825               	movf	___ftdiv@f1+2,w
  3583  00C2  00A8               	movwf	??___ftdiv+2
  3584  00C3  1003               	clrc
  3585  00C4  0D27               	rlf	??___ftdiv+1,w
  3586  00C5  0D28               	rlf	??___ftdiv+2,w
  3587  00C6  00A9               	movwf	??___ftdiv+3
  3588  00C7  0829               	movf	??___ftdiv+3,w
  3589  00C8  00AE               	movwf	___ftdiv@exp
  3590  00C9  082E               	movf	___ftdiv@exp,w
  3591  00CA  1D03               	btfss	3,2
  3592  00CB  28D3               	goto	l1800
  3593  00CC  3000               	movlw	0
  3594  00CD  00A0               	movwf	?___ftdiv
  3595  00CE  3000               	movlw	0
  3596  00CF  00A1               	movwf	?___ftdiv+1
  3597  00D0  3000               	movlw	0
  3598  00D1  00A2               	movwf	?___ftdiv+2
  3599  00D2  0008               	return
  3600  00D3                     l1800:	
  3601  00D3  0820               	movf	___ftdiv@f2,w
  3602  00D4  00A6               	movwf	??___ftdiv
  3603  00D5  0821               	movf	___ftdiv@f2+1,w
  3604  00D6  00A7               	movwf	??___ftdiv+1
  3605  00D7  0822               	movf	___ftdiv@f2+2,w
  3606  00D8  00A8               	movwf	??___ftdiv+2
  3607  00D9  1003               	clrc
  3608  00DA  0D27               	rlf	??___ftdiv+1,w
  3609  00DB  0D28               	rlf	??___ftdiv+2,w
  3610  00DC  00A9               	movwf	??___ftdiv+3
  3611  00DD  0829               	movf	??___ftdiv+3,w
  3612  00DE  00AF               	movwf	___ftdiv@sign
  3613  00DF  082F               	movf	___ftdiv@sign,w
  3614  00E0  1D03               	btfss	3,2
  3615  00E1  28E9               	goto	l1806
  3616  00E2  3000               	movlw	0
  3617  00E3  00A0               	movwf	?___ftdiv
  3618  00E4  3000               	movlw	0
  3619  00E5  00A1               	movwf	?___ftdiv+1
  3620  00E6  3000               	movlw	0
  3621  00E7  00A2               	movwf	?___ftdiv+2
  3622  00E8  0008               	return
  3623  00E9                     l1806:	
  3624  00E9  3000               	movlw	0
  3625  00EA  00AB               	movwf	___ftdiv@f3
  3626  00EB  3000               	movlw	0
  3627  00EC  00AC               	movwf	___ftdiv@f3+1
  3628  00ED  3000               	movlw	0
  3629  00EE  00AD               	movwf	___ftdiv@f3+2
  3630  00EF  3089               	movlw	137
  3631  00F0  072F               	addwf	___ftdiv@sign,w
  3632  00F1  00A6               	movwf	??___ftdiv
  3633  00F2  0826               	movf	??___ftdiv,w
  3634  00F3  02AE               	subwf	___ftdiv@exp,f
  3635  00F4  0823               	movf	___ftdiv@f1,w
  3636  00F5  00A6               	movwf	??___ftdiv
  3637  00F6  0824               	movf	___ftdiv@f1+1,w
  3638  00F7  00A7               	movwf	??___ftdiv+1
  3639  00F8  0825               	movf	___ftdiv@f1+2,w
  3640  00F9  00A8               	movwf	??___ftdiv+2
  3641  00FA  3010               	movlw	16
  3642  00FB                     u1985:	
  3643  00FB  1003               	clrc
  3644  00FC  0CA8               	rrf	??___ftdiv+2,f
  3645  00FD  0CA7               	rrf	??___ftdiv+1,f
  3646  00FE  0CA6               	rrf	??___ftdiv,f
  3647  00FF  3EFF               	addlw	-1
  3648  0100  1D03               	skipz
  3649  0101  28FB               	goto	u1985
  3650  0102  0826               	movf	??___ftdiv,w
  3651  0103  00A9               	movwf	??___ftdiv+3
  3652  0104  0829               	movf	??___ftdiv+3,w
  3653  0105  00AF               	movwf	___ftdiv@sign
  3654  0106  0820               	movf	___ftdiv@f2,w
  3655  0107  00A6               	movwf	??___ftdiv
  3656  0108  0821               	movf	___ftdiv@f2+1,w
  3657  0109  00A7               	movwf	??___ftdiv+1
  3658  010A  0822               	movf	___ftdiv@f2+2,w
  3659  010B  00A8               	movwf	??___ftdiv+2
  3660  010C  3010               	movlw	16
  3661  010D                     u1995:	
  3662  010D  1003               	clrc
  3663  010E  0CA8               	rrf	??___ftdiv+2,f
  3664  010F  0CA7               	rrf	??___ftdiv+1,f
  3665  0110  0CA6               	rrf	??___ftdiv,f
  3666  0111  3EFF               	addlw	-1
  3667  0112  1D03               	skipz
  3668  0113  290D               	goto	u1995
  3669  0114  0826               	movf	??___ftdiv,w
  3670  0115  00A9               	movwf	??___ftdiv+3
  3671  0116  0829               	movf	??___ftdiv+3,w
  3672  0117  06AF               	xorwf	___ftdiv@sign,f
  3673  0118  3080               	movlw	128
  3674  0119  00A6               	movwf	??___ftdiv
  3675  011A  0826               	movf	??___ftdiv,w
  3676  011B  05AF               	andwf	___ftdiv@sign,f
  3677  011C  17A4               	bsf	___ftdiv@f1+1,7
  3678  011D  30FF               	movlw	255
  3679  011E  05A3               	andwf	___ftdiv@f1,f
  3680  011F  30FF               	movlw	255
  3681  0120  05A4               	andwf	___ftdiv@f1+1,f
  3682  0121  3000               	movlw	0
  3683  0122  05A5               	andwf	___ftdiv@f1+2,f
  3684  0123  17A1               	bsf	___ftdiv@f2+1,7
  3685  0124  30FF               	movlw	255
  3686  0125  05A0               	andwf	___ftdiv@f2,f
  3687  0126  30FF               	movlw	255
  3688  0127  05A1               	andwf	___ftdiv@f2+1,f
  3689  0128  3000               	movlw	0
  3690  0129  05A2               	andwf	___ftdiv@f2+2,f
  3691  012A  3018               	movlw	24
  3692  012B  00A6               	movwf	??___ftdiv
  3693  012C  0826               	movf	??___ftdiv,w
  3694  012D  00AA               	movwf	___ftdiv@cntr
  3695  012E                     l1820:	
  3696  012E  3001               	movlw	1
  3697  012F                     u2005:	
  3698  012F  1003               	clrc
  3699  0130  0DAB               	rlf	___ftdiv@f3,f
  3700  0131  0DAC               	rlf	___ftdiv@f3+1,f
  3701  0132  0DAD               	rlf	___ftdiv@f3+2,f
  3702  0133  3EFF               	addlw	-1
  3703  0134  1D03               	skipz
  3704  0135  292F               	goto	u2005
  3705  0136  0822               	movf	___ftdiv@f2+2,w
  3706  0137  0225               	subwf	___ftdiv@f1+2,w
  3707  0138  1D03               	skipz
  3708  0139  2940               	goto	u2015
  3709  013A  0821               	movf	___ftdiv@f2+1,w
  3710  013B  0224               	subwf	___ftdiv@f1+1,w
  3711  013C  1D03               	skipz
  3712  013D  2940               	goto	u2015
  3713  013E  0820               	movf	___ftdiv@f2,w
  3714  013F  0223               	subwf	___ftdiv@f1,w
  3715  0140                     u2015:	
  3716  0140  1C03               	skipc
  3717  0141  294D               	goto	l1828
  3718  0142  0820               	movf	___ftdiv@f2,w
  3719  0143  02A3               	subwf	___ftdiv@f1,f
  3720  0144  0821               	movf	___ftdiv@f2+1,w
  3721  0145  1C03               	skipc
  3722  0146  0F21               	incfsz	___ftdiv@f2+1,w
  3723  0147  02A4               	subwf	___ftdiv@f1+1,f
  3724  0148  0822               	movf	___ftdiv@f2+2,w
  3725  0149  1C03               	skipc
  3726  014A  0A22               	incf	___ftdiv@f2+2,w
  3727  014B  02A5               	subwf	___ftdiv@f1+2,f
  3728  014C  142B               	bsf	___ftdiv@f3,0
  3729  014D                     l1828:	
  3730  014D  3001               	movlw	1
  3731  014E                     u2025:	
  3732  014E  1003               	clrc
  3733  014F  0DA3               	rlf	___ftdiv@f1,f
  3734  0150  0DA4               	rlf	___ftdiv@f1+1,f
  3735  0151  0DA5               	rlf	___ftdiv@f1+2,f
  3736  0152  3EFF               	addlw	-1
  3737  0153  1D03               	skipz
  3738  0154  294E               	goto	u2025
  3739  0155  3001               	movlw	1
  3740  0156  02AA               	subwf	___ftdiv@cntr,f
  3741  0157  1D03               	btfss	3,2
  3742  0158  292E               	goto	l1820
  3743  0159  082B               	movf	___ftdiv@f3,w
  3744  015A  00F0               	movwf	___ftpack@arg
  3745  015B  082C               	movf	___ftdiv@f3+1,w
  3746  015C  00F1               	movwf	___ftpack@arg+1
  3747  015D  082D               	movf	___ftdiv@f3+2,w
  3748  015E  00F2               	movwf	___ftpack@arg+2
  3749  015F  082E               	movf	___ftdiv@exp,w
  3750  0160  00A6               	movwf	??___ftdiv
  3751  0161  0826               	movf	??___ftdiv,w
  3752  0162  00F3               	movwf	___ftpack@exp
  3753  0163  082F               	movf	___ftdiv@sign,w
  3754  0164  00A7               	movwf	??___ftdiv+1
  3755  0165  0827               	movf	??___ftdiv+1,w
  3756  0166  00F4               	movwf	___ftpack@sign
  3757  0167  120A  158A  232D   	fcall	___ftpack
  3758  016A  0870               	movf	?___ftpack,w
  3759  016B  1283               	bcf	3,5	;RP0=0, select bank0
  3760  016C  1303               	bcf	3,6	;RP1=0, select bank0
  3761  016D  00A0               	movwf	?___ftdiv
  3762  016E  0871               	movf	?___ftpack+1,w
  3763  016F  00A1               	movwf	?___ftdiv+1
  3764  0170  0872               	movf	?___ftpack+2,w
  3765  0171  00A2               	movwf	?___ftdiv+2
  3766  0172  0008               	return
  3767  0173                     __end_of___ftdiv:	
  3768                           
  3769                           	psect	text13
  3770  09B5                     __ptext13:	
  3771 ;; *************** function ___altoft *****************
  3772 ;; Defined at:
  3773 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\altoft.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;  c               4    6[BANK0 ] long 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  sign            1   12[COMMON] unsigned char 
  3778 ;;  exp             1   11[COMMON] unsigned char 
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  3    6[BANK0 ] float 
  3781 ;; Registers used:
  3782 ;;		wreg, status,2, status,0, pclath, cstack
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3788 ;;      Params:         0       4       0       0       0
  3789 ;;      Locals:         2       0       0       0       0
  3790 ;;      Temps:          2       0       0       0       0
  3791 ;;      Totals:         4       4       0       0       0
  3792 ;;Total ram usage:        8 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; Hardware stack levels required when called:    1
  3795 ;; This function calls:
  3796 ;;		___ftpack
  3797 ;; This function is called by:
  3798 ;;		_PWM_Duty
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           
  3803                           ;psect for function ___altoft
  3804  09B5                     ___altoft:	
  3805                           
  3806                           ;incstack = 0
  3807                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  3808  09B5  01FC               	clrf	___altoft@sign
  3809  09B6  308E               	movlw	142
  3810  09B7  00F9               	movwf	??___altoft
  3811  09B8  0879               	movf	??___altoft,w
  3812  09B9  00FB               	movwf	___altoft@exp
  3813  09BA  1283               	bcf	3,5	;RP0=0, select bank0
  3814  09BB  1303               	bcf	3,6	;RP1=0, select bank0
  3815  09BC  1FA9               	btfss	___altoft@c+3,7
  3816  09BD  29CB               	goto	l1788
  3817  09BE  09A6               	comf	___altoft@c,f
  3818  09BF  09A7               	comf	___altoft@c+1,f
  3819  09C0  09A8               	comf	___altoft@c+2,f
  3820  09C1  09A9               	comf	___altoft@c+3,f
  3821  09C2  0AA6               	incf	___altoft@c,f
  3822  09C3  1903               	skipnz
  3823  09C4  0AA7               	incf	___altoft@c+1,f
  3824  09C5  1903               	skipnz
  3825  09C6  0AA8               	incf	___altoft@c+2,f
  3826  09C7  1903               	skipnz
  3827  09C8  0AA9               	incf	___altoft@c+3,f
  3828  09C9  01FC               	clrf	___altoft@sign
  3829  09CA  0AFC               	incf	___altoft@sign,f
  3830  09CB                     l1788:	
  3831  09CB  30FF               	movlw	255
  3832  09CC  0529               	andwf	___altoft@c+3,w
  3833  09CD  1903               	btfsc	3,2
  3834  09CE  29DD               	goto	l1790
  3835  09CF  3001               	movlw	1
  3836  09D0                     u1945:	
  3837  09D0  1003               	clrc
  3838  09D1  0CA9               	rrf	___altoft@c+3,f
  3839  09D2  0CA8               	rrf	___altoft@c+2,f
  3840  09D3  0CA7               	rrf	___altoft@c+1,f
  3841  09D4  0CA6               	rrf	___altoft@c,f
  3842  09D5  3EFF               	addlw	-1
  3843  09D6  1D03               	skipz
  3844  09D7  29D0               	goto	u1945
  3845  09D8  3001               	movlw	1
  3846  09D9  00F9               	movwf	??___altoft
  3847  09DA  0879               	movf	??___altoft,w
  3848  09DB  07FB               	addwf	___altoft@exp,f
  3849  09DC  29CB               	goto	l1788
  3850  09DD                     l1790:	
  3851  09DD  0826               	movf	___altoft@c,w
  3852  09DE  00F0               	movwf	___ftpack@arg
  3853  09DF  0827               	movf	___altoft@c+1,w
  3854  09E0  00F1               	movwf	___ftpack@arg+1
  3855  09E1  0828               	movf	___altoft@c+2,w
  3856  09E2  00F2               	movwf	___ftpack@arg+2
  3857  09E3  087B               	movf	___altoft@exp,w
  3858  09E4  00F9               	movwf	??___altoft
  3859  09E5  0879               	movf	??___altoft,w
  3860  09E6  00F3               	movwf	___ftpack@exp
  3861  09E7  087C               	movf	___altoft@sign,w
  3862  09E8  00FA               	movwf	??___altoft+1
  3863  09E9  087A               	movf	??___altoft+1,w
  3864  09EA  00F4               	movwf	___ftpack@sign
  3865  09EB  120A  158A  232D   	fcall	___ftpack
  3866  09EE  0870               	movf	?___ftpack,w
  3867  09EF  1283               	bcf	3,5	;RP0=0, select bank0
  3868  09F0  1303               	bcf	3,6	;RP1=0, select bank0
  3869  09F1  00A6               	movwf	?___altoft
  3870  09F2  0871               	movf	?___ftpack+1,w
  3871  09F3  00A7               	movwf	?___altoft+1
  3872  09F4  0872               	movf	?___ftpack+2,w
  3873  09F5  00A8               	movwf	?___altoft+2
  3874  09F6  0008               	return
  3875  09F7                     __end_of___altoft:	
  3876                           
  3877                           	psect	text14
  3878  0B2D                     __ptext14:	
  3879 ;; *************** function ___ftpack *****************
  3880 ;; Defined at:
  3881 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;  arg             3    0[COMMON] unsigned um
  3884 ;;  exp             1    3[COMMON] unsigned char 
  3885 ;;  sign            1    4[COMMON] unsigned char 
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;		None
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  3    0[COMMON] float 
  3890 ;; Registers used:
  3891 ;;		wreg, status,2, status,0
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3897 ;;      Params:         5       0       0       0       0
  3898 ;;      Locals:         0       0       0       0       0
  3899 ;;      Temps:          3       0       0       0       0
  3900 ;;      Totals:         8       0       0       0       0
  3901 ;;Total ram usage:        8 bytes
  3902 ;; Hardware stack levels used:    1
  3903 ;; This function calls:
  3904 ;;		Nothing
  3905 ;; This function is called by:
  3906 ;;		___altoft
  3907 ;;		___ftdiv
  3908 ;;		___ftmul
  3909 ;;		___lwtoft
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           
  3914                           ;psect for function ___ftpack
  3915  0B2D                     ___ftpack:	
  3916                           
  3917                           ;incstack = 0
  3918                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3919  0B2D  0873               	movf	___ftpack@exp,w
  3920  0B2E  1903               	btfsc	3,2
  3921  0B2F  2B35               	goto	l1656
  3922  0B30  0872               	movf	___ftpack@arg+2,w
  3923  0B31  0471               	iorwf	___ftpack@arg+1,w
  3924  0B32  0470               	iorwf	___ftpack@arg,w
  3925  0B33  1D03               	skipz
  3926  0B34  2B48               	goto	l1662
  3927  0B35                     l1656:	
  3928  0B35  3000               	movlw	0
  3929  0B36  00F0               	movwf	?___ftpack
  3930  0B37  3000               	movlw	0
  3931  0B38  00F1               	movwf	?___ftpack+1
  3932  0B39  3000               	movlw	0
  3933  0B3A  00F2               	movwf	?___ftpack+2
  3934  0B3B  0008               	return
  3935  0B3C                     l1660:	
  3936  0B3C  3001               	movlw	1
  3937  0B3D  00F5               	movwf	??___ftpack
  3938  0B3E  0875               	movf	??___ftpack,w
  3939  0B3F  07F3               	addwf	___ftpack@exp,f
  3940  0B40  3001               	movlw	1
  3941  0B41                     u1615:	
  3942  0B41  1003               	clrc
  3943  0B42  0CF2               	rrf	___ftpack@arg+2,f
  3944  0B43  0CF1               	rrf	___ftpack@arg+1,f
  3945  0B44  0CF0               	rrf	___ftpack@arg,f
  3946  0B45  3EFF               	addlw	-1
  3947  0B46  1D03               	skipz
  3948  0B47  2B41               	goto	u1615
  3949  0B48                     l1662:	
  3950  0B48  30FE               	movlw	254
  3951  0B49  0572               	andwf	___ftpack@arg+2,w
  3952  0B4A  1903               	btfsc	3,2
  3953  0B4B  2B63               	goto	l549
  3954  0B4C  2B3C               	goto	l1660
  3955  0B4D                     l1664:	
  3956  0B4D  3001               	movlw	1
  3957  0B4E  00F5               	movwf	??___ftpack
  3958  0B4F  0875               	movf	??___ftpack,w
  3959  0B50  07F3               	addwf	___ftpack@exp,f
  3960  0B51  3001               	movlw	1
  3961  0B52  07F0               	addwf	___ftpack@arg,f
  3962  0B53  3000               	movlw	0
  3963  0B54  1803               	skipnc
  3964  0B55  3001               	movlw	1
  3965  0B56  07F1               	addwf	___ftpack@arg+1,f
  3966  0B57  3000               	movlw	0
  3967  0B58  1803               	skipnc
  3968  0B59  3001               	movlw	1
  3969  0B5A  07F2               	addwf	___ftpack@arg+2,f
  3970  0B5B  3001               	movlw	1
  3971  0B5C                     u1635:	
  3972  0B5C  1003               	clrc
  3973  0B5D  0CF2               	rrf	___ftpack@arg+2,f
  3974  0B5E  0CF1               	rrf	___ftpack@arg+1,f
  3975  0B5F  0CF0               	rrf	___ftpack@arg,f
  3976  0B60  3EFF               	addlw	-1
  3977  0B61  1D03               	skipz
  3978  0B62  2B5C               	goto	u1635
  3979  0B63                     l549:	
  3980  0B63  30FF               	movlw	255
  3981  0B64  0572               	andwf	___ftpack@arg+2,w
  3982  0B65  1903               	btfsc	3,2
  3983  0B66  2B72               	goto	l1672
  3984  0B67  2B4D               	goto	l1664
  3985  0B68                     l1670:	
  3986  0B68  3001               	movlw	1
  3987  0B69  02F3               	subwf	___ftpack@exp,f
  3988  0B6A  3001               	movlw	1
  3989  0B6B                     u1655:	
  3990  0B6B  1003               	clrc
  3991  0B6C  0DF0               	rlf	___ftpack@arg,f
  3992  0B6D  0DF1               	rlf	___ftpack@arg+1,f
  3993  0B6E  0DF2               	rlf	___ftpack@arg+2,f
  3994  0B6F  3EFF               	addlw	-1
  3995  0B70  1D03               	skipz
  3996  0B71  2B6B               	goto	u1655
  3997  0B72                     l1672:	
  3998  0B72  1BF1               	btfsc	___ftpack@arg+1,7
  3999  0B73  2B78               	goto	l556
  4000  0B74  3002               	movlw	2
  4001  0B75  0273               	subwf	___ftpack@exp,w
  4002  0B76  1803               	skipnc
  4003  0B77  2B68               	goto	l1670
  4004  0B78                     l556:	
  4005  0B78  1873               	btfsc	___ftpack@exp,0
  4006  0B79  2B80               	goto	l557
  4007  0B7A  30FF               	movlw	255
  4008  0B7B  05F0               	andwf	___ftpack@arg,f
  4009  0B7C  307F               	movlw	127
  4010  0B7D  05F1               	andwf	___ftpack@arg+1,f
  4011  0B7E  30FF               	movlw	255
  4012  0B7F  05F2               	andwf	___ftpack@arg+2,f
  4013  0B80                     l557:	
  4014  0B80  1003               	clrc
  4015  0B81  0CF3               	rrf	___ftpack@exp,f
  4016  0B82  0873               	movf	___ftpack@exp,w
  4017  0B83  00F5               	movwf	??___ftpack
  4018  0B84  01F6               	clrf	??___ftpack+1
  4019  0B85  01F7               	clrf	??___ftpack+2
  4020  0B86  3010               	movlw	16
  4021  0B87                     u1695:	
  4022  0B87  1003               	clrc
  4023  0B88  0DF5               	rlf	??___ftpack,f
  4024  0B89  0DF6               	rlf	??___ftpack+1,f
  4025  0B8A  0DF7               	rlf	??___ftpack+2,f
  4026  0B8B  3EFF               	addlw	-1
  4027  0B8C  1D03               	skipz
  4028  0B8D  2B87               	goto	u1695
  4029  0B8E  0875               	movf	??___ftpack,w
  4030  0B8F  04F0               	iorwf	___ftpack@arg,f
  4031  0B90  0876               	movf	??___ftpack+1,w
  4032  0B91  04F1               	iorwf	___ftpack@arg+1,f
  4033  0B92  0877               	movf	??___ftpack+2,w
  4034  0B93  04F2               	iorwf	___ftpack@arg+2,f
  4035  0B94  0874               	movf	___ftpack@sign,w
  4036  0B95  1903               	btfsc	3,2
  4037  0B96  0008               	return
  4038  0B97  17F2               	bsf	___ftpack@arg+2,7
  4039  0B98  0008               	return
  4040  0B99                     __end_of___ftpack:	
  4041                           
  4042                           	psect	text15
  4043  17A5                     __ptext15:	
  4044 ;; *************** function _ADC_Read *****************
  4045 ;; Defined at:
  4046 ;;		line 251 in file "main.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;  channel         1    wreg     unsigned char 
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;  channel         1    4[COMMON] unsigned char 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  2    0[COMMON] unsigned int 
  4053 ;; Registers used:
  4054 ;;		wreg, status,2, status,0
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4060 ;;      Params:         2       0       0       0       0
  4061 ;;      Locals:         1       0       0       0       0
  4062 ;;      Temps:          2       0       0       0       0
  4063 ;;      Totals:         5       0       0       0       0
  4064 ;;Total ram usage:        5 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; This function calls:
  4067 ;;		Nothing
  4068 ;; This function is called by:
  4069 ;;		_llenadoAgua
  4070 ;;		_SacaraAgua
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           
  4075                           ;psect for function _ADC_Read
  4076  17A5                     _ADC_Read:	
  4077                           
  4078                           ;incstack = 0
  4079                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  4080                           ;ADC_Read@channel stored from wreg
  4081  17A5  00F4               	movwf	ADC_Read@channel
  4082                           
  4083                           ;main.c: 253: ADCON0 &= 0x11000101;
  4084  17A6  3001               	movlw	1
  4085  17A7  00F2               	movwf	??_ADC_Read
  4086  17A8  0872               	movf	??_ADC_Read,w
  4087  17A9  1283               	bcf	3,5	;RP0=0, select bank0
  4088  17AA  1303               	bcf	3,6	;RP1=0, select bank0
  4089  17AB  059F               	andwf	31,f	;volatile
  4090                           
  4091                           ;main.c: 254: ADCON0 |= channel<<3;
  4092  17AC  0874               	movf	ADC_Read@channel,w
  4093  17AD  00F2               	movwf	??_ADC_Read
  4094  17AE  3002               	movlw	2
  4095  17AF                     u2685:	
  4096  17AF  1003               	clrc
  4097  17B0  0DF2               	rlf	??_ADC_Read,f
  4098  17B1  3EFF               	addlw	-1
  4099  17B2  1D03               	skipz
  4100  17B3  2FAF               	goto	u2685
  4101  17B4  1003               	clrc
  4102  17B5  0D72               	rlf	??_ADC_Read,w
  4103  17B6  00F3               	movwf	??_ADC_Read+1
  4104  17B7  0873               	movf	??_ADC_Read+1,w
  4105  17B8  049F               	iorwf	31,f	;volatile
  4106                           
  4107                           ;main.c: 255: _delay((unsigned long)((2)*(20000000/4000.0)));
  4108  17B9  300D               	movlw	13
  4109  17BA  00F3               	movwf	??_ADC_Read+1
  4110  17BB  30FB               	movlw	251
  4111  17BC  00F2               	movwf	??_ADC_Read
  4112  17BD                     u3227:	
  4113  17BD  0BF2               	decfsz	??_ADC_Read,f
  4114  17BE  2FBD               	goto	u3227
  4115  17BF  0BF3               	decfsz	??_ADC_Read+1,f
  4116  17C0  2FBD               	goto	u3227
  4117  17C1  2FC2               	nop2
  4118                           
  4119                           ;main.c: 256: GO_nDONE = 1;
  4120  17C2  1283               	bcf	3,5	;RP0=0, select bank0
  4121  17C3  1303               	bcf	3,6	;RP1=0, select bank0
  4122  17C4  151F               	bsf	31,2	;volatile
  4123  17C5                     l229:	
  4124                           ;main.c: 257: while(GO_nDONE);
  4125                           
  4126  17C5  191F               	btfsc	31,2	;volatile
  4127  17C6  2FC5               	goto	l229
  4128                           
  4129                           ;main.c: 258: return ((ADRESH<<8)+ADRESL);
  4130  17C7  081E               	movf	30,w	;volatile
  4131  17C8  00F1               	movwf	?_ADC_Read+1
  4132  17C9  1683               	bsf	3,5	;RP0=1, select bank1
  4133  17CA  1303               	bcf	3,6	;RP1=0, select bank1
  4134  17CB  081E               	movf	30,w	;volatile
  4135  17CC  00F0               	movwf	?_ADC_Read
  4136  17CD  0008               	return
  4137  17CE                     __end_of_ADC_Read:	
  4138                           
  4139                           	psect	text16
  4140  09F7                     __ptext16:	
  4141 ;; *************** function _MensajeFinalizado *****************
  4142 ;; Defined at:
  4143 ;;		line 159 in file "main.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;		None
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;  i               2   12[COMMON] int 
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  1    wreg      void 
  4150 ;; Registers used:
  4151 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4157 ;;      Params:         0       0       0       0       0
  4158 ;;      Locals:         2       0       0       0       0
  4159 ;;      Temps:          3       0       0       0       0
  4160 ;;      Totals:         5       0       0       0       0
  4161 ;;Total ram usage:        5 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; Hardware stack levels required when called:    2
  4164 ;; This function calls:
  4165 ;;		_Lcd_Command
  4166 ;;		_Lcd_Text
  4167 ;; This function is called by:
  4168 ;;		_lavadoNormal
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           
  4173                           ;psect for function _MensajeFinalizado
  4174  09F7                     _MensajeFinalizado:	
  4175                           
  4176                           ;main.c: 160: Lcd_Command(1);
  4177                           
  4178                           ;incstack = 0
  4179                           ; Regs used in _MensajeFinalizado: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4180  09F7  3001               	movlw	1
  4181  09F8  120A  158A  26B8  120A  158A  	fcall	_Lcd_Command
  4182                           
  4183                           ;main.c: 161: Lcd_Text(2, 1, "      Finalizado    ");
  4184  09FD  01F3               	clrf	Lcd_Text@x
  4185  09FE  0AF3               	incf	Lcd_Text@x,f
  4186  09FF  3075               	movlw	low (STR_6| (0+32768))
  4187  0A00  00F4               	movwf	Lcd_Text@buffer
  4188  0A01  3088               	movlw	high (STR_6| (0+32768))
  4189  0A02  00F5               	movwf	Lcd_Text@buffer+1
  4190  0A03  3002               	movlw	2
  4191  0A04  120A  158A  223D  120A  158A  	fcall	_Lcd_Text
  4192                           
  4193                           ;main.c: 162: for (int i = 0; i < 4; i++) {
  4194  0A09  01FC               	clrf	MensajeFinalizado@i
  4195  0A0A  01FD               	clrf	MensajeFinalizado@i+1
  4196  0A0B                     L1:	
  4197  0A0B  087D               	movf	MensajeFinalizado@i+1,w
  4198  0A0C  3A80               	xorlw	128
  4199  0A0D  00FF               	movwf	127
  4200  0A0E  3080               	movlw	128
  4201  0A0F  027F               	subwf	127,w
  4202  0A10  1D03               	skipz
  4203  0A11  2A14               	goto	u2745
  4204  0A12  3004               	movlw	4
  4205  0A13  027C               	subwf	MensajeFinalizado@i,w
  4206  0A14                     u2745:	
  4207  0A14  1803               	btfsc	3,0
  4208  0A15  0008               	return
  4209                           
  4210                           ;main.c: 163: PORTAbits.RA5 = 1;
  4211  0A16  1283               	bcf	3,5	;RP0=0, select bank0
  4212  0A17  1303               	bcf	3,6	;RP1=0, select bank0
  4213  0A18  1685               	bsf	5,5	;volatile
  4214                           
  4215                           ;main.c: 164: _delay((unsigned long)((1000)*(20000000/4000.0)));
  4216  0A19  301A               	movlw	26
  4217  0A1A  00FB               	movwf	??_MensajeFinalizado+2
  4218  0A1B  305E               	movlw	94
  4219  0A1C  00FA               	movwf	??_MensajeFinalizado+1
  4220  0A1D  306E               	movlw	110
  4221  0A1E  00F9               	movwf	??_MensajeFinalizado
  4222  0A1F                     u3237:	
  4223  0A1F  0BF9               	decfsz	??_MensajeFinalizado,f
  4224  0A20  2A1F               	goto	u3237
  4225  0A21  0BFA               	decfsz	??_MensajeFinalizado+1,f
  4226  0A22  2A1F               	goto	u3237
  4227  0A23  0BFB               	decfsz	??_MensajeFinalizado+2,f
  4228  0A24  2A1F               	goto	u3237
  4229  0A25  0000               	nop
  4230                           
  4231                           ;main.c: 165: PORTAbits.RA5 = 0;
  4232  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  4233  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  4234  0A28  1285               	bcf	5,5	;volatile
  4235                           
  4236                           ;main.c: 166: _delay((unsigned long)((500)*(20000000/4000.0)));
  4237  0A29  300D               	movlw	13
  4238  0A2A  00FB               	movwf	??_MensajeFinalizado+2
  4239  0A2B  30AF               	movlw	175
  4240  0A2C  00FA               	movwf	??_MensajeFinalizado+1
  4241  0A2D  30B6               	movlw	182
  4242  0A2E  00F9               	movwf	??_MensajeFinalizado
  4243  0A2F                     u3247:	
  4244  0A2F  0BF9               	decfsz	??_MensajeFinalizado,f
  4245  0A30  2A2F               	goto	u3247
  4246  0A31  0BFA               	decfsz	??_MensajeFinalizado+1,f
  4247  0A32  2A2F               	goto	u3247
  4248  0A33  0BFB               	decfsz	??_MensajeFinalizado+2,f
  4249  0A34  2A2F               	goto	u3247
  4250  0A35  0000               	nop
  4251  0A36  3001               	movlw	1
  4252  0A37  07FC               	addwf	MensajeFinalizado@i,f
  4253  0A38  1803               	skipnc
  4254  0A39  0AFD               	incf	MensajeFinalizado@i+1,f
  4255  0A3A  3000               	movlw	0
  4256  0A3B  07FD               	addwf	MensajeFinalizado@i+1,f
  4257  0A3C  2A0B               	goto	L1
  4258  0A3D                     __end_of_MensajeFinalizado:	
  4259                           
  4260                           	psect	text17
  4261  1731                     __ptext17:	
  4262 ;; *************** function _Puerta *****************
  4263 ;; Defined at:
  4264 ;;		line 188 in file "main.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;  op              2    0[COMMON] int 
  4267 ;; Auto vars:     Size  Location     Type
  4268 ;;		None
  4269 ;; Return value:  Size  Location     Type
  4270 ;;                  1    wreg      void 
  4271 ;; Registers used:
  4272 ;;		wreg, status,2, status,0
  4273 ;; Tracked objects:
  4274 ;;		On entry : 0/0
  4275 ;;		On exit  : 0/0
  4276 ;;		Unchanged: 0/0
  4277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4278 ;;      Params:         2       0       0       0       0
  4279 ;;      Locals:         0       0       0       0       0
  4280 ;;      Temps:          0       0       0       0       0
  4281 ;;      Totals:         2       0       0       0       0
  4282 ;;Total ram usage:        2 bytes
  4283 ;; Hardware stack levels used:    1
  4284 ;; This function calls:
  4285 ;;		Nothing
  4286 ;; This function is called by:
  4287 ;;		_main
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291                           
  4292                           ;psect for function _Puerta
  4293  1731                     _Puerta:	
  4294                           
  4295                           ;main.c: 189: if(op == 1){
  4296                           
  4297                           ;incstack = 0
  4298                           ; Regs used in _Puerta: [wreg+status,2+status,0]
  4299  1731  0370               	decf	Puerta@op,w
  4300  1732  0471               	iorwf	Puerta@op+1,w
  4301  1733  1D03               	btfss	3,2
  4302  1734  2F3C               	goto	l215
  4303                           
  4304                           ;main.c: 190: PORTDbits.RD2 = 0;
  4305  1735  1283               	bcf	3,5	;RP0=0, select bank0
  4306  1736  1303               	bcf	3,6	;RP1=0, select bank0
  4307  1737  1108               	bcf	8,2	;volatile
  4308                           
  4309                           ;main.c: 191: PORTDbits.RD3 = 1;
  4310  1738  1588               	bsf	8,3	;volatile
  4311                           
  4312                           ;main.c: 192: PORTDbits.RD4 = 1;
  4313  1739  1608               	bsf	8,4	;volatile
  4314                           
  4315                           ;main.c: 193: PORTDbits.RD5 = 0;
  4316  173A  1288               	bcf	8,5	;volatile
  4317                           
  4318                           ;main.c: 194: }else{
  4319  173B  0008               	return
  4320  173C                     l215:	
  4321                           
  4322                           ;main.c: 195: PORTDbits.RD2 = 1;
  4323  173C  1283               	bcf	3,5	;RP0=0, select bank0
  4324  173D  1303               	bcf	3,6	;RP1=0, select bank0
  4325  173E  1508               	bsf	8,2	;volatile
  4326                           
  4327                           ;main.c: 196: PORTDbits.RD3 = 0;
  4328  173F  1188               	bcf	8,3	;volatile
  4329                           
  4330                           ;main.c: 197: PORTDbits.RD4 = 0;
  4331  1740  1208               	bcf	8,4	;volatile
  4332                           
  4333                           ;main.c: 198: PORTDbits.RD5 = 1;
  4334  1741  1688               	bsf	8,5	;volatile
  4335  1742  0008               	return
  4336  1743                     __end_of_Puerta:	
  4337                           
  4338                           	psect	text18
  4339  0A85                     __ptext18:	
  4340 ;; *************** function _PWM_Initialize *****************
  4341 ;; Defined at:
  4342 ;;		line 261 in file "main.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;		None
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;		None
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  1    wreg      void 
  4349 ;; Registers used:
  4350 ;;		wreg, status,2, status,0, pclath, cstack
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4356 ;;      Params:         0       0       0       0       0
  4357 ;;      Locals:         0       0       0       0       0
  4358 ;;      Temps:          4       0       0       0       0
  4359 ;;      Totals:         4       0       0       0       0
  4360 ;;Total ram usage:        4 bytes
  4361 ;; Hardware stack levels used:    1
  4362 ;; Hardware stack levels required when called:    1
  4363 ;; This function calls:
  4364 ;;		___aldiv
  4365 ;; This function is called by:
  4366 ;;		_main
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           
  4371                           ;psect for function _PWM_Initialize
  4372  0A85                     _PWM_Initialize:	
  4373                           
  4374                           ;main.c: 262: TRISC = 0X00;
  4375                           
  4376                           ;incstack = 0
  4377                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4378  0A85  1683               	bsf	3,5	;RP0=1, select bank1
  4379  0A86  1303               	bcf	3,6	;RP1=0, select bank1
  4380  0A87  0187               	clrf	7	;volatile
  4381                           
  4382                           ;main.c: 263: CCP1CON = 0X0F;
  4383  0A88  300F               	movlw	15
  4384  0A89  1283               	bcf	3,5	;RP0=0, select bank0
  4385  0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  4386  0A8B  0097               	movwf	23	;volatile
  4387                           
  4388                           ;main.c: 264: PR2 = 0xF9;
  4389  0A8C  30F9               	movlw	249
  4390  0A8D  1683               	bsf	3,5	;RP0=1, select bank1
  4391  0A8E  1303               	bcf	3,6	;RP1=0, select bank1
  4392  0A8F  0092               	movwf	18	;volatile
  4393                           
  4394                           ;main.c: 265: CCPR1L = 50;
  4395  0A90  3032               	movlw	50
  4396  0A91  1283               	bcf	3,5	;RP0=0, select bank0
  4397  0A92  1303               	bcf	3,6	;RP1=0, select bank0
  4398  0A93  0095               	movwf	21	;volatile
  4399                           
  4400                           ;main.c: 266: TMR2ON = 1;
  4401  0A94  1512               	bsf	18,2	;volatile
  4402                           
  4403                           ;main.c: 268: PR2 = (20000000/(PWM_freq*4*4)) - 1;
  4404  0A95  1683               	bsf	3,5	;RP0=1, select bank1
  4405  0A96  1303               	bcf	3,6	;RP1=0, select bank1
  4406  0A97  0839               	movf	_PWM_freq^(0+128),w
  4407  0A98  00F9               	movwf	??_PWM_Initialize
  4408  0A99  083A               	movf	(_PWM_freq+1)^(0+128),w
  4409  0A9A  00FA               	movwf	??_PWM_Initialize+1
  4410  0A9B  083B               	movf	(_PWM_freq+2)^(0+128),w
  4411  0A9C  00FB               	movwf	??_PWM_Initialize+2
  4412  0A9D  083C               	movf	(_PWM_freq+3)^(0+128),w
  4413  0A9E  00FC               	movwf	??_PWM_Initialize+3
  4414  0A9F  3002               	movlw	2
  4415  0AA0                     u2785:	
  4416  0AA0  1003               	clrc
  4417  0AA1  0DF9               	rlf	??_PWM_Initialize,f
  4418  0AA2  0DFA               	rlf	??_PWM_Initialize+1,f
  4419  0AA3  0DFB               	rlf	??_PWM_Initialize+2,f
  4420  0AA4  0DFC               	rlf	??_PWM_Initialize+3,f
  4421  0AA5  3EFF               	addlw	-1
  4422  0AA6  1D03               	skipz
  4423  0AA7  2AA0               	goto	u2785
  4424  0AA8  3002               	movlw	2
  4425  0AA9                     u2795:	
  4426  0AA9  1003               	clrc
  4427  0AAA  0DF9               	rlf	??_PWM_Initialize,f
  4428  0AAB  0DFA               	rlf	??_PWM_Initialize+1,f
  4429  0AAC  0DFB               	rlf	??_PWM_Initialize+2,f
  4430  0AAD  0DFC               	rlf	??_PWM_Initialize+3,f
  4431  0AAE  3EFF               	addlw	-1
  4432  0AAF  1D03               	skipz
  4433  0AB0  2AA9               	goto	u2795
  4434  0AB1  087C               	movf	??_PWM_Initialize+3,w
  4435  0AB2  00F3               	movwf	___aldiv@divisor+3
  4436  0AB3  087B               	movf	??_PWM_Initialize+2,w
  4437  0AB4  00F2               	movwf	___aldiv@divisor+2
  4438  0AB5  087A               	movf	??_PWM_Initialize+1,w
  4439  0AB6  00F1               	movwf	___aldiv@divisor+1
  4440  0AB7  0879               	movf	??_PWM_Initialize,w
  4441  0AB8  00F0               	movwf	___aldiv@divisor
  4442  0AB9  3001               	movlw	1
  4443  0ABA  00F7               	movwf	___aldiv@dividend+3
  4444  0ABB  3031               	movlw	49
  4445  0ABC  00F6               	movwf	___aldiv@dividend+2
  4446  0ABD  302D               	movlw	45
  4447  0ABE  00F5               	movwf	___aldiv@dividend+1
  4448  0ABF  3000               	movlw	0
  4449  0AC0  00F4               	movwf	___aldiv@dividend
  4450  0AC1  120A  158A  2629   	fcall	___aldiv
  4451  0AC4  0870               	movf	?___aldiv,w
  4452  0AC5  3EFF               	addlw	255
  4453  0AC6  1683               	bsf	3,5	;RP0=1, select bank1
  4454  0AC7  1303               	bcf	3,6	;RP1=0, select bank1
  4455  0AC8  0092               	movwf	18	;volatile
  4456                           
  4457                           ;main.c: 269: CCP1M3 = 1; CCP1M2 = 1;
  4458  0AC9  1283               	bcf	3,5	;RP0=0, select bank0
  4459  0ACA  1303               	bcf	3,6	;RP1=0, select bank0
  4460  0ACB  1597               	bsf	23,3	;volatile
  4461  0ACC  1517               	bsf	23,2	;volatile
  4462                           
  4463                           ;main.c: 270: T2CKPS0 = 1;T2CKPS1 = 0; TMR2ON = 1;
  4464  0ACD  1412               	bsf	18,0	;volatile
  4465  0ACE  1092               	bcf	18,1	;volatile
  4466  0ACF  1512               	bsf	18,2	;volatile
  4467                           
  4468                           ;main.c: 271: TRISC2 = 0;
  4469  0AD0  1683               	bsf	3,5	;RP0=1, select bank1
  4470  0AD1  1303               	bcf	3,6	;RP1=0, select bank1
  4471  0AD2  1107               	bcf	7,2	;volatile
  4472  0AD3  0008               	return
  4473  0AD4                     __end_of_PWM_Initialize:	
  4474                           
  4475                           	psect	text19
  4476  0E29                     __ptext19:	
  4477 ;; *************** function ___aldiv *****************
  4478 ;; Defined at:
  4479 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;  divisor         4    0[COMMON] long 
  4482 ;;  dividend        4    4[COMMON] long 
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;  quotient        4    2[BANK0 ] long 
  4485 ;;  sign            1    1[BANK0 ] unsigned char 
  4486 ;;  counter         1    0[BANK0 ] unsigned char 
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  4    0[COMMON] long 
  4489 ;; Registers used:
  4490 ;;		wreg, status,2, status,0
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4496 ;;      Params:         8       0       0       0       0
  4497 ;;      Locals:         0       6       0       0       0
  4498 ;;      Temps:          1       0       0       0       0
  4499 ;;      Totals:         9       6       0       0       0
  4500 ;;Total ram usage:       15 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_PWM_Initialize
  4506 ;;		_PWM_Duty
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           
  4511                           ;psect for function ___aldiv
  4512  0E29                     ___aldiv:	
  4513                           
  4514                           ;incstack = 0
  4515                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4516  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  4517  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  4518  0E2B  01A1               	clrf	___aldiv@sign
  4519  0E2C  1FF3               	btfss	___aldiv@divisor+3,7
  4520  0E2D  2E3B               	goto	l443
  4521  0E2E  09F0               	comf	___aldiv@divisor,f
  4522  0E2F  09F1               	comf	___aldiv@divisor+1,f
  4523  0E30  09F2               	comf	___aldiv@divisor+2,f
  4524  0E31  09F3               	comf	___aldiv@divisor+3,f
  4525  0E32  0AF0               	incf	___aldiv@divisor,f
  4526  0E33  1903               	skipnz
  4527  0E34  0AF1               	incf	___aldiv@divisor+1,f
  4528  0E35  1903               	skipnz
  4529  0E36  0AF2               	incf	___aldiv@divisor+2,f
  4530  0E37  1903               	skipnz
  4531  0E38  0AF3               	incf	___aldiv@divisor+3,f
  4532  0E39  01A1               	clrf	___aldiv@sign
  4533  0E3A  0AA1               	incf	___aldiv@sign,f
  4534  0E3B                     l443:	
  4535  0E3B  1FF7               	btfss	___aldiv@dividend+3,7
  4536  0E3C  2E4C               	goto	l1748
  4537  0E3D  09F4               	comf	___aldiv@dividend,f
  4538  0E3E  09F5               	comf	___aldiv@dividend+1,f
  4539  0E3F  09F6               	comf	___aldiv@dividend+2,f
  4540  0E40  09F7               	comf	___aldiv@dividend+3,f
  4541  0E41  0AF4               	incf	___aldiv@dividend,f
  4542  0E42  1903               	skipnz
  4543  0E43  0AF5               	incf	___aldiv@dividend+1,f
  4544  0E44  1903               	skipnz
  4545  0E45  0AF6               	incf	___aldiv@dividend+2,f
  4546  0E46  1903               	skipnz
  4547  0E47  0AF7               	incf	___aldiv@dividend+3,f
  4548  0E48  3001               	movlw	1
  4549  0E49  00F8               	movwf	??___aldiv
  4550  0E4A  0878               	movf	??___aldiv,w
  4551  0E4B  06A1               	xorwf	___aldiv@sign,f
  4552  0E4C                     l1748:	
  4553  0E4C  3000               	movlw	0
  4554  0E4D  00A5               	movwf	___aldiv@quotient+3
  4555  0E4E  3000               	movlw	0
  4556  0E4F  00A4               	movwf	___aldiv@quotient+2
  4557  0E50  3000               	movlw	0
  4558  0E51  00A3               	movwf	___aldiv@quotient+1
  4559  0E52  3000               	movlw	0
  4560  0E53  00A2               	movwf	___aldiv@quotient
  4561  0E54  0873               	movf	___aldiv@divisor+3,w
  4562  0E55  0472               	iorwf	___aldiv@divisor+2,w
  4563  0E56  0471               	iorwf	___aldiv@divisor+1,w
  4564  0E57  0470               	iorwf	___aldiv@divisor,w
  4565  0E58  1903               	skipnz
  4566  0E59  2EA1               	goto	l1770
  4567  0E5A  01A0               	clrf	___aldiv@counter
  4568  0E5B  0AA0               	incf	___aldiv@counter,f
  4569  0E5C                     l1756:	
  4570  0E5C  1BF3               	btfsc	___aldiv@divisor+3,7
  4571  0E5D  2E6C               	goto	l1758
  4572  0E5E  3001               	movlw	1
  4573  0E5F  00F8               	movwf	??___aldiv
  4574  0E60                     u1865:	
  4575  0E60  1003               	clrc
  4576  0E61  0DF0               	rlf	___aldiv@divisor,f
  4577  0E62  0DF1               	rlf	___aldiv@divisor+1,f
  4578  0E63  0DF2               	rlf	___aldiv@divisor+2,f
  4579  0E64  0DF3               	rlf	___aldiv@divisor+3,f
  4580  0E65  0BF8               	decfsz	??___aldiv,f
  4581  0E66  2E60               	goto	u1865
  4582  0E67  3001               	movlw	1
  4583  0E68  00F8               	movwf	??___aldiv
  4584  0E69  0878               	movf	??___aldiv,w
  4585  0E6A  07A0               	addwf	___aldiv@counter,f
  4586  0E6B  2E5C               	goto	l1756
  4587  0E6C                     l1758:	
  4588  0E6C  3001               	movlw	1
  4589  0E6D  00F8               	movwf	??___aldiv
  4590  0E6E                     u1885:	
  4591  0E6E  1003               	clrc
  4592  0E6F  0DA2               	rlf	___aldiv@quotient,f
  4593  0E70  0DA3               	rlf	___aldiv@quotient+1,f
  4594  0E71  0DA4               	rlf	___aldiv@quotient+2,f
  4595  0E72  0DA5               	rlf	___aldiv@quotient+3,f
  4596  0E73  0BF8               	decfsz	??___aldiv,f
  4597  0E74  2E6E               	goto	u1885
  4598  0E75  0873               	movf	___aldiv@divisor+3,w
  4599  0E76  0277               	subwf	___aldiv@dividend+3,w
  4600  0E77  1D03               	skipz
  4601  0E78  2E83               	goto	u1895
  4602  0E79  0872               	movf	___aldiv@divisor+2,w
  4603  0E7A  0276               	subwf	___aldiv@dividend+2,w
  4604  0E7B  1D03               	skipz
  4605  0E7C  2E83               	goto	u1895
  4606  0E7D  0871               	movf	___aldiv@divisor+1,w
  4607  0E7E  0275               	subwf	___aldiv@dividend+1,w
  4608  0E7F  1D03               	skipz
  4609  0E80  2E83               	goto	u1895
  4610  0E81  0870               	movf	___aldiv@divisor,w
  4611  0E82  0274               	subwf	___aldiv@dividend,w
  4612  0E83                     u1895:	
  4613  0E83  1C03               	skipc
  4614  0E84  2E94               	goto	l1766
  4615  0E85  0870               	movf	___aldiv@divisor,w
  4616  0E86  02F4               	subwf	___aldiv@dividend,f
  4617  0E87  0871               	movf	___aldiv@divisor+1,w
  4618  0E88  1C03               	skipc
  4619  0E89  0F71               	incfsz	___aldiv@divisor+1,w
  4620  0E8A  02F5               	subwf	___aldiv@dividend+1,f
  4621  0E8B  0872               	movf	___aldiv@divisor+2,w
  4622  0E8C  1C03               	skipc
  4623  0E8D  0F72               	incfsz	___aldiv@divisor+2,w
  4624  0E8E  02F6               	subwf	___aldiv@dividend+2,f
  4625  0E8F  0873               	movf	___aldiv@divisor+3,w
  4626  0E90  1C03               	skipc
  4627  0E91  0F73               	incfsz	___aldiv@divisor+3,w
  4628  0E92  02F7               	subwf	___aldiv@dividend+3,f
  4629  0E93  1422               	bsf	___aldiv@quotient,0
  4630  0E94                     l1766:	
  4631  0E94  3001               	movlw	1
  4632  0E95                     u1905:	
  4633  0E95  1003               	clrc
  4634  0E96  0CF3               	rrf	___aldiv@divisor+3,f
  4635  0E97  0CF2               	rrf	___aldiv@divisor+2,f
  4636  0E98  0CF1               	rrf	___aldiv@divisor+1,f
  4637  0E99  0CF0               	rrf	___aldiv@divisor,f
  4638  0E9A  3EFF               	addlw	-1
  4639  0E9B  1D03               	skipz
  4640  0E9C  2E95               	goto	u1905
  4641  0E9D  3001               	movlw	1
  4642  0E9E  02A0               	subwf	___aldiv@counter,f
  4643  0E9F  1D03               	btfss	3,2
  4644  0EA0  2E6C               	goto	l1758
  4645  0EA1                     l1770:	
  4646  0EA1  0821               	movf	___aldiv@sign,w
  4647  0EA2  1903               	btfsc	3,2
  4648  0EA3  2EAF               	goto	l1774
  4649  0EA4  09A2               	comf	___aldiv@quotient,f
  4650  0EA5  09A3               	comf	___aldiv@quotient+1,f
  4651  0EA6  09A4               	comf	___aldiv@quotient+2,f
  4652  0EA7  09A5               	comf	___aldiv@quotient+3,f
  4653  0EA8  0AA2               	incf	___aldiv@quotient,f
  4654  0EA9  1903               	skipnz
  4655  0EAA  0AA3               	incf	___aldiv@quotient+1,f
  4656  0EAB  1903               	skipnz
  4657  0EAC  0AA4               	incf	___aldiv@quotient+2,f
  4658  0EAD  1903               	skipnz
  4659  0EAE  0AA5               	incf	___aldiv@quotient+3,f
  4660  0EAF                     l1774:	
  4661  0EAF  0825               	movf	___aldiv@quotient+3,w
  4662  0EB0  00F3               	movwf	?___aldiv+3
  4663  0EB1  0824               	movf	___aldiv@quotient+2,w
  4664  0EB2  00F2               	movwf	?___aldiv+2
  4665  0EB3  0823               	movf	___aldiv@quotient+1,w
  4666  0EB4  00F1               	movwf	?___aldiv+1
  4667  0EB5  0822               	movf	___aldiv@quotient,w
  4668  0EB6  00F0               	movwf	?___aldiv
  4669  0EB7  0008               	return
  4670  0EB8                     __end_of___aldiv:	
  4671                           
  4672                           	psect	text20
  4673  0173                     __ptext20:	
  4674 ;; *************** function _Lcd_Init *****************
  4675 ;; Defined at:
  4676 ;;		line 17 in file "lcd_hd44780.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;		None
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;  data            1    5[COMMON] unsigned char 
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  1    wreg      void 
  4683 ;; Registers used:
  4684 ;;		wreg, status,2, status,0, pclath, cstack
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4690 ;;      Params:         0       0       0       0       0
  4691 ;;      Locals:         1       0       0       0       0
  4692 ;;      Temps:          2       0       0       0       0
  4693 ;;      Totals:         3       0       0       0       0
  4694 ;;Total ram usage:        3 bytes
  4695 ;; Hardware stack levels used:    1
  4696 ;; Hardware stack levels required when called:    1
  4697 ;; This function calls:
  4698 ;;		_Lcd_Command
  4699 ;; This function is called by:
  4700 ;;		_main
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           
  4705                           ;psect for function _Lcd_Init
  4706  0173                     _Lcd_Init:	
  4707                           
  4708                           ;lcd_hd44780.c: 18: unsigned char data;
  4709                           ;lcd_hd44780.c: 19: TRISCbits.TRISC0 = 0; TRISCbits.TRISC6 = 0; TRISCbits.TRISC7 = 0; TR
      +                          ISCbits.TRISC3 = 0; TRISCbits.TRISC4 = 0; TRISCbits.TRISC5 = 0;
  4710                           
  4711                           ;incstack = 0
  4712                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4713  0173  1683               	bsf	3,5	;RP0=1, select bank1
  4714  0174  1303               	bcf	3,6	;RP1=0, select bank1
  4715  0175  1007               	bcf	7,0	;volatile
  4716  0176  1307               	bcf	7,6	;volatile
  4717  0177  1387               	bcf	7,7	;volatile
  4718  0178  1187               	bcf	7,3	;volatile
  4719  0179  1207               	bcf	7,4	;volatile
  4720  017A  1287               	bcf	7,5	;volatile
  4721                           
  4722                           ;lcd_hd44780.c: 20: PORTCbits.RC0 = 0; PORTCbits.RC6 = 0; PORTCbits.RC7 = 0; PORTCbits.R
      +                          C3 = 0; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  4723  017B  1283               	bcf	3,5	;RP0=0, select bank0
  4724  017C  1303               	bcf	3,6	;RP1=0, select bank0
  4725  017D  1007               	bcf	7,0	;volatile
  4726  017E  1307               	bcf	7,6	;volatile
  4727  017F  1387               	bcf	7,7	;volatile
  4728  0180  1187               	bcf	7,3	;volatile
  4729  0181  1207               	bcf	7,4	;volatile
  4730  0182  1287               	bcf	7,5	;volatile
  4731                           
  4732                           ;lcd_hd44780.c: 21: _delay((unsigned long)((5500)*(20000000/4000000.0)));_delay((unsigne
      +                          d long)((5500)*(20000000/4000000.0)));_delay((unsigned long)((5500)*(20000000/4000000.0)
      +                          ));
  4733  0183  3024               	movlw	36
  4734  0184  00F4               	movwf	??_Lcd_Init+1
  4735  0185  30B5               	movlw	181
  4736  0186  00F3               	movwf	??_Lcd_Init
  4737  0187                     u3257:	
  4738  0187  0BF3               	decfsz	??_Lcd_Init,f
  4739  0188  2987               	goto	u3257
  4740  0189  0BF4               	decfsz	??_Lcd_Init+1,f
  4741  018A  2987               	goto	u3257
  4742  018B  298C               	nop2
  4743  018C  3024               	movlw	36
  4744  018D  00F4               	movwf	??_Lcd_Init+1
  4745  018E  30B5               	movlw	181
  4746  018F  00F3               	movwf	??_Lcd_Init
  4747  0190                     u3267:	
  4748  0190  0BF3               	decfsz	??_Lcd_Init,f
  4749  0191  2990               	goto	u3267
  4750  0192  0BF4               	decfsz	??_Lcd_Init+1,f
  4751  0193  2990               	goto	u3267
  4752  0194  2995               	nop2
  4753  0195  3024               	movlw	36
  4754  0196  00F4               	movwf	??_Lcd_Init+1
  4755  0197  30B5               	movlw	181
  4756  0198  00F3               	movwf	??_Lcd_Init
  4757  0199                     u3277:	
  4758  0199  0BF3               	decfsz	??_Lcd_Init,f
  4759  019A  2999               	goto	u3277
  4760  019B  0BF4               	decfsz	??_Lcd_Init+1,f
  4761  019C  2999               	goto	u3277
  4762  019D  299E               	nop2
  4763                           
  4764                           ;lcd_hd44780.c: 22: _delay((unsigned long)((5500)*(20000000/4000000.0)));_delay((unsigne
      +                          d long)((5500)*(20000000/4000000.0)));_delay((unsigned long)((5500)*(20000000/4000000.0)
      +                          ));
  4765  019E  3024               	movlw	36
  4766  019F  00F4               	movwf	??_Lcd_Init+1
  4767  01A0  30B5               	movlw	181
  4768  01A1  00F3               	movwf	??_Lcd_Init
  4769  01A2                     u3287:	
  4770  01A2  0BF3               	decfsz	??_Lcd_Init,f
  4771  01A3  29A2               	goto	u3287
  4772  01A4  0BF4               	decfsz	??_Lcd_Init+1,f
  4773  01A5  29A2               	goto	u3287
  4774  01A6  29A7               	nop2
  4775  01A7  3024               	movlw	36
  4776  01A8  00F4               	movwf	??_Lcd_Init+1
  4777  01A9  30B5               	movlw	181
  4778  01AA  00F3               	movwf	??_Lcd_Init
  4779  01AB                     u3297:	
  4780  01AB  0BF3               	decfsz	??_Lcd_Init,f
  4781  01AC  29AB               	goto	u3297
  4782  01AD  0BF4               	decfsz	??_Lcd_Init+1,f
  4783  01AE  29AB               	goto	u3297
  4784  01AF  29B0               	nop2
  4785  01B0  3024               	movlw	36
  4786  01B1  00F4               	movwf	??_Lcd_Init+1
  4787  01B2  30B5               	movlw	181
  4788  01B3  00F3               	movwf	??_Lcd_Init
  4789  01B4                     u3307:	
  4790  01B4  0BF3               	decfsz	??_Lcd_Init,f
  4791  01B5  29B4               	goto	u3307
  4792  01B6  0BF4               	decfsz	??_Lcd_Init+1,f
  4793  01B7  29B4               	goto	u3307
  4794  01B8  29B9               	nop2
  4795                           
  4796                           ;lcd_hd44780.c: 24: for(data = 1; data < 4; data ++)
  4797  01B9  01F5               	clrf	Lcd_Init@data
  4798  01BA  0AF5               	incf	Lcd_Init@data,f
  4799  01BB  3004               	movlw	4
  4800  01BC  0275               	subwf	Lcd_Init@data,w
  4801  01BD  1803               	btfsc	3,0
  4802  01BE  29EA               	goto	l14
  4803  01BF                     l13:	
  4804                           
  4805                           ;lcd_hd44780.c: 25: {
  4806                           ;lcd_hd44780.c: 26: PORTCbits.RC0 = 0; PORTCbits.RC6 = 0; PORTCbits.RC7 = 1; PORTCbits.R
      +                          C3 = 1; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  4807  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  4808  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  4809  01C1  1007               	bcf	7,0	;volatile
  4810  01C2  1307               	bcf	7,6	;volatile
  4811  01C3  1787               	bsf	7,7	;volatile
  4812  01C4  1587               	bsf	7,3	;volatile
  4813  01C5  1207               	bcf	7,4	;volatile
  4814  01C6  1287               	bcf	7,5	;volatile
  4815                           
  4816                           ;lcd_hd44780.c: 27: PORTCbits.RC0 = 0; PORTCbits.RC6 = 0; PORTCbits.RC7 = 1; PORTCbits.R
      +                          C3 = 1; PORTCbits.RC4 = 1; PORTCbits.RC5 = 0;
  4817  01C7  1007               	bcf	7,0	;volatile
  4818  01C8  1307               	bcf	7,6	;volatile
  4819  01C9  1787               	bsf	7,7	;volatile
  4820  01CA  1587               	bsf	7,3	;volatile
  4821  01CB  1607               	bsf	7,4	;volatile
  4822  01CC  1287               	bcf	7,5	;volatile
  4823                           
  4824                           ;lcd_hd44780.c: 28: _delay((unsigned long)((5)*(20000000/4000000.0)));
  4825  01CD  3008               	movlw	8
  4826  01CE  00F3               	movwf	??_Lcd_Init
  4827  01CF                     u3317:	
  4828  01CF  0BF3               	decfsz	??_Lcd_Init,f
  4829  01D0  29CF               	goto	u3317
  4830                           
  4831                           ;lcd_hd44780.c: 29: PORTCbits.RC0 = 0; PORTCbits.RC6 = 0; PORTCbits.RC7 = 1; PORTCbits.R
      +                          C3 = 1; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  4832  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  4833  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  4834  01D3  1007               	bcf	7,0	;volatile
  4835  01D4  1307               	bcf	7,6	;volatile
  4836  01D5  1787               	bsf	7,7	;volatile
  4837  01D6  1587               	bsf	7,3	;volatile
  4838  01D7  1207               	bcf	7,4	;volatile
  4839  01D8  1287               	bcf	7,5	;volatile
  4840                           
  4841                           ;lcd_hd44780.c: 30: _delay((unsigned long)((5500)*(20000000/4000000.0)));
  4842  01D9  3024               	movlw	36
  4843  01DA  00F4               	movwf	??_Lcd_Init+1
  4844  01DB  30B5               	movlw	181
  4845  01DC  00F3               	movwf	??_Lcd_Init
  4846  01DD                     u3327:	
  4847  01DD  0BF3               	decfsz	??_Lcd_Init,f
  4848  01DE  29DD               	goto	u3327
  4849  01DF  0BF4               	decfsz	??_Lcd_Init+1,f
  4850  01E0  29DD               	goto	u3327
  4851  01E1  29E2               	nop2
  4852  01E2  3001               	movlw	1
  4853  01E3  00F3               	movwf	??_Lcd_Init
  4854  01E4  0873               	movf	??_Lcd_Init,w
  4855  01E5  07F5               	addwf	Lcd_Init@data,f
  4856  01E6  3004               	movlw	4
  4857  01E7  0275               	subwf	Lcd_Init@data,w
  4858  01E8  1C03               	skipc
  4859  01E9  29BF               	goto	l13
  4860  01EA                     l14:	
  4861                           
  4862                           ;lcd_hd44780.c: 31: }
  4863                           ;lcd_hd44780.c: 32: PORTCbits.RC0 = 0; PORTCbits.RC6 = 0; PORTCbits.RC7 = 1; PORTCbits.R
      +                          C3 = 0; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  4864  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  4865  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  4866  01EC  1007               	bcf	7,0	;volatile
  4867  01ED  1307               	bcf	7,6	;volatile
  4868  01EE  1787               	bsf	7,7	;volatile
  4869  01EF  1187               	bcf	7,3	;volatile
  4870  01F0  1207               	bcf	7,4	;volatile
  4871  01F1  1287               	bcf	7,5	;volatile
  4872                           
  4873                           ;lcd_hd44780.c: 33: PORTCbits.RC0 = 0; PORTCbits.RC6 = 0; PORTCbits.RC7 = 1; PORTCbits.R
      +                          C3 = 0; PORTCbits.RC4 = 1; PORTCbits.RC5 = 0;
  4874  01F2  1007               	bcf	7,0	;volatile
  4875  01F3  1307               	bcf	7,6	;volatile
  4876  01F4  1787               	bsf	7,7	;volatile
  4877  01F5  1187               	bcf	7,3	;volatile
  4878  01F6  1607               	bsf	7,4	;volatile
  4879  01F7  1287               	bcf	7,5	;volatile
  4880                           
  4881                           ;lcd_hd44780.c: 34: _delay((unsigned long)((5)*(20000000/4000000.0)));
  4882  01F8  3008               	movlw	8
  4883  01F9  00F3               	movwf	??_Lcd_Init
  4884  01FA                     u3337:	
  4885  01FA  0BF3               	decfsz	??_Lcd_Init,f
  4886  01FB  29FA               	goto	u3337
  4887                           
  4888                           ;lcd_hd44780.c: 35: PORTCbits.RC0 = 0; PORTCbits.RC6 = 0; PORTCbits.RC7 = 1; PORTCbits.R
      +                          C3 = 0; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  4889  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  4890  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  4891  01FE  1007               	bcf	7,0	;volatile
  4892  01FF  1307               	bcf	7,6	;volatile
  4893  0200  1787               	bsf	7,7	;volatile
  4894  0201  1187               	bcf	7,3	;volatile
  4895  0202  1207               	bcf	7,4	;volatile
  4896  0203  1287               	bcf	7,5	;volatile
  4897                           
  4898                           ;lcd_hd44780.c: 36: _delay((unsigned long)((5500)*(20000000/4000000.0)));
  4899  0204  3024               	movlw	36
  4900  0205  00F4               	movwf	??_Lcd_Init+1
  4901  0206  30B5               	movlw	181
  4902  0207  00F3               	movwf	??_Lcd_Init
  4903  0208                     u3347:	
  4904  0208  0BF3               	decfsz	??_Lcd_Init,f
  4905  0209  2A08               	goto	u3347
  4906  020A  0BF4               	decfsz	??_Lcd_Init+1,f
  4907  020B  2A08               	goto	u3347
  4908  020C  2A0D               	nop2
  4909                           
  4910                           ;lcd_hd44780.c: 37: data = 40; Lcd_Command(data);
  4911  020D  3028               	movlw	40
  4912  020E  00F3               	movwf	??_Lcd_Init
  4913  020F  0873               	movf	??_Lcd_Init,w
  4914  0210  00F5               	movwf	Lcd_Init@data
  4915  0211  0875               	movf	Lcd_Init@data,w
  4916  0212  120A  158A  26B8  120A  118A  	fcall	_Lcd_Command
  4917                           
  4918                           ;lcd_hd44780.c: 38: data = 16; Lcd_Command(data);
  4919  0217  3010               	movlw	16
  4920  0218  00F3               	movwf	??_Lcd_Init
  4921  0219  0873               	movf	??_Lcd_Init,w
  4922  021A  00F5               	movwf	Lcd_Init@data
  4923  021B  0875               	movf	Lcd_Init@data,w
  4924  021C  120A  158A  26B8  120A  118A  	fcall	_Lcd_Command
  4925                           
  4926                           ;lcd_hd44780.c: 39: data = 1; Lcd_Command(data);
  4927  0221  01F5               	clrf	Lcd_Init@data
  4928  0222  0AF5               	incf	Lcd_Init@data,f
  4929  0223  0875               	movf	Lcd_Init@data,w
  4930  0224  120A  158A  26B8  120A  118A  	fcall	_Lcd_Command
  4931                           
  4932                           ;lcd_hd44780.c: 40: data = 15; Lcd_Command(data);
  4933  0229  300F               	movlw	15
  4934  022A  00F3               	movwf	??_Lcd_Init
  4935  022B  0873               	movf	??_Lcd_Init,w
  4936  022C  00F5               	movwf	Lcd_Init@data
  4937  022D  0875               	movf	Lcd_Init@data,w
  4938  022E  120A  158A  26B8   	fcall	_Lcd_Command
  4939  0231  0008               	return
  4940  0232                     __end_of_Lcd_Init:	
  4941                           
  4942                           	psect	text21
  4943  03ED                     __ptext21:	
  4944 ;; *************** function _ImprimirMenuPrincipal *****************
  4945 ;; Defined at:
  4946 ;;		line 323 in file "main.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;  casilla         2    9[COMMON] int 
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;		None
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  1    wreg      void 
  4953 ;; Registers used:
  4954 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4960 ;;      Params:         2       0       0       0       0
  4961 ;;      Locals:         0       0       0       0       0
  4962 ;;      Temps:          0       0       0       0       0
  4963 ;;      Totals:         2       0       0       0       0
  4964 ;;Total ram usage:        2 bytes
  4965 ;; Hardware stack levels used:    1
  4966 ;; Hardware stack levels required when called:    2
  4967 ;; This function calls:
  4968 ;;		_Lcd_Command
  4969 ;;		_Lcd_Text
  4970 ;; This function is called by:
  4971 ;;		_main
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           
  4976                           ;psect for function _ImprimirMenuPrincipal
  4977  03ED                     _ImprimirMenuPrincipal:	
  4978                           
  4979                           ;main.c: 324: Lcd_Command(1);
  4980                           
  4981                           ;incstack = 0
  4982                           ; Regs used in _ImprimirMenuPrincipal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  4983  03ED  3001               	movlw	1
  4984  03EE  120A  158A  26B8  120A  118A  	fcall	_Lcd_Command
  4985                           
  4986                           ;main.c: 326: if(casilla == 0){
  4987  03F3  0879               	movf	ImprimirMenuPrincipal@casilla,w
  4988  03F4  047A               	iorwf	ImprimirMenuPrincipal@casilla+1,w
  4989  03F5  1D03               	btfss	3,2
  4990  03F6  2C2C               	goto	l2288
  4991                           
  4992                           ;main.c: 327: Lcd_Text(1, 1, "-Lavado Normal");
  4993  03F7  01F3               	clrf	Lcd_Text@x
  4994  03F8  0AF3               	incf	Lcd_Text@x,f
  4995  03F9  30E4               	movlw	low (STR_19| (0+32768))
  4996  03FA  00F4               	movwf	Lcd_Text@buffer
  4997  03FB  3088               	movlw	high (STR_19| (0+32768))
  4998  03FC  00F5               	movwf	Lcd_Text@buffer+1
  4999  03FD  3001               	movlw	1
  5000  03FE  120A  158A  223D  120A  118A  	fcall	_Lcd_Text
  5001                           
  5002                           ;main.c: 328: Lcd_Text(2, 1, "Lavado Rapido");
  5003  0403  01F3               	clrf	Lcd_Text@x
  5004  0404  0AF3               	incf	Lcd_Text@x,f
  5005  0405  30F4               	movlw	low ((STR_24+1)| (0+32768))
  5006  0406  00F4               	movwf	Lcd_Text@buffer
  5007  0407  3088               	movlw	high ((STR_24+1)| (0+32768))
  5008  0408  00F5               	movwf	Lcd_Text@buffer+1
  5009  0409  3002               	movlw	2
  5010  040A  120A  158A  223D  120A  118A  	fcall	_Lcd_Text
  5011                           
  5012                           ;main.c: 329: Lcd_Text(3, 1, "Lavado Lento");
  5013  040F  01F3               	clrf	Lcd_Text@x
  5014  0410  0AF3               	incf	Lcd_Text@x,f
  5015  0411  3003               	movlw	low ((STR_29+1)| (0+32768))
  5016  0412  00F4               	movwf	Lcd_Text@buffer
  5017  0413  3089               	movlw	high ((STR_29+1)| (0+32768))
  5018  0414  00F5               	movwf	Lcd_Text@buffer+1
  5019  0415  3003               	movlw	3
  5020  0416  120A  158A  223D  120A  118A  	fcall	_Lcd_Text
  5021                           
  5022                           ;main.c: 330: Lcd_Text(4, 1, "Lavado Delicado");
  5023  041B  01F3               	clrf	Lcd_Text@x
  5024  041C  0AF3               	incf	Lcd_Text@x,f
  5025  041D  30C5               	movlw	low ((STR_34+1)| (0+32768))
  5026  041E  00F4               	movwf	Lcd_Text@buffer
  5027  041F  3088               	movlw	high ((STR_34+1)| (0+32768))
  5028  0420  00F5               	movwf	Lcd_Text@buffer+1
  5029  0421  3004               	movlw	4
  5030  0422  120A  158A  223D   	fcall	_Lcd_Text
  5031                           
  5032                           ;main.c: 331: tiempo = 50;
  5033  0425  3032               	movlw	50
  5034  0426  1683               	bsf	3,5	;RP0=1, select bank1
  5035  0427  1303               	bcf	3,6	;RP1=0, select bank1
  5036  0428  00A2               	movwf	_tiempo^(0+128)
  5037  0429  3000               	movlw	0
  5038  042A  00A3               	movwf	(_tiempo^(0+128)+1)
  5039                           
  5040                           ;main.c: 332: }else if(casilla == 1){
  5041  042B  0008               	return
  5042  042C                     l2288:	
  5043  042C  0379               	decf	ImprimirMenuPrincipal@casilla,w
  5044  042D  047A               	iorwf	ImprimirMenuPrincipal@casilla+1,w
  5045  042E  1D03               	btfss	3,2
  5046  042F  2C65               	goto	l2294
  5047                           
  5048                           ;main.c: 333: Lcd_Text(1, 1, "Lavado Normal");
  5049  0430  01F3               	clrf	Lcd_Text@x
  5050  0431  0AF3               	incf	Lcd_Text@x,f
  5051  0432  30E5               	movlw	low ((STR_19+1)| (0+32768))
  5052  0433  00F4               	movwf	Lcd_Text@buffer
  5053  0434  3088               	movlw	high ((STR_19+1)| (0+32768))
  5054  0435  00F5               	movwf	Lcd_Text@buffer+1
  5055  0436  3001               	movlw	1
  5056  0437  120A  158A  223D  120A  118A  	fcall	_Lcd_Text
  5057                           
  5058                           ;main.c: 334: Lcd_Text(2, 1, "-Lavado Rapido");
  5059  043C  01F3               	clrf	Lcd_Text@x
  5060  043D  0AF3               	incf	Lcd_Text@x,f
  5061  043E  30F3               	movlw	low (STR_24| (0+32768))
  5062  043F  00F4               	movwf	Lcd_Text@buffer
  5063  0440  3088               	movlw	high (STR_24| (0+32768))
  5064  0441  00F5               	movwf	Lcd_Text@buffer+1
  5065  0442  3002               	movlw	2
  5066  0443  120A  158A  223D  120A  118A  	fcall	_Lcd_Text
  5067                           
  5068                           ;main.c: 335: Lcd_Text(3, 1, "Lavado Lento");
  5069  0448  01F3               	clrf	Lcd_Text@x
  5070  0449  0AF3               	incf	Lcd_Text@x,f
  5071  044A  3003               	movlw	low ((STR_29+1)| (0+32768))
  5072  044B  00F4               	movwf	Lcd_Text@buffer
  5073  044C  3089               	movlw	high ((STR_29+1)| (0+32768))
  5074  044D  00F5               	movwf	Lcd_Text@buffer+1
  5075  044E  3003               	movlw	3
  5076  044F  120A  158A  223D  120A  118A  	fcall	_Lcd_Text
  5077                           
  5078                           ;main.c: 336: Lcd_Text(4, 1, "Lavado Delicado");
  5079  0454  01F3               	clrf	Lcd_Text@x
  5080  0455  0AF3               	incf	Lcd_Text@x,f
  5081  0456  30C5               	movlw	low ((STR_34+1)| (0+32768))
  5082  0457  00F4               	movwf	Lcd_Text@buffer
  5083  0458  3088               	movlw	high ((STR_34+1)| (0+32768))
  5084  0459  00F5               	movwf	Lcd_Text@buffer+1
  5085  045A  3004               	movlw	4
  5086  045B  120A  158A  223D   	fcall	_Lcd_Text
  5087                           
  5088                           ;main.c: 337: tiempo = 59;
  5089  045E  303B               	movlw	59
  5090  045F  1683               	bsf	3,5	;RP0=1, select bank1
  5091  0460  1303               	bcf	3,6	;RP1=0, select bank1
  5092  0461  00A2               	movwf	_tiempo^(0+128)
  5093  0462  3000               	movlw	0
  5094  0463  00A3               	movwf	(_tiempo^(0+128)+1)
  5095                           
  5096                           ;main.c: 338: }else if(casilla == 2){
  5097  0464  0008               	return
  5098  0465                     l2294:	
  5099  0465  3002               	movlw	2
  5100  0466  0679               	xorwf	ImprimirMenuPrincipal@casilla,w
  5101  0467  047A               	iorwf	ImprimirMenuPrincipal@casilla+1,w
  5102  0468  1D03               	btfss	3,2
  5103  0469  2C9F               	goto	l2300
  5104                           
  5105                           ;main.c: 339: Lcd_Text(1, 1, "Lavado Normal");
  5106  046A  01F3               	clrf	Lcd_Text@x
  5107  046B  0AF3               	incf	Lcd_Text@x,f
  5108  046C  30E5               	movlw	low ((STR_19+1)| (0+32768))
  5109  046D  00F4               	movwf	Lcd_Text@buffer
  5110  046E  3088               	movlw	high ((STR_19+1)| (0+32768))
  5111  046F  00F5               	movwf	Lcd_Text@buffer+1
  5112  0470  3001               	movlw	1
  5113  0471  120A  158A  223D  120A  118A  	fcall	_Lcd_Text
  5114                           
  5115                           ;main.c: 340: Lcd_Text(2, 1, "Lavado Rapido");
  5116  0476  01F3               	clrf	Lcd_Text@x
  5117  0477  0AF3               	incf	Lcd_Text@x,f
  5118  0478  30F4               	movlw	low ((STR_24+1)| (0+32768))
  5119  0479  00F4               	movwf	Lcd_Text@buffer
  5120  047A  3088               	movlw	high ((STR_24+1)| (0+32768))
  5121  047B  00F5               	movwf	Lcd_Text@buffer+1
  5122  047C  3002               	movlw	2
  5123  047D  120A  158A  223D  120A  118A  	fcall	_Lcd_Text
  5124                           
  5125                           ;main.c: 341: Lcd_Text(3, 1, "-Lavado Lento");
  5126  0482  01F3               	clrf	Lcd_Text@x
  5127  0483  0AF3               	incf	Lcd_Text@x,f
  5128  0484  3002               	movlw	low (STR_29| (0+32768))
  5129  0485  00F4               	movwf	Lcd_Text@buffer
  5130  0486  3089               	movlw	high (STR_29| (0+32768))
  5131  0487  00F5               	movwf	Lcd_Text@buffer+1
  5132  0488  3003               	movlw	3
  5133  0489  120A  158A  223D  120A  118A  	fcall	_Lcd_Text
  5134                           
  5135                           ;main.c: 342: Lcd_Text(4, 1, "Lavado Delicado");
  5136  048E  01F3               	clrf	Lcd_Text@x
  5137  048F  0AF3               	incf	Lcd_Text@x,f
  5138  0490  30C5               	movlw	low ((STR_34+1)| (0+32768))
  5139  0491  00F4               	movwf	Lcd_Text@buffer
  5140  0492  3088               	movlw	high ((STR_34+1)| (0+32768))
  5141  0493  00F5               	movwf	Lcd_Text@buffer+1
  5142  0494  3004               	movlw	4
  5143  0495  120A  158A  223D   	fcall	_Lcd_Text
  5144                           
  5145                           ;main.c: 343: tiempo = 89;
  5146  0498  3059               	movlw	89
  5147  0499  1683               	bsf	3,5	;RP0=1, select bank1
  5148  049A  1303               	bcf	3,6	;RP1=0, select bank1
  5149  049B  00A2               	movwf	_tiempo^(0+128)
  5150  049C  3000               	movlw	0
  5151  049D  00A3               	movwf	(_tiempo^(0+128)+1)
  5152                           
  5153                           ;main.c: 344: }else if(casilla == 3){
  5154  049E  0008               	return
  5155  049F                     l2300:	
  5156  049F  3003               	movlw	3
  5157  04A0  0679               	xorwf	ImprimirMenuPrincipal@casilla,w
  5158  04A1  047A               	iorwf	ImprimirMenuPrincipal@casilla+1,w
  5159  04A2  1D03               	btfss	3,2
  5160  04A3  2CD9               	goto	l2306
  5161                           
  5162                           ;main.c: 345: Lcd_Text(1, 1, "Lavado Normal");
  5163  04A4  01F3               	clrf	Lcd_Text@x
  5164  04A5  0AF3               	incf	Lcd_Text@x,f
  5165  04A6  30E5               	movlw	low ((STR_19+1)| (0+32768))
  5166  04A7  00F4               	movwf	Lcd_Text@buffer
  5167  04A8  3088               	movlw	high ((STR_19+1)| (0+32768))
  5168  04A9  00F5               	movwf	Lcd_Text@buffer+1
  5169  04AA  3001               	movlw	1
  5170  04AB  120A  158A  223D  120A  118A  	fcall	_Lcd_Text
  5171                           
  5172                           ;main.c: 346: Lcd_Text(2, 1, "Lavado Rapido");
  5173  04B0  01F3               	clrf	Lcd_Text@x
  5174  04B1  0AF3               	incf	Lcd_Text@x,f
  5175  04B2  30F4               	movlw	low ((STR_24+1)| (0+32768))
  5176  04B3  00F4               	movwf	Lcd_Text@buffer
  5177  04B4  3088               	movlw	high ((STR_24+1)| (0+32768))
  5178  04B5  00F5               	movwf	Lcd_Text@buffer+1
  5179  04B6  3002               	movlw	2
  5180  04B7  120A  158A  223D  120A  118A  	fcall	_Lcd_Text
  5181                           
  5182                           ;main.c: 347: Lcd_Text(3, 1, "Lavado Lento");
  5183  04BC  01F3               	clrf	Lcd_Text@x
  5184  04BD  0AF3               	incf	Lcd_Text@x,f
  5185  04BE  3003               	movlw	low ((STR_29+1)| (0+32768))
  5186  04BF  00F4               	movwf	Lcd_Text@buffer
  5187  04C0  3089               	movlw	high ((STR_29+1)| (0+32768))
  5188  04C1  00F5               	movwf	Lcd_Text@buffer+1
  5189  04C2  3003               	movlw	3
  5190  04C3  120A  158A  223D  120A  118A  	fcall	_Lcd_Text
  5191                           
  5192                           ;main.c: 348: Lcd_Text(4, 1, "-Lavado Delicado");
  5193  04C8  01F3               	clrf	Lcd_Text@x
  5194  04C9  0AF3               	incf	Lcd_Text@x,f
  5195  04CA  30C4               	movlw	low (STR_34| (0+32768))
  5196  04CB  00F4               	movwf	Lcd_Text@buffer
  5197  04CC  3088               	movlw	high (STR_34| (0+32768))
  5198  04CD  00F5               	movwf	Lcd_Text@buffer+1
  5199  04CE  3004               	movlw	4
  5200  04CF  120A  158A  223D   	fcall	_Lcd_Text
  5201                           
  5202                           ;main.c: 349: tiempo = 70;
  5203  04D2  3046               	movlw	70
  5204  04D3  1683               	bsf	3,5	;RP0=1, select bank1
  5205  04D4  1303               	bcf	3,6	;RP1=0, select bank1
  5206  04D5  00A2               	movwf	_tiempo^(0+128)
  5207  04D6  3000               	movlw	0
  5208  04D7  00A3               	movwf	(_tiempo^(0+128)+1)
  5209                           
  5210                           ;main.c: 350: }else if(casilla == 4){
  5211  04D8  0008               	return
  5212  04D9                     l2306:	
  5213  04D9  3004               	movlw	4
  5214  04DA  0679               	xorwf	ImprimirMenuPrincipal@casilla,w
  5215  04DB  047A               	iorwf	ImprimirMenuPrincipal@casilla+1,w
  5216  04DC  1D03               	btfss	3,2
  5217  04DD  0008               	return
  5218                           
  5219                           ;main.c: 351: Lcd_Text(1, 1, "Lavado Rapido");
  5220  04DE  01F3               	clrf	Lcd_Text@x
  5221  04DF  0AF3               	incf	Lcd_Text@x,f
  5222  04E0  30F4               	movlw	low ((STR_24+1)| (0+32768))
  5223  04E1  00F4               	movwf	Lcd_Text@buffer
  5224  04E2  3088               	movlw	high ((STR_24+1)| (0+32768))
  5225  04E3  00F5               	movwf	Lcd_Text@buffer+1
  5226  04E4  3001               	movlw	1
  5227  04E5  120A  158A  223D  120A  118A  	fcall	_Lcd_Text
  5228                           
  5229                           ;main.c: 352: Lcd_Text(2, 1, "Lavado Lento");
  5230  04EA  01F3               	clrf	Lcd_Text@x
  5231  04EB  0AF3               	incf	Lcd_Text@x,f
  5232  04EC  3003               	movlw	low ((STR_29+1)| (0+32768))
  5233  04ED  00F4               	movwf	Lcd_Text@buffer
  5234  04EE  3089               	movlw	high ((STR_29+1)| (0+32768))
  5235  04EF  00F5               	movwf	Lcd_Text@buffer+1
  5236  04F0  3002               	movlw	2
  5237  04F1  120A  158A  223D  120A  118A  	fcall	_Lcd_Text
  5238                           
  5239                           ;main.c: 353: Lcd_Text(3, 1, "Lavado Delicado");
  5240  04F6  01F3               	clrf	Lcd_Text@x
  5241  04F7  0AF3               	incf	Lcd_Text@x,f
  5242  04F8  30C5               	movlw	low ((STR_34+1)| (0+32768))
  5243  04F9  00F4               	movwf	Lcd_Text@buffer
  5244  04FA  3088               	movlw	high ((STR_34+1)| (0+32768))
  5245  04FB  00F5               	movwf	Lcd_Text@buffer+1
  5246  04FC  3003               	movlw	3
  5247  04FD  120A  158A  223D  120A  118A  	fcall	_Lcd_Text
  5248                           
  5249                           ;main.c: 354: Lcd_Text(4, 1, "-Acerca de");
  5250  0502  01F3               	clrf	Lcd_Text@x
  5251  0503  0AF3               	incf	Lcd_Text@x,f
  5252  0504  301B               	movlw	low (STR_38| (0+32768))
  5253  0505  00F4               	movwf	Lcd_Text@buffer
  5254  0506  3089               	movlw	high (STR_38| (0+32768))
  5255  0507  00F5               	movwf	Lcd_Text@buffer+1
  5256  0508  3004               	movlw	4
  5257  0509  120A  158A  223D   	fcall	_Lcd_Text
  5258  050C  0008               	return
  5259  050D                     __end_of_ImprimirMenuPrincipal:	
  5260                           
  5261                           	psect	text22
  5262  0D13                     __ptext22:	
  5263 ;; *************** function _ImprimirMenuLavado *****************
  5264 ;; Defined at:
  5265 ;;		line 307 in file "main.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;  casilla         2   20[BANK0 ] int 
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;		None
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  1    wreg      void 
  5272 ;; Registers used:
  5273 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/0
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5279 ;;      Params:         0       2       0       0       0
  5280 ;;      Locals:         0       0       0       0       0
  5281 ;;      Temps:          0       0       0       0       0
  5282 ;;      Totals:         0       2       0       0       0
  5283 ;;Total ram usage:        2 bytes
  5284 ;; Hardware stack levels used:    1
  5285 ;; Hardware stack levels required when called:    2
  5286 ;; This function calls:
  5287 ;;		_Lcd_Command
  5288 ;;		_Lcd_Text
  5289 ;;		_sprintf
  5290 ;; This function is called by:
  5291 ;;		_main
  5292 ;; This function uses a non-reentrant model
  5293 ;;
  5294                           
  5295                           
  5296                           ;psect for function _ImprimirMenuLavado
  5297  0D13                     _ImprimirMenuLavado:	
  5298                           
  5299                           ;main.c: 308: sprintf(aux,"%d minutos", tiempo);
  5300                           
  5301                           ;incstack = 0
  5302                           ; Regs used in _ImprimirMenuLavado: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5303  0D13  3026               	movlw	low (STR_12| (0+32768))
  5304  0D14  1283               	bcf	3,5	;RP0=0, select bank0
  5305  0D15  1303               	bcf	3,6	;RP1=0, select bank0
  5306  0D16  00A2               	movwf	sprintf@f
  5307  0D17  3089               	movlw	high (STR_12| (0+32768))
  5308  0D18  00A3               	movwf	sprintf@f+1
  5309  0D19  1683               	bsf	3,5	;RP0=1, select bank1
  5310  0D1A  1303               	bcf	3,6	;RP1=0, select bank1
  5311  0D1B  0823               	movf	(_tiempo+1)^(0+128),w
  5312  0D1C  1283               	bcf	3,5	;RP0=0, select bank0
  5313  0D1D  1303               	bcf	3,6	;RP1=0, select bank0
  5314  0D1E  00A5               	movwf	?_sprintf+3
  5315  0D1F  1683               	bsf	3,5	;RP0=1, select bank1
  5316  0D20  1303               	bcf	3,6	;RP1=0, select bank1
  5317  0D21  0822               	movf	_tiempo^(0+128),w
  5318  0D22  1283               	bcf	3,5	;RP0=0, select bank0
  5319  0D23  1303               	bcf	3,6	;RP1=0, select bank0
  5320  0D24  00A4               	movwf	?_sprintf+2
  5321  0D25  30A4               	movlw	(low (_aux| 0))& (0+255)
  5322  0D26  120A  118A  2305  120A  158A  	fcall	_sprintf
  5323                           
  5324                           ;main.c: 309: Lcd_Command(1);
  5325  0D2B  3001               	movlw	1
  5326  0D2C  120A  158A  26B8  120A  158A  	fcall	_Lcd_Command
  5327                           
  5328                           ;main.c: 310: if(casilla == 0){
  5329  0D31  1283               	bcf	3,5	;RP0=0, select bank0
  5330  0D32  1303               	bcf	3,6	;RP1=0, select bank0
  5331  0D33  0834               	movf	ImprimirMenuLavado@casilla,w
  5332  0D34  0435               	iorwf	ImprimirMenuLavado@casilla+1,w
  5333  0D35  1D03               	btfss	3,2
  5334  0D36  2D66               	goto	l2318
  5335                           
  5336                           ;main.c: 311: Lcd_Text(1, 1, "El lavado dura");
  5337  0D37  01F3               	clrf	Lcd_Text@x
  5338  0D38  0AF3               	incf	Lcd_Text@x,f
  5339  0D39  30D5               	movlw	low (STR_13| (0+32768))
  5340  0D3A  00F4               	movwf	Lcd_Text@buffer
  5341  0D3B  3088               	movlw	high (STR_13| (0+32768))
  5342  0D3C  00F5               	movwf	Lcd_Text@buffer+1
  5343  0D3D  3001               	movlw	1
  5344  0D3E  120A  158A  223D  120A  158A  	fcall	_Lcd_Text
  5345                           
  5346                           ;main.c: 312: Lcd_Text(2, 1, aux);
  5347  0D43  01F3               	clrf	Lcd_Text@x
  5348  0D44  0AF3               	incf	Lcd_Text@x,f
  5349  0D45  30A4               	movlw	(low (_aux| 0))& (0+255)
  5350  0D46  00F4               	movwf	Lcd_Text@buffer
  5351  0D47  3000               	movlw	0
  5352  0D48  00F5               	movwf	Lcd_Text@buffer+1
  5353  0D49  3002               	movlw	2
  5354  0D4A  120A  158A  223D  120A  158A  	fcall	_Lcd_Text
  5355                           
  5356                           ;main.c: 313: Lcd_Text(3, 1, "-Iniciar");
  5357  0D4F  01F3               	clrf	Lcd_Text@x
  5358  0D50  0AF3               	incf	Lcd_Text@x,f
  5359  0D51  303A               	movlw	low (STR_14| (0+32768))
  5360  0D52  00F4               	movwf	Lcd_Text@buffer
  5361  0D53  3089               	movlw	high (STR_14| (0+32768))
  5362  0D54  00F5               	movwf	Lcd_Text@buffer+1
  5363  0D55  3003               	movlw	3
  5364  0D56  120A  158A  223D  120A  158A  	fcall	_Lcd_Text
  5365                           
  5366                           ;main.c: 314: Lcd_Text(4, 1, "Salir");
  5367  0D5B  01F3               	clrf	Lcd_Text@x
  5368  0D5C  0AF3               	incf	Lcd_Text@x,f
  5369  0D5D  3044               	movlw	low ((STR_18+1)| (0+32768))
  5370  0D5E  00F4               	movwf	Lcd_Text@buffer
  5371  0D5F  3089               	movlw	high ((STR_18+1)| (0+32768))
  5372  0D60  00F5               	movwf	Lcd_Text@buffer+1
  5373  0D61  3004               	movlw	4
  5374  0D62  120A  158A  223D   	fcall	_Lcd_Text
  5375                           
  5376                           ;main.c: 315: }else if(casilla == 1){
  5377  0D65  0008               	return
  5378  0D66                     l2318:	
  5379  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  5380  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  5381  0D68  0334               	decf	ImprimirMenuLavado@casilla,w
  5382  0D69  0435               	iorwf	ImprimirMenuLavado@casilla+1,w
  5383  0D6A  1D03               	btfss	3,2
  5384  0D6B  0008               	return
  5385                           
  5386                           ;main.c: 316: Lcd_Text(1, 1, "El lavado dura");
  5387  0D6C  01F3               	clrf	Lcd_Text@x
  5388  0D6D  0AF3               	incf	Lcd_Text@x,f
  5389  0D6E  30D5               	movlw	low (STR_13| (0+32768))
  5390  0D6F  00F4               	movwf	Lcd_Text@buffer
  5391  0D70  3088               	movlw	high (STR_13| (0+32768))
  5392  0D71  00F5               	movwf	Lcd_Text@buffer+1
  5393  0D72  3001               	movlw	1
  5394  0D73  120A  158A  223D  120A  158A  	fcall	_Lcd_Text
  5395                           
  5396                           ;main.c: 317: Lcd_Text(2, 1, aux);
  5397  0D78  01F3               	clrf	Lcd_Text@x
  5398  0D79  0AF3               	incf	Lcd_Text@x,f
  5399  0D7A  30A4               	movlw	(low (_aux| 0))& (0+255)
  5400  0D7B  00F4               	movwf	Lcd_Text@buffer
  5401  0D7C  3000               	movlw	0
  5402  0D7D  00F5               	movwf	Lcd_Text@buffer+1
  5403  0D7E  3002               	movlw	2
  5404  0D7F  120A  158A  223D  120A  158A  	fcall	_Lcd_Text
  5405                           
  5406                           ;main.c: 318: Lcd_Text(3, 1, "Iniciar");
  5407  0D84  01F3               	clrf	Lcd_Text@x
  5408  0D85  0AF3               	incf	Lcd_Text@x,f
  5409  0D86  303B               	movlw	low ((STR_14+1)| (0+32768))
  5410  0D87  00F4               	movwf	Lcd_Text@buffer
  5411  0D88  3089               	movlw	high ((STR_14+1)| (0+32768))
  5412  0D89  00F5               	movwf	Lcd_Text@buffer+1
  5413  0D8A  3003               	movlw	3
  5414  0D8B  120A  158A  223D  120A  158A  	fcall	_Lcd_Text
  5415                           
  5416                           ;main.c: 319: Lcd_Text(4, 1, "-Salir");
  5417  0D90  01F3               	clrf	Lcd_Text@x
  5418  0D91  0AF3               	incf	Lcd_Text@x,f
  5419  0D92  3043               	movlw	low (STR_18| (0+32768))
  5420  0D93  00F4               	movwf	Lcd_Text@buffer
  5421  0D94  3089               	movlw	high (STR_18| (0+32768))
  5422  0D95  00F5               	movwf	Lcd_Text@buffer+1
  5423  0D96  3004               	movlw	4
  5424  0D97  120A  158A  223D   	fcall	_Lcd_Text
  5425  0D9A  0008               	return
  5426  0D9B                     __end_of_ImprimirMenuLavado:	
  5427                           
  5428                           	psect	text23
  5429  0305                     __ptext23:	
  5430 ;; *************** function _sprintf *****************
  5431 ;; Defined at:
  5432 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;  sp              1    wreg     PTR unsigned char 
  5435 ;;		 -> aux(20), 
  5436 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  5437 ;;		 -> STR_12(11), STR_8(17), STR_7(17), 
  5438 ;; Auto vars:     Size  Location     Type
  5439 ;;  sp              1   18[BANK0 ] PTR unsigned char 
  5440 ;;		 -> aux(20), 
  5441 ;;  tmpval          4    0        struct .
  5442 ;;  val             2   16[BANK0 ] unsigned int 
  5443 ;;  cp              2    0        PTR const unsigned char 
  5444 ;;  len             2    0        unsigned int 
  5445 ;;  c               1   19[BANK0 ] char 
  5446 ;;  prec            1   15[BANK0 ] char 
  5447 ;;  flag            1   14[BANK0 ] unsigned char 
  5448 ;;  ap              1   13[BANK0 ] PTR void [1]
  5449 ;;		 -> ?_sprintf(2), 
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  2    2[BANK0 ] int 
  5452 ;; Registers used:
  5453 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5459 ;;      Params:         0       8       0       0       0
  5460 ;;      Locals:         0       7       0       0       0
  5461 ;;      Temps:          0       3       0       0       0
  5462 ;;      Totals:         0      18       0       0       0
  5463 ;;Total ram usage:       18 bytes
  5464 ;; Hardware stack levels used:    1
  5465 ;; Hardware stack levels required when called:    1
  5466 ;; This function calls:
  5467 ;;		___lwdiv
  5468 ;;		___lwmod
  5469 ;; This function is called by:
  5470 ;;		_reversa
  5471 ;;		_normal
  5472 ;;		_ImprimirMenuLavado
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475                           
  5476                           
  5477                           ;psect for function _sprintf
  5478  0305                     _sprintf:	
  5479                           
  5480                           ;incstack = 0
  5481                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5482                           ;sprintf@sp stored from wreg
  5483  0305  1283               	bcf	3,5	;RP0=0, select bank0
  5484  0306  1303               	bcf	3,6	;RP1=0, select bank0
  5485  0307  00B2               	movwf	sprintf@sp
  5486                           
  5487                           ;doprnt.c: 494: va_list ap;
  5488                           ;doprnt.c: 499: signed char c;
  5489                           ;doprnt.c: 506: signed char prec;
  5490                           ;doprnt.c: 508: unsigned char flag;
  5491                           ;doprnt.c: 523: union {
  5492                           ;doprnt.c: 524: unsigned long vd;
  5493                           ;doprnt.c: 525: double integ;
  5494                           ;doprnt.c: 526: } tmpval;
  5495                           ;doprnt.c: 528: unsigned int val;
  5496                           ;doprnt.c: 529: unsigned len;
  5497                           ;doprnt.c: 530: const char * cp;
  5498                           ;doprnt.c: 533: *ap = __va_start();
  5499  0308  3024               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  5500  0309  00AA               	movwf	??_sprintf
  5501  030A  082A               	movf	??_sprintf,w
  5502  030B  00AD               	movwf	sprintf@ap
  5503  030C                     l2064:	
  5504                           ;doprnt.c: 536: while(c = *f++) {
  5505                           
  5506  030C  0823               	movf	sprintf@f+1,w
  5507  030D  00AB               	movwf	??_sprintf+1
  5508  030E  0822               	movf	sprintf@f,w
  5509  030F  00AA               	movwf	??_sprintf
  5510  0310  0AA2               	incf	sprintf@f,f
  5511  0311  1903               	skipnz
  5512  0312  0AA3               	incf	sprintf@f+1,f
  5513  0313  082B               	movf	??_sprintf+1,w
  5514  0314  00FF               	movwf	127
  5515  0315  082A               	movf	??_sprintf,w
  5516  0316  0084               	movwf	4
  5517  0317  120A  158A  2000  120A  118A  	fcall	stringtab
  5518  031C  00AC               	movwf	??_sprintf+2
  5519  031D  082C               	movf	??_sprintf+2,w
  5520  031E  00B3               	movwf	sprintf@c
  5521  031F  0833               	movf	sprintf@c,w
  5522  0320  1903               	btfsc	3,2
  5523  0321  2BE8               	goto	l2066
  5524                           
  5525                           ;doprnt.c: 538: if(c != '%')
  5526  0322  3025               	movlw	37
  5527  0323  0633               	xorwf	sprintf@c,w
  5528  0324  1903               	btfsc	3,2
  5529  0325  2B32               	goto	l2020
  5530                           
  5531                           ;doprnt.c: 540: {
  5532                           ;doprnt.c: 541: ((*sp++ = (c)));
  5533  0326  0833               	movf	sprintf@c,w
  5534  0327  00AA               	movwf	??_sprintf
  5535  0328  0832               	movf	sprintf@sp,w
  5536  0329  0084               	movwf	4
  5537  032A  082A               	movf	??_sprintf,w
  5538  032B  1383               	bcf	3,7	;select IRP bank0
  5539  032C  0080               	movwf	0
  5540  032D  3001               	movlw	1
  5541  032E  00AA               	movwf	??_sprintf
  5542  032F  082A               	movf	??_sprintf,w
  5543  0330  07B2               	addwf	sprintf@sp,f
  5544                           
  5545                           ;doprnt.c: 542: continue;
  5546  0331  2B0C               	goto	l2064
  5547  0332                     l2020:	
  5548                           
  5549                           ;doprnt.c: 543: }
  5550                           ;doprnt.c: 548: flag = 0;
  5551  0332  01AE               	clrf	sprintf@flag
  5552                           
  5553                           ;doprnt.c: 822: }
  5554                           
  5555                           ;doprnt.c: 813: continue;
  5556                           
  5557                           ;doprnt.c: 802: default:
  5558                           
  5559                           ;doprnt.c: 698: case 'i':
  5560                           ;doprnt.c: 699: break;
  5561                           
  5562                           ;doprnt.c: 697: case 'd':
  5563                           
  5564                           ;doprnt.c: 638: goto alldone;
  5565                           
  5566                           ;doprnt.c: 637: case 0:
  5567                           
  5568                           ;doprnt.c: 635: switch(c = *f++) {
  5569  0333  0823               	movf	sprintf@f+1,w
  5570  0334  00AB               	movwf	??_sprintf+1
  5571  0335  0822               	movf	sprintf@f,w
  5572  0336  00AA               	movwf	??_sprintf
  5573  0337  0AA2               	incf	sprintf@f,f
  5574  0338  1903               	skipnz
  5575  0339  0AA3               	incf	sprintf@f+1,f
  5576  033A  082B               	movf	??_sprintf+1,w
  5577  033B  00FF               	movwf	127
  5578  033C  082A               	movf	??_sprintf,w
  5579  033D  0084               	movwf	4
  5580  033E  120A  158A  2000  120A  118A  	fcall	stringtab
  5581  0343  00B3               	movwf	sprintf@c
  5582                           
  5583                           ; Switch size 1, requested type "space"
  5584                           ; Number of cases is 3, Range of values is 0 to 105
  5585                           ; switch strategies available:
  5586                           ; Name         Instructions Cycles
  5587                           ; simple_byte           10     6 (average)
  5588                           ; jumptable            260     6 (fixed)
  5589                           ;	Chosen strategy is simple_byte
  5590  0344  3A00               	xorlw	0	; case 0
  5591  0345  1903               	skipnz
  5592  0346  2BE8               	goto	l2066
  5593  0347  3A64               	xorlw	100	; case 100
  5594  0348  1903               	skipnz
  5595  0349  2B4E               	goto	l2026
  5596  034A  3A0D               	xorlw	13	; case 105
  5597  034B  1903               	skipnz
  5598  034C  2B4E               	goto	l2026
  5599  034D  2B0C               	goto	l2064
  5600  034E                     l2026:	
  5601                           
  5602                           ;doprnt.c: 1253: {
  5603                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5604  034E  082D               	movf	sprintf@ap,w
  5605  034F  0084               	movwf	4
  5606  0350  1383               	bcf	3,7	;select IRP bank0
  5607  0351  0800               	movf	0,w
  5608  0352  00B0               	movwf	sprintf@val
  5609  0353  0A84               	incf	4,f
  5610  0354  0800               	movf	0,w
  5611  0355  00B1               	movwf	sprintf@val+1
  5612  0356  3002               	movlw	2
  5613  0357  00AA               	movwf	??_sprintf
  5614  0358  082A               	movf	??_sprintf,w
  5615  0359  07AD               	addwf	sprintf@ap,f
  5616                           
  5617                           ;doprnt.c: 1261: if((int)val < 0) {
  5618  035A  1FB1               	btfss	sprintf@val+1,7
  5619  035B  2B65               	goto	l2036
  5620                           
  5621                           ;doprnt.c: 1262: flag |= 0x03;
  5622  035C  3003               	movlw	3
  5623  035D  00AA               	movwf	??_sprintf
  5624  035E  082A               	movf	??_sprintf,w
  5625  035F  04AE               	iorwf	sprintf@flag,f
  5626                           
  5627                           ;doprnt.c: 1263: val = -val;
  5628  0360  09B0               	comf	sprintf@val,f
  5629  0361  09B1               	comf	sprintf@val+1,f
  5630  0362  0AB0               	incf	sprintf@val,f
  5631  0363  1903               	skipnz
  5632  0364  0AB1               	incf	sprintf@val+1,f
  5633  0365                     l2036:	
  5634                           
  5635                           ;doprnt.c: 1264: }
  5636                           ;doprnt.c: 1266: }
  5637                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5638  0365  01B3               	clrf	sprintf@c
  5639  0366  0AB3               	incf	sprintf@c,f
  5640  0367  3005               	movlw	5
  5641  0368  0633               	xorwf	sprintf@c,w
  5642  0369  1903               	btfsc	3,2
  5643  036A  2B90               	goto	l2048
  5644  036B                     l2042:	
  5645                           
  5646                           ;doprnt.c: 1306: if(val < dpowers[c])
  5647  036B  0833               	movf	sprintf@c,w
  5648  036C  00AA               	movwf	??_sprintf
  5649  036D  072A               	addwf	??_sprintf,w
  5650  036E  3E12               	addlw	low (_dpowers| (0+32768))
  5651  036F  0084               	movwf	4
  5652  0370  3088               	movlw	high (_dpowers| (0+32768))
  5653  0371  1803               	skipnc
  5654  0372  3E01               	addlw	1
  5655  0373  00FF               	movwf	127
  5656  0374  120A  158A  2000  120A  118A  	fcall	stringtab
  5657  0379  00AB               	movwf	??_sprintf+1
  5658  037A  120A  158A  2000  120A  118A  	fcall	stringtab
  5659  037F  00AC               	movwf	??_sprintf+2
  5660  0380  082C               	movf	??_sprintf+2,w
  5661  0381  0231               	subwf	sprintf@val+1,w
  5662  0382  1D03               	skipz
  5663  0383  2B86               	goto	u2495
  5664  0384  082B               	movf	??_sprintf+1,w
  5665  0385  0230               	subwf	sprintf@val,w
  5666  0386                     u2495:	
  5667  0386  1C03               	btfss	3,0
  5668  0387  2B90               	goto	l2048
  5669                           
  5670                           ;doprnt.c: 1307: break;
  5671  0388  3001               	movlw	1
  5672  0389  00AA               	movwf	??_sprintf
  5673  038A  082A               	movf	??_sprintf,w
  5674  038B  07B3               	addwf	sprintf@c,f
  5675  038C  3005               	movlw	5
  5676  038D  0633               	xorwf	sprintf@c,w
  5677  038E  1D03               	btfss	3,2
  5678  038F  2B6B               	goto	l2042
  5679  0390                     l2048:	
  5680                           
  5681                           ;doprnt.c: 1422: {
  5682                           ;doprnt.c: 1438: if(flag & 0x03)
  5683  0390  082E               	movf	sprintf@flag,w
  5684  0391  3903               	andlw	3
  5685  0392  1903               	btfsc	3,2
  5686  0393  2B9F               	goto	l2054
  5687                           
  5688                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  5689  0394  302D               	movlw	45
  5690  0395  00AA               	movwf	??_sprintf
  5691  0396  0832               	movf	sprintf@sp,w
  5692  0397  0084               	movwf	4
  5693  0398  082A               	movf	??_sprintf,w
  5694  0399  1383               	bcf	3,7	;select IRP bank0
  5695  039A  0080               	movwf	0
  5696  039B  3001               	movlw	1
  5697  039C  00AA               	movwf	??_sprintf
  5698  039D  082A               	movf	??_sprintf,w
  5699  039E  07B2               	addwf	sprintf@sp,f
  5700  039F                     l2054:	
  5701                           
  5702                           ;doprnt.c: 1469: }
  5703                           ;doprnt.c: 1472: prec = c;
  5704  039F  0833               	movf	sprintf@c,w
  5705  03A0  00AA               	movwf	??_sprintf
  5706  03A1  082A               	movf	??_sprintf,w
  5707  03A2  00AF               	movwf	sprintf@prec
  5708  03A3                     l2062:	
  5709                           ;doprnt.c: 1474: while(prec--) {
  5710                           
  5711  03A3  30FF               	movlw	255
  5712  03A4  00AA               	movwf	??_sprintf
  5713  03A5  082A               	movf	??_sprintf,w
  5714  03A6  07AF               	addwf	sprintf@prec,f
  5715  03A7  0A2F               	incf	sprintf@prec,w
  5716  03A8  1903               	btfsc	3,2
  5717  03A9  2B0C               	goto	l2064
  5718                           
  5719                           ;doprnt.c: 1478: {
  5720                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5721  03AA  300A               	movlw	10
  5722  03AB  00F8               	movwf	___lwmod@divisor
  5723  03AC  3000               	movlw	0
  5724  03AD  00F9               	movwf	___lwmod@divisor+1
  5725  03AE  082F               	movf	sprintf@prec,w
  5726  03AF  00AA               	movwf	??_sprintf
  5727  03B0  072A               	addwf	??_sprintf,w
  5728  03B1  3E12               	addlw	low (_dpowers| (0+32768))
  5729  03B2  0084               	movwf	4
  5730  03B3  3088               	movlw	high (_dpowers| (0+32768))
  5731  03B4  1803               	skipnc
  5732  03B5  3E01               	addlw	1
  5733  03B6  00FF               	movwf	127
  5734  03B7  120A  158A  2000  120A  118A  	fcall	stringtab
  5735  03BC  00F0               	movwf	___lwdiv@divisor
  5736  03BD  120A  158A  2000  120A  118A  	fcall	stringtab
  5737  03C2  00F1               	movwf	___lwdiv@divisor+1
  5738  03C3  0831               	movf	sprintf@val+1,w
  5739  03C4  00F3               	movwf	___lwdiv@dividend+1
  5740  03C5  0830               	movf	sprintf@val,w
  5741  03C6  00F2               	movwf	___lwdiv@dividend
  5742  03C7  120A  158A  2179  120A  118A  	fcall	___lwdiv
  5743  03CC  0871               	movf	?___lwdiv+1,w
  5744  03CD  00FB               	movwf	___lwmod@dividend+1
  5745  03CE  0870               	movf	?___lwdiv,w
  5746  03CF  00FA               	movwf	___lwmod@dividend
  5747  03D0  160A  118A  27CE  120A  118A  	fcall	___lwmod
  5748  03D5  0878               	movf	?___lwmod,w
  5749  03D6  3E30               	addlw	48
  5750  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  5751  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  5752  03D9  00AB               	movwf	??_sprintf+1
  5753  03DA  082B               	movf	??_sprintf+1,w
  5754  03DB  00B3               	movwf	sprintf@c
  5755                           
  5756                           ;doprnt.c: 1523: }
  5757                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5758  03DC  0833               	movf	sprintf@c,w
  5759  03DD  00AA               	movwf	??_sprintf
  5760  03DE  0832               	movf	sprintf@sp,w
  5761  03DF  0084               	movwf	4
  5762  03E0  082A               	movf	??_sprintf,w
  5763  03E1  1383               	bcf	3,7	;select IRP bank0
  5764  03E2  0080               	movwf	0
  5765  03E3  3001               	movlw	1
  5766  03E4  00AA               	movwf	??_sprintf
  5767  03E5  082A               	movf	??_sprintf,w
  5768  03E6  07B2               	addwf	sprintf@sp,f
  5769  03E7  2BA3               	goto	l2062
  5770  03E8                     l2066:	
  5771                           ;doprnt.c: 1525: }
  5772                           ;doprnt.c: 1533: }
  5773                           ;doprnt.c: 1535: alldone:
  5774                           
  5775                           
  5776                           ;doprnt.c: 1538: *sp = 0;
  5777  03E8  0832               	movf	sprintf@sp,w
  5778  03E9  0084               	movwf	4
  5779  03EA  1383               	bcf	3,7	;select IRP bank0
  5780  03EB  0180               	clrf	0
  5781  03EC  0008               	return
  5782  03ED                     __end_of_sprintf:	
  5783                           ;doprnt.c: 1540: return 0;
  5784                           ;	Return value of _sprintf is never used
  5785                           
  5786                           
  5787                           	psect	text24
  5788  17CE                     __ptext24:	
  5789 ;; *************** function ___lwmod *****************
  5790 ;; Defined at:
  5791 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  5792 ;; Parameters:    Size  Location     Type
  5793 ;;  divisor         2    8[COMMON] unsigned int 
  5794 ;;  dividend        2   10[COMMON] unsigned int 
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;  counter         1   13[COMMON] unsigned char 
  5797 ;; Return value:  Size  Location     Type
  5798 ;;                  2    8[COMMON] unsigned int 
  5799 ;; Registers used:
  5800 ;;		wreg, status,2, status,0
  5801 ;; Tracked objects:
  5802 ;;		On entry : 0/0
  5803 ;;		On exit  : 0/0
  5804 ;;		Unchanged: 0/0
  5805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5806 ;;      Params:         4       0       0       0       0
  5807 ;;      Locals:         1       0       0       0       0
  5808 ;;      Temps:          1       0       0       0       0
  5809 ;;      Totals:         6       0       0       0       0
  5810 ;;Total ram usage:        6 bytes
  5811 ;; Hardware stack levels used:    1
  5812 ;; This function calls:
  5813 ;;		Nothing
  5814 ;; This function is called by:
  5815 ;;		_sprintf
  5816 ;; This function uses a non-reentrant model
  5817 ;;
  5818                           
  5819                           
  5820                           ;psect for function ___lwmod
  5821  17CE                     ___lwmod:	
  5822                           
  5823                           ;incstack = 0
  5824                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5825  17CE  0878               	movf	___lwmod@divisor,w
  5826  17CF  0479               	iorwf	___lwmod@divisor+1,w
  5827  17D0  1903               	btfsc	3,2
  5828  17D1  2FFB               	goto	l1972
  5829  17D2  01FD               	clrf	___lwmod@counter
  5830  17D3  0AFD               	incf	___lwmod@counter,f
  5831  17D4                     l1962:	
  5832  17D4  1BF9               	btfsc	___lwmod@divisor+1,7
  5833  17D5  2FE2               	goto	l1964
  5834  17D6  3001               	movlw	1
  5835  17D7                     u2365:	
  5836  17D7  1003               	clrc
  5837  17D8  0DF8               	rlf	___lwmod@divisor,f
  5838  17D9  0DF9               	rlf	___lwmod@divisor+1,f
  5839  17DA  3EFF               	addlw	-1
  5840  17DB  1D03               	skipz
  5841  17DC  2FD7               	goto	u2365
  5842  17DD  3001               	movlw	1
  5843  17DE  00FC               	movwf	??___lwmod
  5844  17DF  087C               	movf	??___lwmod,w
  5845  17E0  07FD               	addwf	___lwmod@counter,f
  5846  17E1  2FD4               	goto	l1962
  5847  17E2                     l1964:	
  5848  17E2  0879               	movf	___lwmod@divisor+1,w
  5849  17E3  027B               	subwf	___lwmod@dividend+1,w
  5850  17E4  1D03               	skipz
  5851  17E5  2FE8               	goto	u2385
  5852  17E6  0878               	movf	___lwmod@divisor,w
  5853  17E7  027A               	subwf	___lwmod@dividend,w
  5854  17E8                     u2385:	
  5855  17E8  1C03               	skipc
  5856  17E9  2FF0               	goto	l1968
  5857  17EA  0878               	movf	___lwmod@divisor,w
  5858  17EB  02FA               	subwf	___lwmod@dividend,f
  5859  17EC  0879               	movf	___lwmod@divisor+1,w
  5860  17ED  1C03               	skipc
  5861  17EE  03FB               	decf	___lwmod@dividend+1,f
  5862  17EF  02FB               	subwf	___lwmod@dividend+1,f
  5863  17F0                     l1968:	
  5864  17F0  3001               	movlw	1
  5865  17F1                     u2395:	
  5866  17F1  1003               	clrc
  5867  17F2  0CF9               	rrf	___lwmod@divisor+1,f
  5868  17F3  0CF8               	rrf	___lwmod@divisor,f
  5869  17F4  3EFF               	addlw	-1
  5870  17F5  1D03               	skipz
  5871  17F6  2FF1               	goto	u2395
  5872  17F7  3001               	movlw	1
  5873  17F8  02FD               	subwf	___lwmod@counter,f
  5874  17F9  1D03               	btfss	3,2
  5875  17FA  2FE2               	goto	l1964
  5876  17FB                     l1972:	
  5877  17FB  087B               	movf	___lwmod@dividend+1,w
  5878  17FC  00F9               	movwf	?___lwmod+1
  5879  17FD  087A               	movf	___lwmod@dividend,w
  5880  17FE  00F8               	movwf	?___lwmod
  5881  17FF  0008               	return
  5882  1800                     __end_of___lwmod:	
  5883                           
  5884                           	psect	text25
  5885  0979                     __ptext25:	
  5886 ;; *************** function ___lwdiv *****************
  5887 ;; Defined at:
  5888 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  5889 ;; Parameters:    Size  Location     Type
  5890 ;;  divisor         2    0[COMMON] unsigned int 
  5891 ;;  dividend        2    2[COMMON] unsigned int 
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  quotient        2    5[COMMON] unsigned int 
  5894 ;;  counter         1    7[COMMON] unsigned char 
  5895 ;; Return value:  Size  Location     Type
  5896 ;;                  2    0[COMMON] unsigned int 
  5897 ;; Registers used:
  5898 ;;		wreg, status,2, status,0
  5899 ;; Tracked objects:
  5900 ;;		On entry : 0/0
  5901 ;;		On exit  : 0/0
  5902 ;;		Unchanged: 0/0
  5903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5904 ;;      Params:         4       0       0       0       0
  5905 ;;      Locals:         3       0       0       0       0
  5906 ;;      Temps:          1       0       0       0       0
  5907 ;;      Totals:         8       0       0       0       0
  5908 ;;Total ram usage:        8 bytes
  5909 ;; Hardware stack levels used:    1
  5910 ;; This function calls:
  5911 ;;		Nothing
  5912 ;; This function is called by:
  5913 ;;		_sprintf
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           
  5918                           ;psect for function ___lwdiv
  5919  0979                     ___lwdiv:	
  5920                           
  5921                           ;incstack = 0
  5922                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5923  0979  01F5               	clrf	___lwdiv@quotient
  5924  097A  01F6               	clrf	___lwdiv@quotient+1
  5925  097B  0870               	movf	___lwdiv@divisor,w
  5926  097C  0471               	iorwf	___lwdiv@divisor+1,w
  5927  097D  1903               	btfsc	3,2
  5928  097E  29B0               	goto	l1950
  5929  097F  01F7               	clrf	___lwdiv@counter
  5930  0980  0AF7               	incf	___lwdiv@counter,f
  5931  0981                     l1938:	
  5932  0981  1BF1               	btfsc	___lwdiv@divisor+1,7
  5933  0982  298F               	goto	l1940
  5934  0983  3001               	movlw	1
  5935  0984                     u2295:	
  5936  0984  1003               	clrc
  5937  0985  0DF0               	rlf	___lwdiv@divisor,f
  5938  0986  0DF1               	rlf	___lwdiv@divisor+1,f
  5939  0987  3EFF               	addlw	-1
  5940  0988  1D03               	skipz
  5941  0989  2984               	goto	u2295
  5942  098A  3001               	movlw	1
  5943  098B  00F4               	movwf	??___lwdiv
  5944  098C  0874               	movf	??___lwdiv,w
  5945  098D  07F7               	addwf	___lwdiv@counter,f
  5946  098E  2981               	goto	l1938
  5947  098F                     l1940:	
  5948  098F  3001               	movlw	1
  5949  0990                     u2315:	
  5950  0990  1003               	clrc
  5951  0991  0DF5               	rlf	___lwdiv@quotient,f
  5952  0992  0DF6               	rlf	___lwdiv@quotient+1,f
  5953  0993  3EFF               	addlw	-1
  5954  0994  1D03               	skipz
  5955  0995  2990               	goto	u2315
  5956  0996  0871               	movf	___lwdiv@divisor+1,w
  5957  0997  0273               	subwf	___lwdiv@dividend+1,w
  5958  0998  1D03               	skipz
  5959  0999  299C               	goto	u2325
  5960  099A  0870               	movf	___lwdiv@divisor,w
  5961  099B  0272               	subwf	___lwdiv@dividend,w
  5962  099C                     u2325:	
  5963  099C  1C03               	skipc
  5964  099D  29A5               	goto	l1946
  5965  099E  0870               	movf	___lwdiv@divisor,w
  5966  099F  02F2               	subwf	___lwdiv@dividend,f
  5967  09A0  0871               	movf	___lwdiv@divisor+1,w
  5968  09A1  1C03               	skipc
  5969  09A2  03F3               	decf	___lwdiv@dividend+1,f
  5970  09A3  02F3               	subwf	___lwdiv@dividend+1,f
  5971  09A4  1475               	bsf	___lwdiv@quotient,0
  5972  09A5                     l1946:	
  5973  09A5  3001               	movlw	1
  5974  09A6                     u2335:	
  5975  09A6  1003               	clrc
  5976  09A7  0CF1               	rrf	___lwdiv@divisor+1,f
  5977  09A8  0CF0               	rrf	___lwdiv@divisor,f
  5978  09A9  3EFF               	addlw	-1
  5979  09AA  1D03               	skipz
  5980  09AB  29A6               	goto	u2335
  5981  09AC  3001               	movlw	1
  5982  09AD  02F7               	subwf	___lwdiv@counter,f
  5983  09AE  1D03               	btfss	3,2
  5984  09AF  298F               	goto	l1940
  5985  09B0                     l1950:	
  5986  09B0  0876               	movf	___lwdiv@quotient+1,w
  5987  09B1  00F1               	movwf	?___lwdiv+1
  5988  09B2  0875               	movf	___lwdiv@quotient,w
  5989  09B3  00F0               	movwf	?___lwdiv
  5990  09B4  0008               	return
  5991  09B5                     __end_of___lwdiv:	
  5992                           
  5993                           	psect	text26
  5994  0A3D                     __ptext26:	
  5995 ;; *************** function _Lcd_Text *****************
  5996 ;; Defined at:
  5997 ;;		line 74 in file "lcd_hd44780.c"
  5998 ;; Parameters:    Size  Location     Type
  5999 ;;  y               1    wreg     unsigned char 
  6000 ;;  x               1    3[COMMON] unsigned char 
  6001 ;;  buffer          2    4[COMMON] PTR unsigned char 
  6002 ;;		 -> STR_38(11), STR_37(16), STR_36(13), STR_35(14), 
  6003 ;;		 -> STR_34(17), STR_33(13), STR_32(14), STR_31(14), 
  6004 ;;		 -> STR_30(16), STR_29(14), STR_28(14), STR_27(14), 
  6005 ;;		 -> STR_26(16), STR_25(13), STR_24(15), STR_23(14), 
  6006 ;;		 -> STR_22(16), STR_21(13), STR_20(14), STR_19(15), 
  6007 ;;		 -> STR_18(7), STR_17(8), STR_16(15), STR_15(6), 
  6008 ;;		 -> STR_14(9), STR_13(15), STR_11(22), STR_10(23), 
  6009 ;;		 -> STR_9(23), aux(20), STR_6(21), STR_5(21), 
  6010 ;;		 -> STR_4(11), STR_3(21), STR_2(9), STR_1(20), 
  6011 ;; Auto vars:     Size  Location     Type
  6012 ;;  y               1    7[COMMON] unsigned char 
  6013 ;;  data            1    8[COMMON] unsigned char 
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  1    wreg      void 
  6016 ;; Registers used:
  6017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6023 ;;      Params:         3       0       0       0       0
  6024 ;;      Locals:         2       0       0       0       0
  6025 ;;      Temps:          1       0       0       0       0
  6026 ;;      Totals:         6       0       0       0       0
  6027 ;;Total ram usage:        6 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; Hardware stack levels required when called:    1
  6030 ;; This function calls:
  6031 ;;		_Lcd_CharCP
  6032 ;;		_Lcd_Command
  6033 ;; This function is called by:
  6034 ;;		_main
  6035 ;;		_lavadoNormal
  6036 ;;		_MensajeFinalizado
  6037 ;;		_reversa
  6038 ;;		_normal
  6039 ;;		_llenadoAgua
  6040 ;;		_SacaraAgua
  6041 ;;		_ImprimirMenuLavado
  6042 ;;		_ImprimirMenuPrincipal
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           
  6047                           ;psect for function _Lcd_Text
  6048  0A3D                     _Lcd_Text:	
  6049                           
  6050                           ;incstack = 0
  6051                           ; Regs used in _Lcd_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6052                           ;Lcd_Text@y stored from wreg
  6053  0A3D  00F7               	movwf	Lcd_Text@y
  6054                           
  6055                           ;lcd_hd44780.c: 75: unsigned char data;
  6056                           ;lcd_hd44780.c: 76: switch(y){
  6057  0A3E  2A4E               	goto	l1992
  6058  0A3F                     l1982:	
  6059                           ;lcd_hd44780.c: 77: case 1: data = (unsigned char)(127 + x); break;
  6060                           
  6061  0A3F  0873               	movf	Lcd_Text@x,w
  6062  0A40  3E7F               	addlw	127
  6063  0A41  2A4A               	goto	L4
  6064  0A42                     l1984:	
  6065                           ;lcd_hd44780.c: 78: case 2: data = (unsigned char)(191 + x); break;
  6066                           
  6067  0A42  0873               	movf	Lcd_Text@x,w
  6068  0A43  3EBF               	addlw	191
  6069  0A44  2A4A               	goto	L4
  6070  0A45                     l1986:	
  6071                           ;lcd_hd44780.c: 79: case 3: data = (unsigned char)(147 + x); break;
  6072                           
  6073  0A45  0873               	movf	Lcd_Text@x,w
  6074  0A46  3E93               	addlw	147
  6075  0A47  2A4A               	goto	L4
  6076  0A48                     l1988:	
  6077                           ;lcd_hd44780.c: 80: case 4: data = (unsigned char)(211 + x); break;
  6078                           
  6079  0A48  0873               	movf	Lcd_Text@x,w
  6080  0A49  3ED3               	addlw	211
  6081  0A4A                     L4:	
  6082  0A4A  00F6               	movwf	??_Lcd_Text
  6083  0A4B  0876               	movf	??_Lcd_Text,w
  6084  0A4C  00F8               	movwf	Lcd_Text@data
  6085                           
  6086                           ;lcd_hd44780.c: 81: default: break;}
  6087  0A4D  2A5C               	goto	l1994
  6088  0A4E                     l1992:	
  6089  0A4E  0877               	movf	Lcd_Text@y,w
  6090                           
  6091                           ; Switch size 1, requested type "space"
  6092                           ; Number of cases is 4, Range of values is 1 to 4
  6093                           ; switch strategies available:
  6094                           ; Name         Instructions Cycles
  6095                           ; simple_byte           13     7 (average)
  6096                           ; direct_byte           23    11 (fixed)
  6097                           ; jumptable            263     9 (fixed)
  6098                           ;	Chosen strategy is simple_byte
  6099  0A4F  3A01               	xorlw	1	; case 1
  6100  0A50  1903               	skipnz
  6101  0A51  2A3F               	goto	l1982
  6102  0A52  3A03               	xorlw	3	; case 2
  6103  0A53  1903               	skipnz
  6104  0A54  2A42               	goto	l1984
  6105  0A55  3A01               	xorlw	1	; case 3
  6106  0A56  1903               	skipnz
  6107  0A57  2A45               	goto	l1986
  6108  0A58  3A07               	xorlw	7	; case 4
  6109  0A59  1903               	skipnz
  6110  0A5A  2A48               	goto	l1988
  6111  0A5B  2A5C               	goto	l1994
  6112  0A5C                     l1994:	
  6113                           
  6114                           ;lcd_hd44780.c: 82: Lcd_Command(data);
  6115  0A5C  0878               	movf	Lcd_Text@data,w
  6116  0A5D  120A  158A  26B8  120A  158A  	fcall	_Lcd_Command
  6117  0A62                     l2000:	
  6118                           ;lcd_hd44780.c: 83: while(*buffer)
  6119                           
  6120  0A62  0875               	movf	Lcd_Text@buffer+1,w
  6121  0A63  1283               	bcf	3,5	;RP0=0, select bank0
  6122  0A64  1303               	bcf	3,6	;RP1=0, select bank0
  6123  0A65  00FF               	movwf	127
  6124  0A66  0874               	movf	Lcd_Text@buffer,w
  6125  0A67  0084               	movwf	4
  6126  0A68  120A  158A  2000  120A  158A  	fcall	stringtab
  6127  0A6D  3A00               	xorlw	0
  6128  0A6E  1903               	btfsc	3,2
  6129  0A6F  0008               	return
  6130                           
  6131                           ;lcd_hd44780.c: 84: {
  6132                           ;lcd_hd44780.c: 85: Lcd_CharCP(*buffer);
  6133  0A70  0875               	movf	Lcd_Text@buffer+1,w
  6134  0A71  1283               	bcf	3,5	;RP0=0, select bank0
  6135  0A72  1303               	bcf	3,6	;RP1=0, select bank0
  6136  0A73  00FF               	movwf	127
  6137  0A74  0874               	movf	Lcd_Text@buffer,w
  6138  0A75  0084               	movwf	4
  6139  0A76  120A  158A  2000  120A  158A  	fcall	stringtab
  6140  0A7B  120A  158A  275A  120A  158A  	fcall	_Lcd_CharCP
  6141                           
  6142                           ;lcd_hd44780.c: 86: buffer++;
  6143  0A80  3001               	movlw	1
  6144  0A81  07F4               	addwf	Lcd_Text@buffer,f
  6145  0A82  1803               	skipnc
  6146  0A83  0AF5               	incf	Lcd_Text@buffer+1,f
  6147  0A84  2A62               	goto	l2000
  6148  0A85                     __end_of_Lcd_Text:	
  6149                           ;lcd_hd44780.c: 87: }
  6150                           ;lcd_hd44780.c: 88: return;
  6151                           
  6152                           
  6153                           	psect	text27
  6154  0EB8                     __ptext27:	
  6155 ;; *************** function _Lcd_Command *****************
  6156 ;; Defined at:
  6157 ;;		line 130 in file "lcd_hd44780.c"
  6158 ;; Parameters:    Size  Location     Type
  6159 ;;  command         1    wreg     unsigned char 
  6160 ;; Auto vars:     Size  Location     Type
  6161 ;;  command         1    2[COMMON] unsigned char 
  6162 ;; Return value:  Size  Location     Type
  6163 ;;                  1    wreg      void 
  6164 ;; Registers used:
  6165 ;;		wreg, status,2, status,0
  6166 ;; Tracked objects:
  6167 ;;		On entry : 0/0
  6168 ;;		On exit  : 0/0
  6169 ;;		Unchanged: 0/0
  6170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6171 ;;      Params:         0       0       0       0       0
  6172 ;;      Locals:         1       0       0       0       0
  6173 ;;      Temps:          2       0       0       0       0
  6174 ;;      Totals:         3       0       0       0       0
  6175 ;;Total ram usage:        3 bytes
  6176 ;; Hardware stack levels used:    1
  6177 ;; This function calls:
  6178 ;;		Nothing
  6179 ;; This function is called by:
  6180 ;;		_Lcd_Init
  6181 ;;		_Lcd_Text
  6182 ;;		_main
  6183 ;;		_lavadoNormal
  6184 ;;		_MensajeFinalizado
  6185 ;;		_llenadoAgua
  6186 ;;		_SacaraAgua
  6187 ;;		_ImprimirMenuLavado
  6188 ;;		_ImprimirMenuPrincipal
  6189 ;;		_Lcd_ConstText
  6190 ;;		_Lcd_WriteChar
  6191 ;; This function uses a non-reentrant model
  6192 ;;
  6193                           
  6194                           
  6195                           ;psect for function _Lcd_Command
  6196  0EB8                     _Lcd_Command:	
  6197                           
  6198                           ;incstack = 0
  6199                           ; Regs used in _Lcd_Command: [wreg+status,2+status,0]
  6200                           ;Lcd_Command@command stored from wreg
  6201  0EB8  00F2               	movwf	Lcd_Command@command
  6202                           
  6203                           ;lcd_hd44780.c: 131: PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  6204  0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  6205  0EBA  1303               	bcf	3,6	;RP1=0, select bank0
  6206  0EBB  1207               	bcf	7,4	;volatile
  6207  0EBC  1287               	bcf	7,5	;volatile
  6208                           
  6209                           ;lcd_hd44780.c: 132: PORTCbits.RC0 = (unsigned char)((command & 0b10000000)>>7); PORTCbi
      +                          ts.RC6 = (unsigned char)((command & 0b01000000)>>6);
  6210  0EBD  0872               	movf	Lcd_Command@command,w
  6211  0EBE  00F0               	movwf	??_Lcd_Command
  6212  0EBF  3007               	movlw	7
  6213  0EC0                     u1715:	
  6214  0EC0  1003               	clrc
  6215  0EC1  0CF0               	rrf	??_Lcd_Command,f
  6216  0EC2  3EFF               	addlw	-1
  6217  0EC3  1D03               	skipz
  6218  0EC4  2EC0               	goto	u1715
  6219  0EC5  3001               	movlw	1
  6220  0EC6  0570               	andwf	??_Lcd_Command,w
  6221  0EC7  00F1               	movwf	??_Lcd_Command+1
  6222  0EC8  0807               	movf	7,w	;volatile
  6223  0EC9  0671               	xorwf	??_Lcd_Command+1,w
  6224  0ECA  39FE               	andlw	-2
  6225  0ECB  0671               	xorwf	??_Lcd_Command+1,w
  6226  0ECC  0087               	movwf	7	;volatile
  6227  0ECD  0872               	movf	Lcd_Command@command,w
  6228  0ECE  00F0               	movwf	??_Lcd_Command
  6229  0ECF  3006               	movlw	6
  6230  0ED0                     u1725:	
  6231  0ED0  1003               	clrc
  6232  0ED1  0CF0               	rrf	??_Lcd_Command,f
  6233  0ED2  3EFF               	addlw	-1
  6234  0ED3  1D03               	skipz
  6235  0ED4  2ED0               	goto	u1725
  6236  0ED5  0870               	movf	??_Lcd_Command,w
  6237  0ED6  3901               	andlw	1
  6238  0ED7  00F1               	movwf	??_Lcd_Command+1
  6239  0ED8  0EF1               	swapf	??_Lcd_Command+1,f
  6240  0ED9  0DF1               	rlf	??_Lcd_Command+1,f
  6241  0EDA  0DF1               	rlf	??_Lcd_Command+1,f
  6242  0EDB  0807               	movf	7,w	;volatile
  6243  0EDC  0671               	xorwf	??_Lcd_Command+1,w
  6244  0EDD  39BF               	andlw	-65
  6245  0EDE  0671               	xorwf	??_Lcd_Command+1,w
  6246  0EDF  0087               	movwf	7	;volatile
  6247                           
  6248                           ;lcd_hd44780.c: 133: PORTCbits.RC7 = (unsigned char)((command & 0b00100000)>>5); PORTCbi
      +                          ts.RC3 = (unsigned char)((command & 0b00010000)>>4);
  6249  0EE0  0872               	movf	Lcd_Command@command,w
  6250  0EE1  00F0               	movwf	??_Lcd_Command
  6251  0EE2  3005               	movlw	5
  6252  0EE3                     u1735:	
  6253  0EE3  1003               	clrc
  6254  0EE4  0CF0               	rrf	??_Lcd_Command,f
  6255  0EE5  3EFF               	addlw	-1
  6256  0EE6  1D03               	skipz
  6257  0EE7  2EE3               	goto	u1735
  6258  0EE8  0870               	movf	??_Lcd_Command,w
  6259  0EE9  3901               	andlw	1
  6260  0EEA  00F1               	movwf	??_Lcd_Command+1
  6261  0EEB  0CF1               	rrf	??_Lcd_Command+1,f
  6262  0EEC  0CF1               	rrf	??_Lcd_Command+1,f
  6263  0EED  0807               	movf	7,w	;volatile
  6264  0EEE  0671               	xorwf	??_Lcd_Command+1,w
  6265  0EEF  397F               	andlw	-129
  6266  0EF0  0671               	xorwf	??_Lcd_Command+1,w
  6267  0EF1  0087               	movwf	7	;volatile
  6268  0EF2  0872               	movf	Lcd_Command@command,w
  6269  0EF3  00F0               	movwf	??_Lcd_Command
  6270  0EF4  3004               	movlw	4
  6271  0EF5                     u1745:	
  6272  0EF5  1003               	clrc
  6273  0EF6  0CF0               	rrf	??_Lcd_Command,f
  6274  0EF7  3EFF               	addlw	-1
  6275  0EF8  1D03               	skipz
  6276  0EF9  2EF5               	goto	u1745
  6277  0EFA  0870               	movf	??_Lcd_Command,w
  6278  0EFB  3901               	andlw	1
  6279  0EFC  00F1               	movwf	??_Lcd_Command+1
  6280  0EFD  0DF1               	rlf	??_Lcd_Command+1,f
  6281  0EFE  0DF1               	rlf	??_Lcd_Command+1,f
  6282  0EFF  0DF1               	rlf	??_Lcd_Command+1,f
  6283  0F00  0807               	movf	7,w	;volatile
  6284  0F01  0671               	xorwf	??_Lcd_Command+1,w
  6285  0F02  39F7               	andlw	-9
  6286  0F03  0671               	xorwf	??_Lcd_Command+1,w
  6287  0F04  0087               	movwf	7	;volatile
  6288                           
  6289                           ;lcd_hd44780.c: 135: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(20000000/4000000.0))
      +                          ); PORTCbits.RC4 = 0;
  6290  0F05  1607               	bsf	7,4	;volatile
  6291  0F06  3008               	movlw	8
  6292  0F07  00F0               	movwf	??_Lcd_Command
  6293  0F08                     u3357:	
  6294  0F08  0BF0               	decfsz	??_Lcd_Command,f
  6295  0F09  2F08               	goto	u3357
  6296  0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  6297  0F0B  1303               	bcf	3,6	;RP1=0, select bank0
  6298  0F0C  1207               	bcf	7,4	;volatile
  6299                           
  6300                           ;lcd_hd44780.c: 136: PORTCbits.RC0 = (unsigned char)((command & 0b00001000)>>3); PORTCbi
      +                          ts.RC6 = (unsigned char)((command & 0b00000100)>>2);
  6301  0F0D  0872               	movf	Lcd_Command@command,w
  6302  0F0E  00F0               	movwf	??_Lcd_Command
  6303  0F0F  3003               	movlw	3
  6304  0F10                     u1755:	
  6305  0F10  1003               	clrc
  6306  0F11  0CF0               	rrf	??_Lcd_Command,f
  6307  0F12  3EFF               	addlw	-1
  6308  0F13  1D03               	skipz
  6309  0F14  2F10               	goto	u1755
  6310  0F15  3001               	movlw	1
  6311  0F16  0570               	andwf	??_Lcd_Command,w
  6312  0F17  00F1               	movwf	??_Lcd_Command+1
  6313  0F18  0807               	movf	7,w	;volatile
  6314  0F19  0671               	xorwf	??_Lcd_Command+1,w
  6315  0F1A  39FE               	andlw	-2
  6316  0F1B  0671               	xorwf	??_Lcd_Command+1,w
  6317  0F1C  0087               	movwf	7	;volatile
  6318  0F1D  0872               	movf	Lcd_Command@command,w
  6319  0F1E  00F0               	movwf	??_Lcd_Command
  6320  0F1F  3002               	movlw	2
  6321  0F20                     u1765:	
  6322  0F20  1003               	clrc
  6323  0F21  0CF0               	rrf	??_Lcd_Command,f
  6324  0F22  3EFF               	addlw	-1
  6325  0F23  1D03               	skipz
  6326  0F24  2F20               	goto	u1765
  6327  0F25  0870               	movf	??_Lcd_Command,w
  6328  0F26  3901               	andlw	1
  6329  0F27  00F1               	movwf	??_Lcd_Command+1
  6330  0F28  0EF1               	swapf	??_Lcd_Command+1,f
  6331  0F29  0DF1               	rlf	??_Lcd_Command+1,f
  6332  0F2A  0DF1               	rlf	??_Lcd_Command+1,f
  6333  0F2B  0807               	movf	7,w	;volatile
  6334  0F2C  0671               	xorwf	??_Lcd_Command+1,w
  6335  0F2D  39BF               	andlw	-65
  6336  0F2E  0671               	xorwf	??_Lcd_Command+1,w
  6337  0F2F  0087               	movwf	7	;volatile
  6338                           
  6339                           ;lcd_hd44780.c: 137: PORTCbits.RC7 = (unsigned char)((command & 0b00000010)>>1); PORTCbi
      +                          ts.RC3 = (unsigned char)((command & 0b00000001));
  6340  0F30  0872               	movf	Lcd_Command@command,w
  6341  0F31  00F0               	movwf	??_Lcd_Command
  6342  0F32  1003               	clrc
  6343  0F33  0C70               	rrf	??_Lcd_Command,w
  6344  0F34  3901               	andlw	1
  6345  0F35  00F1               	movwf	??_Lcd_Command+1
  6346  0F36  0CF1               	rrf	??_Lcd_Command+1,f
  6347  0F37  0CF1               	rrf	??_Lcd_Command+1,f
  6348  0F38  0807               	movf	7,w	;volatile
  6349  0F39  0671               	xorwf	??_Lcd_Command+1,w
  6350  0F3A  397F               	andlw	-129
  6351  0F3B  0671               	xorwf	??_Lcd_Command+1,w
  6352  0F3C  0087               	movwf	7	;volatile
  6353  0F3D  0872               	movf	Lcd_Command@command,w
  6354  0F3E  3901               	andlw	1
  6355  0F3F  00F0               	movwf	??_Lcd_Command
  6356  0F40  0DF0               	rlf	??_Lcd_Command,f
  6357  0F41  0DF0               	rlf	??_Lcd_Command,f
  6358  0F42  0DF0               	rlf	??_Lcd_Command,f
  6359  0F43  0807               	movf	7,w	;volatile
  6360  0F44  0670               	xorwf	??_Lcd_Command,w
  6361  0F45  39F7               	andlw	-9
  6362  0F46  0670               	xorwf	??_Lcd_Command,w
  6363  0F47  0087               	movwf	7	;volatile
  6364                           
  6365                           ;lcd_hd44780.c: 139: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(20000000/4000000.0))
      +                          ); PORTCbits.RC4 = 0;
  6366  0F48  1607               	bsf	7,4	;volatile
  6367  0F49  3008               	movlw	8
  6368  0F4A  00F0               	movwf	??_Lcd_Command
  6369  0F4B                     u3367:	
  6370  0F4B  0BF0               	decfsz	??_Lcd_Command,f
  6371  0F4C  2F4B               	goto	u3367
  6372  0F4D  1283               	bcf	3,5	;RP0=0, select bank0
  6373  0F4E  1303               	bcf	3,6	;RP1=0, select bank0
  6374  0F4F  1207               	bcf	7,4	;volatile
  6375                           
  6376                           ;lcd_hd44780.c: 140: _delay((unsigned long)((5500)*(20000000/4000000.0)));
  6377  0F50  3024               	movlw	36
  6378  0F51  00F1               	movwf	??_Lcd_Command+1
  6379  0F52  30B5               	movlw	181
  6380  0F53  00F0               	movwf	??_Lcd_Command
  6381  0F54                     u3377:	
  6382  0F54  0BF0               	decfsz	??_Lcd_Command,f
  6383  0F55  2F54               	goto	u3377
  6384  0F56  0BF1               	decfsz	??_Lcd_Command+1,f
  6385  0F57  2F54               	goto	u3377
  6386  0F58  2F59               	nop2
  6387  0F59  0008               	return
  6388  0F5A                     __end_of_Lcd_Command:	
  6389                           
  6390                           	psect	text28
  6391  0F5A                     __ptext28:	
  6392 ;; *************** function _Lcd_CharCP *****************
  6393 ;; Defined at:
  6394 ;;		line 113 in file "lcd_hd44780.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;  c               1    wreg     unsigned char 
  6397 ;; Auto vars:     Size  Location     Type
  6398 ;;  c               1    2[COMMON] unsigned char 
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  1    wreg      void 
  6401 ;; Registers used:
  6402 ;;		wreg, status,2, status,0
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6408 ;;      Params:         0       0       0       0       0
  6409 ;;      Locals:         1       0       0       0       0
  6410 ;;      Temps:          2       0       0       0       0
  6411 ;;      Totals:         3       0       0       0       0
  6412 ;;Total ram usage:        3 bytes
  6413 ;; Hardware stack levels used:    1
  6414 ;; This function calls:
  6415 ;;		Nothing
  6416 ;; This function is called by:
  6417 ;;		_Lcd_Text
  6418 ;;		_Lcd_ConstText
  6419 ;;		_Lcd_WriteChar
  6420 ;; This function uses a non-reentrant model
  6421 ;;
  6422                           
  6423                           
  6424                           ;psect for function _Lcd_CharCP
  6425  0F5A                     _Lcd_CharCP:	
  6426                           
  6427                           ;incstack = 0
  6428                           ; Regs used in _Lcd_CharCP: [wreg+status,2+status,0]
  6429                           ;Lcd_CharCP@c stored from wreg
  6430  0F5A  00F2               	movwf	Lcd_CharCP@c
  6431                           
  6432                           ;lcd_hd44780.c: 114: PORTCbits.RC4 = 0; PORTCbits.RC5 = 1;
  6433  0F5B  1283               	bcf	3,5	;RP0=0, select bank0
  6434  0F5C  1303               	bcf	3,6	;RP1=0, select bank0
  6435  0F5D  1207               	bcf	7,4	;volatile
  6436  0F5E  1687               	bsf	7,5	;volatile
  6437                           
  6438                           ;lcd_hd44780.c: 115: PORTCbits.RC0 = (unsigned char)((c & 0b10000000)>>7); PORTCbits.RC6
      +                           = (unsigned char)((c & 0b01000000)>>6);
  6439  0F5F  0872               	movf	Lcd_CharCP@c,w
  6440  0F60  00F0               	movwf	??_Lcd_CharCP
  6441  0F61  3007               	movlw	7
  6442  0F62                     u1775:	
  6443  0F62  1003               	clrc
  6444  0F63  0CF0               	rrf	??_Lcd_CharCP,f
  6445  0F64  3EFF               	addlw	-1
  6446  0F65  1D03               	skipz
  6447  0F66  2F62               	goto	u1775
  6448  0F67  3001               	movlw	1
  6449  0F68  0570               	andwf	??_Lcd_CharCP,w
  6450  0F69  00F1               	movwf	??_Lcd_CharCP+1
  6451  0F6A  0807               	movf	7,w	;volatile
  6452  0F6B  0671               	xorwf	??_Lcd_CharCP+1,w
  6453  0F6C  39FE               	andlw	-2
  6454  0F6D  0671               	xorwf	??_Lcd_CharCP+1,w
  6455  0F6E  0087               	movwf	7	;volatile
  6456  0F6F  0872               	movf	Lcd_CharCP@c,w
  6457  0F70  00F0               	movwf	??_Lcd_CharCP
  6458  0F71  3006               	movlw	6
  6459  0F72                     u1785:	
  6460  0F72  1003               	clrc
  6461  0F73  0CF0               	rrf	??_Lcd_CharCP,f
  6462  0F74  3EFF               	addlw	-1
  6463  0F75  1D03               	skipz
  6464  0F76  2F72               	goto	u1785
  6465  0F77  0870               	movf	??_Lcd_CharCP,w
  6466  0F78  3901               	andlw	1
  6467  0F79  00F1               	movwf	??_Lcd_CharCP+1
  6468  0F7A  0EF1               	swapf	??_Lcd_CharCP+1,f
  6469  0F7B  0DF1               	rlf	??_Lcd_CharCP+1,f
  6470  0F7C  0DF1               	rlf	??_Lcd_CharCP+1,f
  6471  0F7D  0807               	movf	7,w	;volatile
  6472  0F7E  0671               	xorwf	??_Lcd_CharCP+1,w
  6473  0F7F  39BF               	andlw	-65
  6474  0F80  0671               	xorwf	??_Lcd_CharCP+1,w
  6475  0F81  0087               	movwf	7	;volatile
  6476                           
  6477                           ;lcd_hd44780.c: 116: PORTCbits.RC7 = (unsigned char)((c & 0b00100000)>>5); PORTCbits.RC3
      +                           = (unsigned char)((c & 0b00010000)>>4);
  6478  0F82  0872               	movf	Lcd_CharCP@c,w
  6479  0F83  00F0               	movwf	??_Lcd_CharCP
  6480  0F84  3005               	movlw	5
  6481  0F85                     u1795:	
  6482  0F85  1003               	clrc
  6483  0F86  0CF0               	rrf	??_Lcd_CharCP,f
  6484  0F87  3EFF               	addlw	-1
  6485  0F88  1D03               	skipz
  6486  0F89  2F85               	goto	u1795
  6487  0F8A  0870               	movf	??_Lcd_CharCP,w
  6488  0F8B  3901               	andlw	1
  6489  0F8C  00F1               	movwf	??_Lcd_CharCP+1
  6490  0F8D  0CF1               	rrf	??_Lcd_CharCP+1,f
  6491  0F8E  0CF1               	rrf	??_Lcd_CharCP+1,f
  6492  0F8F  0807               	movf	7,w	;volatile
  6493  0F90  0671               	xorwf	??_Lcd_CharCP+1,w
  6494  0F91  397F               	andlw	-129
  6495  0F92  0671               	xorwf	??_Lcd_CharCP+1,w
  6496  0F93  0087               	movwf	7	;volatile
  6497  0F94  0872               	movf	Lcd_CharCP@c,w
  6498  0F95  00F0               	movwf	??_Lcd_CharCP
  6499  0F96  3004               	movlw	4
  6500  0F97                     u1805:	
  6501  0F97  1003               	clrc
  6502  0F98  0CF0               	rrf	??_Lcd_CharCP,f
  6503  0F99  3EFF               	addlw	-1
  6504  0F9A  1D03               	skipz
  6505  0F9B  2F97               	goto	u1805
  6506  0F9C  0870               	movf	??_Lcd_CharCP,w
  6507  0F9D  3901               	andlw	1
  6508  0F9E  00F1               	movwf	??_Lcd_CharCP+1
  6509  0F9F  0DF1               	rlf	??_Lcd_CharCP+1,f
  6510  0FA0  0DF1               	rlf	??_Lcd_CharCP+1,f
  6511  0FA1  0DF1               	rlf	??_Lcd_CharCP+1,f
  6512  0FA2  0807               	movf	7,w	;volatile
  6513  0FA3  0671               	xorwf	??_Lcd_CharCP+1,w
  6514  0FA4  39F7               	andlw	-9
  6515  0FA5  0671               	xorwf	??_Lcd_CharCP+1,w
  6516  0FA6  0087               	movwf	7	;volatile
  6517                           
  6518                           ;lcd_hd44780.c: 118: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(20000000/4000000.0))
      +                          ); PORTCbits.RC4 = 0;
  6519  0FA7  1607               	bsf	7,4	;volatile
  6520  0FA8  3008               	movlw	8
  6521  0FA9  00F0               	movwf	??_Lcd_CharCP
  6522  0FAA                     u3387:	
  6523  0FAA  0BF0               	decfsz	??_Lcd_CharCP,f
  6524  0FAB  2FAA               	goto	u3387
  6525  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  6526  0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  6527  0FAE  1207               	bcf	7,4	;volatile
  6528                           
  6529                           ;lcd_hd44780.c: 119: PORTCbits.RC0 = (unsigned char)((c & 0b00001000)>>3); PORTCbits.RC6
      +                           = (unsigned char)((c & 0b00000100)>>2);
  6530  0FAF  0872               	movf	Lcd_CharCP@c,w
  6531  0FB0  00F0               	movwf	??_Lcd_CharCP
  6532  0FB1  3003               	movlw	3
  6533  0FB2                     u1815:	
  6534  0FB2  1003               	clrc
  6535  0FB3  0CF0               	rrf	??_Lcd_CharCP,f
  6536  0FB4  3EFF               	addlw	-1
  6537  0FB5  1D03               	skipz
  6538  0FB6  2FB2               	goto	u1815
  6539  0FB7  3001               	movlw	1
  6540  0FB8  0570               	andwf	??_Lcd_CharCP,w
  6541  0FB9  00F1               	movwf	??_Lcd_CharCP+1
  6542  0FBA  0807               	movf	7,w	;volatile
  6543  0FBB  0671               	xorwf	??_Lcd_CharCP+1,w
  6544  0FBC  39FE               	andlw	-2
  6545  0FBD  0671               	xorwf	??_Lcd_CharCP+1,w
  6546  0FBE  0087               	movwf	7	;volatile
  6547  0FBF  0872               	movf	Lcd_CharCP@c,w
  6548  0FC0  00F0               	movwf	??_Lcd_CharCP
  6549  0FC1  3002               	movlw	2
  6550  0FC2                     u1825:	
  6551  0FC2  1003               	clrc
  6552  0FC3  0CF0               	rrf	??_Lcd_CharCP,f
  6553  0FC4  3EFF               	addlw	-1
  6554  0FC5  1D03               	skipz
  6555  0FC6  2FC2               	goto	u1825
  6556  0FC7  0870               	movf	??_Lcd_CharCP,w
  6557  0FC8  3901               	andlw	1
  6558  0FC9  00F1               	movwf	??_Lcd_CharCP+1
  6559  0FCA  0EF1               	swapf	??_Lcd_CharCP+1,f
  6560  0FCB  0DF1               	rlf	??_Lcd_CharCP+1,f
  6561  0FCC  0DF1               	rlf	??_Lcd_CharCP+1,f
  6562  0FCD  0807               	movf	7,w	;volatile
  6563  0FCE  0671               	xorwf	??_Lcd_CharCP+1,w
  6564  0FCF  39BF               	andlw	-65
  6565  0FD0  0671               	xorwf	??_Lcd_CharCP+1,w
  6566  0FD1  0087               	movwf	7	;volatile
  6567                           
  6568                           ;lcd_hd44780.c: 120: PORTCbits.RC7 = (unsigned char)((c & 0b00000010)>>1); PORTCbits.RC3
      +                           = (unsigned char)((c & 0b00000001));
  6569  0FD2  0872               	movf	Lcd_CharCP@c,w
  6570  0FD3  00F0               	movwf	??_Lcd_CharCP
  6571  0FD4  1003               	clrc
  6572  0FD5  0C70               	rrf	??_Lcd_CharCP,w
  6573  0FD6  3901               	andlw	1
  6574  0FD7  00F1               	movwf	??_Lcd_CharCP+1
  6575  0FD8  0CF1               	rrf	??_Lcd_CharCP+1,f
  6576  0FD9  0CF1               	rrf	??_Lcd_CharCP+1,f
  6577  0FDA  0807               	movf	7,w	;volatile
  6578  0FDB  0671               	xorwf	??_Lcd_CharCP+1,w
  6579  0FDC  397F               	andlw	-129
  6580  0FDD  0671               	xorwf	??_Lcd_CharCP+1,w
  6581  0FDE  0087               	movwf	7	;volatile
  6582  0FDF  0872               	movf	Lcd_CharCP@c,w
  6583  0FE0  3901               	andlw	1
  6584  0FE1  00F0               	movwf	??_Lcd_CharCP
  6585  0FE2  0DF0               	rlf	??_Lcd_CharCP,f
  6586  0FE3  0DF0               	rlf	??_Lcd_CharCP,f
  6587  0FE4  0DF0               	rlf	??_Lcd_CharCP,f
  6588  0FE5  0807               	movf	7,w	;volatile
  6589  0FE6  0670               	xorwf	??_Lcd_CharCP,w
  6590  0FE7  39F7               	andlw	-9
  6591  0FE8  0670               	xorwf	??_Lcd_CharCP,w
  6592  0FE9  0087               	movwf	7	;volatile
  6593                           
  6594                           ;lcd_hd44780.c: 122: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(20000000/4000000.0))
      +                          ); PORTCbits.RC4 = 0;
  6595  0FEA  1607               	bsf	7,4	;volatile
  6596  0FEB  3008               	movlw	8
  6597  0FEC  00F0               	movwf	??_Lcd_CharCP
  6598  0FED                     u3397:	
  6599  0FED  0BF0               	decfsz	??_Lcd_CharCP,f
  6600  0FEE  2FED               	goto	u3397
  6601  0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  6602  0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  6603  0FF1  1207               	bcf	7,4	;volatile
  6604                           
  6605                           ;lcd_hd44780.c: 123: _delay((unsigned long)((5)*(20000000/4000000.0))); _delay((unsigned
      +                           long)((5500)*(20000000/4000000.0)));
  6606  0FF2  3008               	movlw	8
  6607  0FF3  00F0               	movwf	??_Lcd_CharCP
  6608  0FF4                     u3407:	
  6609  0FF4  0BF0               	decfsz	??_Lcd_CharCP,f
  6610  0FF5  2FF4               	goto	u3407
  6611  0FF6  3024               	movlw	36
  6612  0FF7  00F1               	movwf	??_Lcd_CharCP+1
  6613  0FF8  30B5               	movlw	181
  6614  0FF9  00F0               	movwf	??_Lcd_CharCP
  6615  0FFA                     u3417:	
  6616  0FFA  0BF0               	decfsz	??_Lcd_CharCP,f
  6617  0FFB  2FFA               	goto	u3417
  6618  0FFC  0BF1               	decfsz	??_Lcd_CharCP+1,f
  6619  0FFD  2FFA               	goto	u3417
  6620  0FFE  2FFF               	nop2
  6621  0FFF  0008               	return
  6622  1000                     __end_of_Lcd_CharCP:	
  6623                           
  6624                           	psect	text29
  6625  094E                     __ptext29:	
  6626 ;; *************** function _Digital_Initialize *****************
  6627 ;; Defined at:
  6628 ;;		line 208 in file "main.c"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;		None
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;		None
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  1    wreg      void 
  6635 ;; Registers used:
  6636 ;;		None
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6642 ;;      Params:         0       0       0       0       0
  6643 ;;      Locals:         0       0       0       0       0
  6644 ;;      Temps:          0       0       0       0       0
  6645 ;;      Totals:         0       0       0       0       0
  6646 ;;Total ram usage:        0 bytes
  6647 ;; Hardware stack levels used:    1
  6648 ;; This function calls:
  6649 ;;		Nothing
  6650 ;; This function is called by:
  6651 ;;		_main
  6652 ;; This function uses a non-reentrant model
  6653 ;;
  6654                           
  6655                           
  6656                           ;psect for function _Digital_Initialize
  6657  094E                     _Digital_Initialize:	
  6658                           
  6659                           ;main.c: 210: TRISBbits.TRISB0 = 1;
  6660                           
  6661                           ;incstack = 0
  6662                           ; Regs used in _Digital_Initialize: []
  6663  094E  1683               	bsf	3,5	;RP0=1, select bank1
  6664  094F  1303               	bcf	3,6	;RP1=0, select bank1
  6665  0950  1406               	bsf	6,0	;volatile
  6666                           
  6667                           ;main.c: 211: TRISBbits.TRISB1 = 1;
  6668  0951  1486               	bsf	6,1	;volatile
  6669                           
  6670                           ;main.c: 212: TRISBbits.TRISB2 = 1;
  6671  0952  1506               	bsf	6,2	;volatile
  6672                           
  6673                           ;main.c: 213: TRISBbits.TRISB3 = 1;
  6674  0953  1586               	bsf	6,3	;volatile
  6675                           
  6676                           ;main.c: 216: TRISDbits.TRISD2 = 0;
  6677  0954  1108               	bcf	8,2	;volatile
  6678                           
  6679                           ;main.c: 217: TRISDbits.TRISD3 = 0;
  6680  0955  1188               	bcf	8,3	;volatile
  6681                           
  6682                           ;main.c: 218: TRISDbits.TRISD4 = 0;
  6683  0956  1208               	bcf	8,4	;volatile
  6684                           
  6685                           ;main.c: 219: TRISDbits.TRISD5 = 0;
  6686  0957  1288               	bcf	8,5	;volatile
  6687                           
  6688                           ;main.c: 220: PORTDbits.RD2 = 1;
  6689  0958  1283               	bcf	3,5	;RP0=0, select bank0
  6690  0959  1303               	bcf	3,6	;RP1=0, select bank0
  6691  095A  1508               	bsf	8,2	;volatile
  6692                           
  6693                           ;main.c: 221: PORTDbits.RD3 = 0;
  6694  095B  1188               	bcf	8,3	;volatile
  6695                           
  6696                           ;main.c: 222: PORTDbits.RD4 = 0;
  6697  095C  1208               	bcf	8,4	;volatile
  6698                           
  6699                           ;main.c: 223: PORTDbits.RD5 = 1;
  6700  095D  1688               	bsf	8,5	;volatile
  6701                           
  6702                           ;main.c: 226: TRISDbits.TRISD0 = 0;
  6703  095E  1683               	bsf	3,5	;RP0=1, select bank1
  6704  095F  1303               	bcf	3,6	;RP1=0, select bank1
  6705  0960  1008               	bcf	8,0	;volatile
  6706                           
  6707                           ;main.c: 227: TRISDbits.TRISD1 = 0;
  6708  0961  1088               	bcf	8,1	;volatile
  6709                           
  6710                           ;main.c: 228: PORTDbits.RD0 = 0;
  6711  0962  1283               	bcf	3,5	;RP0=0, select bank0
  6712  0963  1303               	bcf	3,6	;RP1=0, select bank0
  6713  0964  1008               	bcf	8,0	;volatile
  6714                           
  6715                           ;main.c: 229: PORTDbits.RD1 = 0;
  6716  0965  1088               	bcf	8,1	;volatile
  6717                           
  6718                           ;main.c: 232: TRISAbits.TRISA5 = 0;
  6719  0966  1683               	bsf	3,5	;RP0=1, select bank1
  6720  0967  1303               	bcf	3,6	;RP1=0, select bank1
  6721  0968  1285               	bcf	5,5	;volatile
  6722                           
  6723                           ;main.c: 233: PORTAbits.RA5 = 0;
  6724  0969  1283               	bcf	3,5	;RP0=0, select bank0
  6725  096A  1303               	bcf	3,6	;RP1=0, select bank0
  6726  096B  1285               	bcf	5,5	;volatile
  6727                           
  6728                           ;main.c: 236: TRISBbits.TRISB4 = 0;
  6729  096C  1683               	bsf	3,5	;RP0=1, select bank1
  6730  096D  1303               	bcf	3,6	;RP1=0, select bank1
  6731  096E  1206               	bcf	6,4	;volatile
  6732                           
  6733                           ;main.c: 237: PORTBbits.RB4 = 0;
  6734  096F  1283               	bcf	3,5	;RP0=0, select bank0
  6735  0970  1303               	bcf	3,6	;RP1=0, select bank0
  6736  0971  1206               	bcf	6,4	;volatile
  6737                           
  6738                           ;main.c: 240: TRISBbits.TRISB5 = 0;
  6739  0972  1683               	bsf	3,5	;RP0=1, select bank1
  6740  0973  1303               	bcf	3,6	;RP1=0, select bank1
  6741  0974  1286               	bcf	6,5	;volatile
  6742                           
  6743                           ;main.c: 241: PORTBbits.RB5 = 0;
  6744  0975  1283               	bcf	3,5	;RP0=0, select bank0
  6745  0976  1303               	bcf	3,6	;RP1=0, select bank0
  6746  0977  1286               	bcf	6,5	;volatile
  6747  0978  0008               	return
  6748  0979                     __end_of_Digital_Initialize:	
  6749                           
  6750                           	psect	text30
  6751  0009                     __ptext30:	
  6752 ;; *************** function _ADC_Initialize *****************
  6753 ;; Defined at:
  6754 ;;		line 244 in file "main.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;		None
  6757 ;; Auto vars:     Size  Location     Type
  6758 ;;		None
  6759 ;; Return value:  Size  Location     Type
  6760 ;;                  1    wreg      void 
  6761 ;; Registers used:
  6762 ;;		None
  6763 ;; Tracked objects:
  6764 ;;		On entry : 0/0
  6765 ;;		On exit  : 0/0
  6766 ;;		Unchanged: 0/0
  6767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6768 ;;      Params:         0       0       0       0       0
  6769 ;;      Locals:         0       0       0       0       0
  6770 ;;      Temps:          0       0       0       0       0
  6771 ;;      Totals:         0       0       0       0       0
  6772 ;;Total ram usage:        0 bytes
  6773 ;; Hardware stack levels used:    1
  6774 ;; This function calls:
  6775 ;;		Nothing
  6776 ;; This function is called by:
  6777 ;;		_main
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           
  6782                           ;psect for function _ADC_Initialize
  6783  0009                     _ADC_Initialize:	
  6784                           
  6785                           ;main.c: 245: ADCON0bits.ADCS0 = 1;
  6786                           
  6787                           ;incstack = 0
  6788                           ; Regs used in _ADC_Initialize: []
  6789  0009  1283               	bcf	3,5	;RP0=0, select bank0
  6790  000A  1303               	bcf	3,6	;RP1=0, select bank0
  6791  000B  171F               	bsf	31,6	;volatile
  6792                           
  6793                           ;main.c: 246: ADCON0bits.ADON = 1;
  6794  000C  141F               	bsf	31,0	;volatile
  6795                           
  6796                           ;main.c: 247: ADCON1bits.ADFM = 1;
  6797  000D  1683               	bsf	3,5	;RP0=1, select bank1
  6798  000E  1303               	bcf	3,6	;RP1=0, select bank1
  6799  000F  179F               	bsf	31,7	;volatile
  6800                           
  6801                           ;main.c: 248: ADCON1bits.ADCS2 = 1;
  6802  0010  171F               	bsf	31,6	;volatile
  6803  0011  0008               	return
  6804  0012                     __end_of_ADC_Initialize:	
  6805  007E                     btemp	set	126	;btemp
  6806  007E                     wtemp0	set	126


Data Sizes:
    Strings     302
    Constant    10
    Data        5
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80      4      33
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_12(CODE[11]), STR_8(CODE[17]), STR_7(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> aux(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Text@buffer	PTR unsigned char  size(2) Largest target is 23
		 -> STR_38(CODE[11]), STR_37(CODE[16]), STR_36(CODE[13]), STR_35(CODE[14]), 
		 -> STR_34(CODE[17]), STR_33(CODE[13]), STR_32(CODE[14]), STR_31(CODE[14]), 
		 -> STR_30(CODE[16]), STR_29(CODE[14]), STR_28(CODE[14]), STR_27(CODE[14]), 
		 -> STR_26(CODE[16]), STR_25(CODE[13]), STR_24(CODE[15]), STR_23(CODE[14]), 
		 -> STR_22(CODE[16]), STR_21(CODE[13]), STR_20(CODE[14]), STR_19(CODE[15]), 
		 -> STR_18(CODE[7]), STR_17(CODE[8]), STR_16(CODE[15]), STR_15(CODE[6]), 
		 -> STR_14(CODE[9]), STR_13(CODE[15]), STR_11(CODE[22]), STR_10(CODE[23]), 
		 -> STR_9(CODE[23]), aux(BANK1[20]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[11]), STR_3(CODE[21]), STR_2(CODE[9]), STR_1(CODE[20]), 


Critical Paths under _main in COMMON

    _lavadoNormal->_MensajeFinalizado
    _llenadoAgua->_Lcd_Text
    ___wmul->___awdiv
    _PWM_Duty->___altoft
    ___lwtoft->___ftpack
    ___fttol->___altoft
    ___ftmul->___altoft
    ___ftdiv->___lwtoft
    ___altoft->___aldiv
    _MensajeFinalizado->_Lcd_Text
    _PWM_Initialize->___aldiv
    _Lcd_Init->_Lcd_Command
    _ImprimirMenuPrincipal->_Lcd_Text
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Text->_Lcd_CharCP
    _Lcd_Text->_Lcd_Command

Critical Paths under _main in BANK0

    _main->_lavadoNormal
    _lavadoNormal->_SacaraAgua
    _reversa->_PWM_Duty
    _SacaraAgua->_normal
    _normal->_PWM_Duty
    _PWM_Duty->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___altoft->___aldiv
    _PWM_Initialize->___aldiv
    _ImprimirMenuLavado->_sprintf
    _sprintf->___wmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0  120415
                                             77 BANK0      3     3      0
                                              0 BANK1      4     4      0
                     _ADC_Initialize
                 _Digital_Initialize
                 _ImprimirMenuLavado
              _ImprimirMenuPrincipal
                        _Lcd_Command
                           _Lcd_Init
                           _Lcd_Text
                           _PWM_Duty
                     _PWM_Initialize
                             _Puerta
                       _lavadoNormal
 ---------------------------------------------------------------------------------
 (1) _lavadoNormal                                        11    11      0   89193
                                             66 BANK0     11    11      0
                        _Lcd_Command
                           _Lcd_Text
                  _MensajeFinalizado
                         _SacaraAgua
                            ___awdiv
                             ___wmul
                        _llenadoAgua
                             _normal
                            _reversa
 ---------------------------------------------------------------------------------
 (2) _reversa                                              8     4      4   20209
                                             52 BANK0      8     4      4
                           _Lcd_Text
                           _PWM_Duty
                            ___awdiv
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _llenadoAgua                                          0     0      0    5723
                           _ADC_Read
                        _Lcd_Command
                           _Lcd_Text
 ---------------------------------------------------------------------------------
 (2) _SacaraAgua                                           6     2      4   28741
                                             60 BANK0      6     2      4
                           _ADC_Read
                        _Lcd_Command
                           _Lcd_Text
                            ___awdiv
                             ___wmul
                             _normal
 ---------------------------------------------------------------------------------
 (2) _normal                                               8     4      4   20337
                                             52 BANK0      8     4      4
                           _Lcd_Text
                           _PWM_Duty
                            ___awdiv
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     860
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1580
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _PWM_Duty                                             6     4      2   10647
                                             46 BANK0      6     4      2
                            ___aldiv
                           ___altoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2156
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     316
                                             32 BANK0     14    10      4
                            ___aldiv (ARG)
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2524
                                             16 BANK0     16    10      6
                            ___aldiv (ARG)
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6    2478
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    2272
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2070
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (3) _ADC_Read                                             5     3      2      22
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _MensajeFinalizado                                    5     5      0    5747
                                              9 COMMON     5     5      0
                        _Lcd_Command
                           _Lcd_Text
 ---------------------------------------------------------------------------------
 (1) _Puerta                                               2     0      2     150
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PWM_Initialize                                       4     4      0     556
                                              9 COMMON     4     4      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     556
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0     314
                                              3 COMMON     3     3      0
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (1) _ImprimirMenuPrincipal                                2     0      2    6131
                                              9 COMMON     2     0      2
                        _Lcd_Command
                           _Lcd_Text
 ---------------------------------------------------------------------------------
 (1) _ImprimirMenuLavado                                   2     0      2    7273
                                             20 BANK0      2     0      2
                        _Lcd_Command
                           _Lcd_Text
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             26    18      8    1336
                                              2 BANK0     18    10      8
                            ___awdiv (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     287
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _Lcd_Text                                             6     3      3    5525
                                              3 COMMON     6     3      3
                         _Lcd_CharCP
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (4) _Lcd_Command                                          3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _Lcd_CharCP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Digital_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _Digital_Initialize
   _ImprimirMenuLavado
     _Lcd_Command
     _Lcd_Text
       _Lcd_CharCP
       _Lcd_Command
     _sprintf
       ___awdiv (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
   _ImprimirMenuPrincipal
     _Lcd_Command
     _Lcd_Text
       _Lcd_CharCP
       _Lcd_Command
   _Lcd_Command
   _Lcd_Init
     _Lcd_Command
   _Lcd_Text
     _Lcd_CharCP
     _Lcd_Command
   _PWM_Duty
     ___aldiv
     ___altoft
       ___aldiv (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___aldiv (ARG)
       ___altoft (ARG)
         ___aldiv (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___aldiv (ARG)
       ___altoft (ARG)
         ___aldiv (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___aldiv (ARG)
         ___altoft (ARG)
           ___aldiv (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _PWM_Initialize
     ___aldiv
   _Puerta
   _lavadoNormal
     _Lcd_Command
     _Lcd_Text
       _Lcd_CharCP
       _Lcd_Command
     _MensajeFinalizado
       _Lcd_Command
       _Lcd_Text
         _Lcd_CharCP
         _Lcd_Command
     _SacaraAgua
       _ADC_Read
       _Lcd_Command
       _Lcd_Text
         _Lcd_CharCP
         _Lcd_Command
       ___awdiv
       ___wmul
         ___awdiv (ARG)
       _normal
         _Lcd_Text
           _Lcd_CharCP
           _Lcd_Command
         _PWM_Duty
           ___aldiv
           ___altoft
             ___aldiv (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___aldiv (ARG)
             ___altoft (ARG)
               ___aldiv (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___fttol
             ___aldiv (ARG)
             ___altoft (ARG)
               ___aldiv (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___aldiv (ARG)
               ___altoft (ARG)
                 ___aldiv (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
         ___awdiv
         ___wmul
           ___awdiv (ARG)
         _sprintf
           ___awdiv (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
     ___awdiv
     ___wmul
       ___awdiv (ARG)
     _llenadoAgua
       _ADC_Read
       _Lcd_Command
       _Lcd_Text
         _Lcd_CharCP
         _Lcd_Command
     _normal
       _Lcd_Text
         _Lcd_CharCP
         _Lcd_Command
       _PWM_Duty
         ___aldiv
         ___altoft
           ___aldiv (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___aldiv (ARG)
           ___altoft (ARG)
             ___aldiv (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           ___aldiv (ARG)
           ___altoft (ARG)
             ___aldiv (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___aldiv (ARG)
             ___altoft (ARG)
               ___aldiv (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft
           ___ftpack
       ___awdiv
       ___wmul
         ___awdiv (ARG)
       _sprintf
         ___awdiv (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
     _reversa
       _Lcd_Text
         _Lcd_CharCP
         _Lcd_Command
       _PWM_Duty
         ___aldiv
         ___altoft
           ___aldiv (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___aldiv (ARG)
           ___altoft (ARG)
             ___aldiv (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           ___aldiv (ARG)
           ___altoft (ARG)
             ___aldiv (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___aldiv (ARG)
             ___altoft (ARG)
               ___aldiv (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft
           ___ftpack
       ___awdiv
       ___wmul
         ___awdiv (ARG)
       _sprintf
         ___awdiv (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      4      21       7       41.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      7F      12        0.0%
ABS                  0      0      7F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Dec 14 13:08:14 2020

                  ___altoft@exp 007B                               pc 0002         __size_of_PWM_Initialize 004F  
                   __CFG_CP$OFF 0000                   ___altoft@sign 007C                              l13 01BF  
                            l14 01EA                    ___awdiv@sign 0076                              fsr 0004  
           ___wmul@multiplicand 007B                             l200 060D                             l215 173C  
                           l240 17A1                             l163 06CB                             l180 079F  
                           l172 077E                             l164 06D9                             l229 17C5  
                           l443 0E3B                             l640 0E0F                             l556 0B78  
                           l388 1765                             l557 0B80                             l549 0B63  
                           _PR2 0092                    __CFG_CPD$OFF 0000                             _aux 00A4  
                           fsr0 0004                             indf 0000                    __CFG_FOSC$HS 0000  
           __end_of_Lcd_Command 0F5A                    __CFG_LVP$OFF 0000                    ___ftdiv@cntr 002A  
                  ___ftdiv@sign 002F                            l2000 0A62                            l2020 0332  
                          l2110 0AFF                            l2008 00AD                            l2120 0B20  
                          l2042 036B                            l2026 034E                            l2036 0365  
                          l2300 049F                            l2124 0B28                            l2116 0B15  
                          l2108 0AF1                            l2062 03A3                            l2054 039F  
                          l2048 0390                            l2064 030C                            l2072 175B  
                          l2152 1790                            l2066 03E8                            l2306 04D9  
                          l2170 0CA4                            l2092 0ADE                            l2180 0CCF  
                          l2172 0CB2                            l2318 0D66                            l2182 0CF5  
                          l2334 0522                            l2430 067C                            l1800 00D3  
                          l2184 0D02                            l2344 056D                            l2520 07B4  
                          l2098 0AE9                            l2346 0593                            l2514 07A2  
                          l1660 0B3C                            l1820 012E                            l2356 05C2  
                          l2364 0549                            l2372 0631                            l2508 078F  
                          l2452 06AB                            l2294 0465                            l1670 0B68  
                          l1662 0B48                            l1806 00E9                            l1910 0DE7  
                          l2358 05E8                            l2470 06E7                            l2454 06B9  
                          l2288 042C                            l1672 0B72                            l1664 0B4D  
                          l1656 0B35                            l1920 0E12                            l1912 0DF7  
                          l2528 07CC                            l2448 0696                            l1770 0EA1  
                          l1842 024A                            l2490 073D                            l2474 06FC  
                          l2466 06D1                            l1940 098F                            l1756 0E5C  
                          l1748 0E4C                            l1828 014D                            l1860 029F  
                          l1924 0E20                            l2476 070A                            l1950 09B0  
                          l1774 0EAF                            l1766 0E94                            l1758 0E6C  
                          l1790 09DD                            l1918 0E04                            l1872 02C7  
                          l1864 02AF                            l1848 0260                            l1946 09A5  
                          l1938 0981                            l1962 17D4                            l1964 17E2  
                          l1972 17FB                            l1788 09CB                            l1876 02D7  
                          l1892 0DB5                            l1982 0A3F                            l1984 0A42  
                          l1992 0A4E                            l1968 17F0                            l1986 0A45  
                          l1994 0A5C                            l1988 0A48                            STR_1 089F  
                          STR_2 0931                            STR_3 088A                            STR_4 0910  
                          STR_5 0860                            STR_6 0875                            STR_7 08B3  
                          STR_8 08B3                            STR_9 0833                            u2005 012F  
                          u2015 0140                            u2025 014E                            u2105 02B0  
                          u2115 02B8                            u2065 026C                            u2225 0DE8  
                          u2315 0990                            u2155 02D8                            u2075 027E  
                          u2325 099C                            u2165 02E0                            u2335 09A6  
                          u1615 0B41                            u2255 0E06                            u3207 05B0  
                          u2440 00AA                            u3217 0605                            u1715 0EC0  
                          u3307 01B4                            u3227 17BD                            u1635 0B5C  
                          u2195 0DBC                            u2435 0060                            u1805 0F97  
                          u1725 0ED0                            u2365 17D7                            u3317 01CF  
                          u3237 0A1F                            u3407 0FF4                            u1815 0FB2  
                          u1735 0EE3                            u2295 0984                            u3327 01DD  
                          u3247 0A2F                            u1655 0B6B                            u2615 0AF4  
                          u3417 0FFA                            u1825 0FC2                            u1745 0EF5  
                          u2385 17E8                            u3337 01FA                            u3257 0187  
                          u1905 0E95                            u3177 064E                            u1755 0F10  
                          u2395 17F1                            u3347 0208                            u3267 0190  
                          u2635 0B00                            u2555 1766                            u3187 06B3  
                          u1765 0F20                            u3357 0F08                            u3277 0199  
                          u2645 0B0C                            u2565 176D                            u3197 0704  
                          u1775 0F62                            u3367 0F4B                            u2495 0386  
                          u3287 01A2                            u1695 0B87                            u2655 0B16  
                          u2735 0D0D                            u1785 0F72                            u3377 0F54  
                          u3297 01AB                            u1865 0E60                            u2745 0A14  
                          u1945 09D0                            u3387 0FAA                            u1795 0F85  
                          u2915 0554                            u3397 0FED                            u1885 0E6E  
                          u2685 17AF                            u2925 062F                            u1895 0E83  
                          u2785 0AA0                            u1985 00FB                            u2795 0AA9  
                          u1995 010D                            u2885 0520                    __CFG_WRT$OFF 0000  
                          _main 0635                    ___ftpack@arg 0070                    ___ftpack@exp 0073  
                          btemp 007E                __end_of_ADC_Read 17CE                   __CFG_BOREN$ON 0000  
                          start 0000                    ___ftmul@cntr 003E                    ___ftmul@sign 003F  
                    _Lcd_CharCP 0F5A                    ___fttol@exp1 004D                    ___fttol@lval 0049  
            _Digital_Initialize 094E                _lavadoNormal$417 0065                _lavadoNormal$418 0067  
               __end_of___aldiv 0EB8                           ?_main 0070                           _CCP1X 00BD  
                         _CCP1Y 00BC                 __end_of___awdiv 0B2D                           STR_10 081C  
                         STR_11 084A                           STR_20 08F4                           STR_12 0926  
                         STR_21 0903                           STR_13 08D5                           STR_30 08C5  
                         STR_22 08C5                           STR_14 093A                           STR_31 08E5  
                         STR_23 08E5                           STR_15 0944                           STR_16 08D5  
                         STR_32 08F4                           STR_24 08F3                           STR_33 0903  
                         STR_25 0903                           STR_17 093B                   __CFG_WDTE$OFF 0000  
                         STR_26 08C5                           STR_18 0943                           STR_34 08C4  
                         STR_27 08E5                           STR_35 08F4                           STR_19 08E4  
                         STR_28 08F4                           STR_36 0903                           STR_37 08C5  
                         STR_29 0902                           STR_38 091B                 __end_of___ftdiv 0173  
               __end_of___ftmul 0305                 ___awdiv@divisor 0070                 __end_of___fttol 0E29  
               __end_of___lwdiv 09B5                 __end_of___lwmod 1800                 ___awdiv@counter 0075  
                  ?_llenadoAgua 0070                           _TRISC 0087              _ImprimirMenuLavado 0D13  
           ?_Digital_Initialize 0070                   __CFG_PWRTE$ON 0000                   ?_lavadoNormal 0070  
               __end_of_dpowers 081C                   ___ftpack@sign 0074             ?_ImprimirMenuLavado 0034  
                         pclath 000A                __end_of_PWM_Duty 00BB                 __end_of_reversa 0C8F  
                         status 0003                           wtemp0 007E                 __end_of_sprintf 03ED  
          ??_Digital_Initialize 0070                __end_of_Lcd_Init 0232                __end_of_Lcd_Text 0A85  
               SacaraAgua@count 005C                     SacaraAgua@i 005E                 __initialization 07D5  
                  __end_of_main 07D5                      _SacaraAgua 0C8F            ??_ImprimirMenuLavado 007E  
                   _Lcd_Command 0EB8                          ??_main 006D                   ___fttol@sign1 0048  
                ??_lavadoNormal 0062                          _ADCON0 001F                          _CCP1M2 00BA  
                        _CCP1M3 00BB                __end_of___altoft 09F7                          _ADRESH 001E  
                        _ADRESL 009E                          _CCPR1L 0015                ___awdiv@dividend 0072  
              __end_of___ftpack 0B99                __end_of___lwtoft 1757                          _TMR2ON 0092  
                Lcd_Text@buffer 0074                          _TRISC2 043A         ??_ImprimirMenuPrincipal 007B  
                        _Puerta 1731                     ?_Lcd_CharCP 0070                       ??___aldiv 0078  
                        ___wmul 1757                       ??___awdiv 0074                  _PWM_Initialize 0A85  
                     ??___ftdiv 0026                       ??___ftmul 0036                       ??___fttol 0044  
                     ??___lwdiv 0074                       ??___lwmod 007C                 ADC_Read@channel 0074  
                        _estado 00B8                ___awdiv@quotient 0077                          _normal 0B99  
                        _tiempo 00A2                          main@op 00BD           ___ftmul@f3_as_product 003B  
                     ?_ADC_Read 0070                       ??_reversa 0058                    PWM_Duty@duty 004E  
                     ??_sprintf 002A       ImprimirMenuLavado@casilla 0034              Lcd_Command@command 0072  
       __end_of__initialization 07FC                      ___altoft@c 0026                  _SacaraAgua$501 0060  
                    ___ftdiv@f1 0023                      ___ftdiv@f2 0020                      ___ftdiv@f3 002B  
                    ___ftmul@f1 0030                      ___ftmul@f2 0033          __end_of_PWM_Initialize 0AD4  
                    ___fttol@f1 0040                  __pcstackCOMMON 0070                    __pidataBANK1 0004  
                   ?_SacaraAgua 005C                 reversa@minutAux 005A                      ___lwtoft@c 0078  
                     ?_PWM_Duty 004E                      ??_ADC_Read 0072            __size_of_llenadoAgua 0027  
                     ?_Lcd_Init 0070                       ?_Lcd_Text 0073             __size_of_Lcd_CharCP 00A6  
                    __pbssBANK1 00A0            __end_of_lavadoNormal 0635                 ?_PWM_Initialize 0070  
                    __pmaintext 0635                         ?_Puerta 0070                         ?___wmul 0079  
                       _CCP1CON 0017                       ?___altoft 0026                       ?___ftpack 0070  
                       ?_normal 0054                      ??_PWM_Duty 0050         __size_of_ADC_Initialize 0009  
                       _T2CKPS0 0090                         _T2CKPS1 0091                       ?___lwtoft 0078  
                    ??_Lcd_Init 0073                      ??_Lcd_Text 0076                      __stringtab 0800  
           __size_of_SacaraAgua 0084              MensajeFinalizado@i 007C                 __size_of_Puerta 0012  
                       ___aldiv 0E29                         ___awdiv 0AD4                         ___ftdiv 00BB  
               __size_of___wmul 0027                         ___ftmul 0232                         ___fttol 0D9B  
                       ___lwdiv 0979                         ___lwmod 17CE                      ??___altoft 0079  
                    ??___ftpack 0075                    ?_Lcd_Command 0070                         __ptext1 050D  
                       __ptext2 0C14                         __ptext3 177E                         __ptext4 0C8F  
                       __ptext5 0B99                         __ptext6 1757                         __ptext7 0AD4  
                       __ptext8 0012                         __ptext9 1743                 __size_of_normal 007B  
                    ??___lwtoft 007B                         _dpowers 0812                ___aldiv@dividend 0074  
                       _reversa 0C14                         _sprintf 0305                         clrloop0 172A  
          end_of_initialization 07FC     __size_of_Digital_Initialize 002B                         normal@t 0056  
__size_of_ImprimirMenuPrincipal 0120   __end_of_ImprimirMenuPrincipal 050D                    ??_Lcd_CharCP 0070  
              ___aldiv@quotient 0022                       Lcd_Text@x 0073                       Lcd_Text@y 0077  
                  __pstringtext 0800     __size_of_ImprimirMenuLavado 0088                       _PORTAbits 0005  
                     _PORTBbits 0006                       _PORTCbits 0007             main@opcionPrincipal 00BF  
                     _PORTDbits 0008                       _TRISAbits 0085                       _TRISBbits 0086  
                     _TRISCbits 0087                       _TRISDbits 0088               __size_of_ADC_Read 0029  
            __end_of_Lcd_CharCP 1000                  normal@minutAux 005A           __size_of_lavadoNormal 0128  
                   ___ftdiv@exp 002E                     ___ftmul@exp 003A                    ??_SacaraAgua 007E  
                __end_of_Puerta 1743                   lavadoNormal@i 0069                  __end_of___wmul 177E  
                _ADC_Initialize 0009                  __end_of_normal 0C14             start_initialization 07D5  
             __size_of_PWM_Duty 00A9                    _lavadoNormal 050D               __size_of_Lcd_Init 00BF  
             __size_of_Lcd_Text 0048              __end_of_SacaraAgua 0D13                ??_PWM_Initialize 0079  
                      ??_Puerta 0072                        ??___wmul 007D          __end_of_ADC_Initialize 0012  
                   __pdataBANK1 00B8                        ??_normal 0058               __size_of___altoft 0042  
                 ??_llenadoAgua 0079               __size_of___ftpack 006C            __size_of_Lcd_Command 00A2  
                     ___latbits 0002               __size_of___lwtoft 0014                   __pcstackBANK0 0020  
                 __pcstackBANK1 00BD                     sprintf@flag 002E                     sprintf@prec 002F  
              ___lwdiv@dividend 0072                        ?___aldiv 0070                        ?___awdiv 0070  
                      ?___ftdiv 0020                        ?___ftmul 0030                        ?___fttol 0040  
                      ?___lwdiv 0070                        ?___lwmod 0078                 ?_ADC_Initialize 0070  
             _MensajeFinalizado 09F7              ?_MensajeFinalizado 0070                        _ADC_Read 17A5  
             lavadoNormal@count 006B                        ?_reversa 0054                ___lwdiv@quotient 0075  
                      ?_sprintf 0022             __end_of_llenadoAgua 17A5             ??_MensajeFinalizado 0079  
               ___aldiv@divisor 0070                 ___aldiv@counter 0020                  ___wmul@product 0020  
                     clear_ram0 1729                      reversa@pwm 0054                        _GO_nDONE 00FA  
     __end_of_MensajeFinalizado 0A3D                    Lcd_Init@data 0075                      _ADCON0bits 001F  
                   __stringbase 0812                      _ADCON1bits 009F                        _PWM_Duty 0012  
             ___wmul@multiplier 0079                        _PWM_freq 00B9                        _Lcd_Init 0173  
                      _Lcd_Text 0A3D      __end_of_Digital_Initialize 0979                    Lcd_Text@data 0078  
    __end_of_ImprimirMenuLavado 0D9B                        Puerta@op 0070                __size_of___aldiv 008F  
         _ImprimirMenuPrincipal 03ED                __size_of___awdiv 0059                __size_of___ftdiv 00B8  
                      ___altoft 09B5                __size_of___ftmul 00D3                __size_of___fttol 008E  
              __size_of___lwdiv 003C                __size_of___lwmod 0032                        ___ftpack 0B2D  
            __end_of__stringtab 0812                        ___lwtoft 1743                     _llenadoAgua 177E  
                    sprintf@val 0030                 ___lwdiv@divisor 0070                 ___lwdiv@counter 0077  
                      __ptext10 0D9B                        __ptext11 0232                        __ptext20 0173  
                      __ptext12 00BB                        __ptext21 03ED                        __ptext13 09B5  
                      __ptext30 0009                        __ptext22 0D13                        __ptext14 0B2D  
                      __ptext23 0305                        __ptext15 17A5                        __ptext24 17CE  
                      __ptext16 09F7                        __ptext25 0979                        __ptext17 1731  
                      __ptext26 0A3D                        __ptext18 0A85                        __ptext27 0EB8  
                      __ptext19 0E29                        __ptext28 0F5A                        __ptext29 094E  
              __size_of_reversa 007B                __size_of_sprintf 00E8                     Lcd_CharCP@c 0072  
                 __size_of_main 01A0                        _minutAux 00A0                       normal@pwm 0054  
    __size_of_MensajeFinalizado 0046                       sprintf@ap 002D                       sprintf@sp 0032  
              ___lwmod@dividend 007A                ??_ADC_Initialize 0070                       stringcode 080A  
                      reversa@t 0056    ImprimirMenuPrincipal@casilla 0079          ?_ImprimirMenuPrincipal 0079  
                 ??_Lcd_Command 0070                        sprintf@c 0033                        sprintf@f 0022  
               ___lwmod@divisor 0078                 ___lwmod@counter 007D                        stringtab 0800  
                  ___aldiv@sign 0021  
